"use strict";(function(){const t={};t.doc={id:"id",field:["title","content"],store:["title","href","section"]};const e=FlexSearch.create("balance",t);window.bookSearchIndex=e,e.add({id:0,href:"/contact/",title:"Contacts",section:"Macaroni OS",content:`We will happy to receive your feedback about the software available, what is missing, and your help in improving the distro.
Discord You can reach us in our Discord Server and we are also in the Funtoo Discord Server.
Issues Tracker Our issue tracker is over our Github main repository.
If you find a bug or do you have some new feature request please open an issue here.
Support us with hardware Building packages requires resources and hardware. If you want to donate a node to attach to our Mottainai Cluster please contact me directly through our Discord Server.
`}),e.add({id:1,href:"/faq/",title:"Frequently Asked Questions",section:"Macaroni OS",content:`1. How update Macaroni Repositories URLs? In the last period due to the changes in the new domain and the stabilization of the Macaroni infra there are been a lot of changes in the repository URLs. Working with donated resources and/or free resources has the consequence that the changes could happen.
So, I will describe the better way to upgrade safe our repositories.
a) leave only the geaaru-repo-index repository enabled. This means to call luet repo disable for all others repositories
$# luet repo disable macaroni-commons mottainai-stable macaroni-funtoo $# luet repo list --enabled geaaru-repo-index Macaroni OS Repository Index Revision 4 - 2023-02-25 10:32:39 +0000 -00 Priority 1 - Type http b) At this point, it\u0026rsquo;s possible update the repository and get the new urls:
$# luet repo update üè† Repository: geaaru-repo-index Revision: 4 - 2023-02-25 10:32:39 +0000 -00 $# luet upgrade The upgrade creates the files /etc/luet/repos.conf.d/._cfg_\u0026lt;repo\u0026gt;.yml that could be merged with the command etc-update (in the old system) or with the command macaronictl etc-update in the more updated systems.
After the upgrade and the merge of the new configs the system is ready for the updates: luet repo update and luet upgrade.
It\u0026rsquo;s possible check the repositories urls with:
# luet repo list --urls --enabled geaaru-repo-index Geaaru Repository index Revision 4 - 2023-02-25 10:32:39 +0000 UTC Priority 1 - Type http Urls: * https://cdn.macaronios.org/mottainai/geaaru-repo-index macaroni-commons-dev Macaroni OS Commons Development Repository Revision 129 - 2023-03-03 22:16:31 +0000 UTC Priority 10 - Type http Urls: * https://dev.macaronios.org/macaroni-commons-dev/ macaroni-funtoo-systemd-dev Macaroni OS Funtoo Eagle Develop Repository Revision 452 - 2023-02-26 11:14:32 +0000 UTC Priority 2 - Type http Urls: * https://images.macaronios.org/macaroni-funtoo-systemd-dev/ mottainai-dev Mottainai Development Repository Revision 72 - 2023-02-25 23:47:52 +0000 UTC Priority 10 - Type http Urls: * https://dev.macaronios.org/mottainai-dev/ mottainai-stable Mottainai official Repository Revision 72 - 2023-02-25 23:47:52 +0000 UTC Priority 30 - Type http Urls: * https://dl.macaronios.org/repos/mottainai/ * https://cdn2.macaronios.org/repos/mottainai/ * https://macaronios.mirror.garr.it/repos/mottainai/ 2. What to do after the upgrade of the luet binary? I leave this point in the FAQ because I began to rewrite the Macaroni PMS and until I will rewrite the luet-build binary the luet repo update command executes some post-fetch operations on the downloaded tree to speed up the research, and to have the files used by the new solver available in the luet version 0.33.0 and followed.
So, after the upgrade of luet there are two things that is better to do:
$# luet database reindex This will rebuild the Bolt Database indexes and
$# luet repo update --force that download and executes again the post-fetch hooks in the downloaded tree.
One of the errors reported by the users when is not executed a full fetch of the Macaroni repositories after the upgrade is this:
ü§î Computing upgrade, please hang tight... üí§ Error: Package net-libs-4/webkit not found on map 3. Why luet search doesn\u0026rsquo;t return packages? Excluding the search of the packages installed, i mean with the --installed option, the luet search command works only when the enabled repositories are been synced.
It\u0026rsquo;s just needed to download one time the repositories tree and then all works fine.
$# luet repo update ... $# luet s macaronictl app-admin/macaronictl-0.6.2 app-admin/macaronictl-thin-0.6.2 # luet s portage-converter macaroni/luet-portage-converter-0.11.2 `}),e.add({id:2,href:"/blog/new-domain/",title:"macaronios.org is here!",section:"Blog",content:`After 1 year of incubation under the Funtoo Foundation, the Macaroni OS has now its domain macaronios.org and its infrastructure. Really, thanks to the Funtoo Foundation and Daniel Robbins for its support that helped to Macaroni OS to be here today.
From the infrastructure aspect nothing is changed, all compilation tasks are executed over MottainaiCI cluster but with less resource power for now.
We hope that the community will help us to maintain the infrastructure costs with donations over our Github Sponsor or with VMs donations for compilation.
New Github Organization With the review of the Macaroni OS domain, it\u0026rsquo;s been created a new and independent GitHub organization macaroni-os and migrated all Git repositories there.
Domain migration and users impacts The old domain *.macaroni.funtoo.org will expire soon, the existing users that are yet with the repository geaaru-repo-index configured with the Github URL will receive automatically the upgrade of the repository/* packages.
$# luet repo update ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 2 ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 117 ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 620 ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 55 $# luet upgrade ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 2 ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 117 ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 620 ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 55 ü§î Computing upgrade, please hang tight... üí§ üåè Using solver implementation solverv2 . üåé Completed compute upgrade analysis in 23323842 ¬µs. +-------------------------------------+-------------+-------------+-------------------+---------+ | PACKAGE | NEW VERSION | OLD VERSION | REPOSITORY | LICENSE | +-------------------------------------+-------------+-------------+-------------------+---------+ | repository/geaaru-repo-index | 20230118 | 20220819 | geaaru-repo-index | | | repository/macaroni-commons | 20230118 | 20211210 | geaaru-repo-index | | | repository/macaroni-funtoo | 20230118 | 20211210 | geaaru-repo-index | | | repository/mottainai-stable | 20230118 | 20220318 | geaaru-repo-index | | +-------------------------------------+-------------+-------------+-------------------+---------+ By going forward, you are also accepting the licenses of the packages that you are going to install in your system. Do you want to continue with this operation? [y/N]: Instead, the users with the new configuration could receive the new repositories address on change the content of the the /etc/luet/luet.yaml (if the geaaru-repo-index is configured inline and not through the repository config file or editing the file /etc/luet/repos.conf.d/geaaru-repo-index.yml with this content:
- name: \u0026#34;geaaru-repo-index\u0026#34; description: \u0026#34;Geaaru Repository index\u0026#34; type: \u0026#34;http\u0026#34; enable: true cached: true priority: 1 urls: - \u0026#34;https://cdn.macaronios.org/mottainai/geaaru-repo-index\u0026#34; - \u0026#34;https://raw.githubusercontent.com/geaaru/repo-index/gh-pages\u0026#34; After that to get the new updates just run:
$# macaronictl etc-update The map with the changes of the URL is available here.
What next? Hereinafter, our hot points for the near future:
We working to complete the review of the luet installer and his algorithms to reduce the memory usage, rewrite the solver and introduce the packages mask concept. This will permit us to begin on working a Macaroni release for ARM (Banana PI, Raspberry).
The terragon release will drop the support to Python 3.7 to leave active only Python 3.9.
Create a full and clear documentation of all Macaroni features.
When the first two points will be reached will start the integration of macaroni-ffs project related to the Funtoo FFS technology and permit users to have easy the toolchains for compilation
A lot of things are in our plan, stay tuned!
Additional thanks On setup of the new infrastructure, I want to thank the all people who helped me in setting up the Cloudflare services in about two days. Really, thanks.
`}),e.add({id:3,href:"/partners/garr/",title:"Consortium GARR",section:"Partners",content:`GARR is the ultra-broadband network dedicated to the Italian research and education community. Its main objective is to provide high-performance connectivity and to develop innovative services for the daily activities of researchers, professors and students as well as for international collaboration.
GARR network is designed and managed by Consortium GARR, a non-profit association founded under the auspices of the Ministry of Education, University and Research. The members are¬†CNR,¬†ENEA,¬†INAF, INFN, INGV and¬†CRUI Foundation, representing all Italian universities.
The Consortium GARR supply our primary mirror at macaronios.mirror.garr.it.
Thank you very much for your support.
`}),e.add({id:4,href:"/docs/getting-started/",title:"Getting Started",section:"Macaroni Linux OS",content:` Getting Started # Prerequisites # Macaroni OS Linux only supports AMD64 at the moment.
Get Macaroni OS # To begin playing with Macaroni you have a few options but before we get into the different possibilities, Here is some information about the available releases.
Release Description Macaroni Funtoo The core release based on OpenRC/SysVinit Funtoo system. Macaroni Funtoo Systemd A Funtoo SystemD release. The idea is to use it only for Server target and as experimental base rootfs where we will develop an alternative tool that will replace SystemD probably written in Golang but that will be compatible with part of SystemD files. Respect the Gentoo/Funtoo world, Macaroni tries to reduce the complexity of the others PMS and it doesn\u0026rsquo;t manage the SLOTs or better the SLOT is added as postfix of the category. For example the package sys-devel/gcc:9.2.0 is mapped as sys-devel-9.2.0/gcc.
Using docker container # $\u0026gt; docker run --rm -ti macaronios/funtoo-minimal 4e02286e61d3 / # luet repo update ‚†à Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.gz of 0.00 MB ( 0.00 MiB/s ) Downloaded repository.meta.yaml.tar.gz of 0.00 MB ( 0.00 MiB/s ) üè† Repository geaaru-repo-index revision: 1 - 2021-12-12 20:42:48 +0000 UTC ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 1 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.00 MB ( 0.00 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 5.57 MB ( 2.48 MiB/s ) üè† Repository macaroni-commons revision: 23 - 2022-01-11 16:08:20 +0000 UTC ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 23 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.53 MB ( 0.44 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 6.04 MB ( 6.78 MiB/s ) üè† Repository macaroni-funtoo revision: 77 - 2022-01-16 08:09:51 +0000 UTC ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 77 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.00 MB ( 0.01 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 0.27 MB ( 0.67 MiB/s ) üè† Repository mottainai-stable revision: 1 - 2022-01-14 15:54:04 +0000 UTC ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 1 4e02286e61d3 / # luet search pci sys-apps/pciutils-3.6.2+3 x11-libs/libpciaccess-0.16+3 4e02286e61d3 / # luet i sys-apps/pciutils ... 4e02286e61d3 / # luet cleanup Cleaned: 5 packages. Using an LXD container # The Funtoo \u0026amp; Macaroni teams supply their LXD images over a Simplestreams Server. To configure the LXD remote just run this command:
$\u0026gt; lxc remote add macaroni https://images.macaronios.org/lxd-images --protocol simplestreams --public and then check the available images:
$\u0026gt; lxc image list macaroni: Download the Macaroni ISO # Due to the migration to the new infrastructure and new domain, we have temporarily stopped the weekly ISOs, and we will review the links package in the near future.
For now, I will share only the last release and their ISOs. Hereinafter, the links:
ISO Name Description Size Sha256 Macaroni-Funtoo-Phoenix-Gnome-23.01.iso Gnome thin ISO to use as recovery ISO, to install Macaroni Funtoo Stable with Calamares. 1.774 GB Sha256 Macaroni-Funtoo-Phoenix-Server-23.01.iso Macaroni Server release. Start automatically Calamares to permit the Macaroni installation. 1.459 GB Sha256 Macaroni-Funtoo-Phoenix-Gnome-Devel-23.01.iso Macaroni Funtoo Gnome with subsets portage and devel enabled. Users that want to use Emerge with caution must be use this. 1.85 GB Sha256 Macaroni-Funtoo-Phoenix-Gnome-Live-23.01.iso Ready to use ISO with different tools for Office/School/Graphic that could be installed too. 2.88 GB Sha256 Macaroni-Funtoo-Phoenix-Server-Devel-23.01.iso Macaroni Server version with subsets portage and devel\` enabled. 1.524 GB Sha256 Macaroni-Funtoo-Phoenix-Xfce-23.01.iso Macaroni XFCE ISO Release. 1.622 GB Sha256 At the moment the ISOs and LXD images bigger aren\u0026rsquo;t cached by our CDN profile so could slow the download. I hope to resolve soon this issue.
All of the ISOs use Calamares as Installer.
The password of the macaroni user is macaroni.
Knows Issues # The current status of the Macaroni OS is related to its PMS that is under heavy development and it doesn\u0026rsquo;t yet support the requirements needed for a Desktop environment very well and is unstable.
The main issue is that the current upgrade process executes an uninstall of all packages to upgrade before beginning the installation of the new packages and without checking if there are changes. This may sometimes generate issues with X.
So, for the moment, we suggest that you upgrade a Desktop environment from terminal (just switch with CTRL+ALT+F1).
If used in a Container environment instead, that could be a valid and stable solution. In a container, the upgrade process is less important because, usually, the container is dropped and recreated from a new image. In this condition you could create a very optimized container thanks to the subsets feature available in the fork release of luet.
Macaroni doesn\u0026rsquo;t use the Funtoo ebuild in the installation phase, this means that the post-install scripts must be managed from the luet finalizer. In particular, the whip tool has been created to help in this job, and the whip-catalog to store all the hooks to call. For any Desktop environment, the post-install hooks could be configured to run correctly in all packages.
The whip tool can be run and the catalog can be displayed with this command:
$\u0026gt; whip list --table +-----------+---------------------+-----------------------------------------------------------------------+ | FILE | NAME | DESCRIPTION | +-----------+---------------------+-----------------------------------------------------------------------+ | gtk | mime_update_db | Update mime cache. | | gtk | gtk_update_icons | Update Gnome icons cache. | | gtk | glib_update_schemas | Update Glib Schemas. | | texlive | texlive_postinst | Setup texlive files. | | | | | | texlive | texlive_rebuild_fmt | Rebuild TeX formats. | | | | | | dbus | dbus_gen_machineid | Setup /etc/machine-id. | | eudev | eudev_setup | Validate Eudev setup. | | | | | | fonts | create_scale | Create fonts.scale file, used by the old server-side fonts subsystem. | | fonts | create_fonts_dir | Create fonts.dir file, used by the old server-side fonts subsystem. | | | | | | fonts | setup_all_fonts | Setup fonts. | | | | | | openrc | openrc_setup | Setup core OpenRC services. | | | | | | perl | postinst | Setup perl binaries links. | | | | | | polkit | polkit_setup | Setup env for polkitd. | | | | | | eclass_db | db_cleanup | Clean libdb* links and includes. | | | | | | eclass_db | db_fix_so | Fix links of /usr/include/db.h and .so | | | | | | elogind | elogind_setup | Check elogind setup. | | | | | | gdb | setup | Setup gdm files. | +-----------+---------------------+-----------------------------------------------------------------------+ A hook is callable with the hook subcommand:
$\u0026gt; whip hook gtk.gtk_update_icons gtk.glib_update_schemas Upgrade # Just:
$\u0026gt; luet repo update $\u0026gt; luet upgrade luet follow the same Funtoo/Gentoo idea about the configuration files, in particolar, if the file to install is related to a proctect directory and the file is already present then luet creates the file _cfg0001_\u0026lt;file\u0026gt; that could be merged with the classic etc-update or other similar software.
Search Packages # The current search engine uses regex to find the category/name string. The subcommand is callable with search or s.
$\u0026gt; luet search lxd-compose app-emulation/lxd-compose-0.16.3 or as a table:
$\u0026gt; luet s lxd-compose --table +---------------------------+---------+------------------+---------+ | PACKAGE | VERSION | REPOSITORY | LICENSE | +---------------------------+---------+------------------+---------+ | app-emulation/lxd-compose | 0.16.3 | mottainai-stable | GPL-3.0 | +---------------------------+---------+------------------+---------+ or as a JSON with metadata:
$\u0026gt; luet s lxd-compose -o json | jq { \u0026#34;packages\u0026#34;: [ { \u0026#34;License\u0026#34;: \u0026#34;GPL-3.0\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;app-emulation\u0026#34;, \u0026#34;files\u0026#34;: [ \u0026#34;usr/bin/lxd-compose\u0026#34; ], \u0026#34;hidden\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;lxd-compose\u0026#34;, \u0026#34;repository\u0026#34;: \u0026#34;mottainai-stable\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.16.3\u0026#34; } ] } or search between installed packages:
$\u0026gt; luet s lxd --installed Install a package # The subcommand is callable with install or i.
$\u0026gt; luet i app-emulation/lxd-compose Uninstall a package # The subcommand is callable with uninstall or rm.
$\u0026gt; luet rm app-emulation/lxd-compose Show files of a package # $\u0026gt; luet q files app-emulation/lxd-compose usr/bin/lxd-compose or as JSON array:
$\u0026gt; luet q files app-emulation/lxd-compose -o json [\u0026#34;usr/bin/lxd-compose\u0026#34;] or as YAML:
$\u0026gt; luet q files app-emulation/lxd-compose -o yaml - usr/bin/lxd-compose `}),e.add({id:5,href:"/docs/",title:"Macaroni Linux OS",section:"Macaroni OS",content:` Why Macaroni OS? # Supply a binary distro that follow the Sabayon OS ideas and permit to convert the rootfs to a pure Funtoo rootfs in a fast way if it\u0026rsquo;s needed for specific customizations or to help the distro fix issues.
You know, the world is buggy, it\u0026rsquo;s better to have a way to check and resolve the problems fast.
In the middle of the story, Macaroni OS wants to be an optimized distro for LXD containers, docker and singularity.
So, in summary, these are the core targets of the Macaroni OS Linux:
Container Optimized Through the subsets feature of the Luet tool will make it easy to have a thin rootfs and customize the files installed from a package and run CD/CI tasks and/or pipeline fast. Automation Share a way to build packages without a giant infrastructure but with the pros of CD/CI. Macaroni developer teams share how it\u0026rsquo;s possible to do this through lxd-compose or with a more scalable solution through Mottainai Server. Revolution Hotspot To be a good start point for revolutions within the Linux OS space with the synergy of the Funtoo Team. Macaroni Releases # Following the core targets just described in Macaroni there are different releases:
Release Codename Funtoo Release Description Phoenix 1.4-prime The core release based on OpenRC/SysVinit for Server and Desktop Eagle 1.4-prime + patches A Funtoo SystemD release. The idea is to use it only for Server target and as experimental base rootfs where we will develop an alternative tool that will replace SystemD probably written in Golang but that will be compatible with part of SystemD files. In this moment, this release has only Container based targets and Server services. Terragon next The next release based on OpenRC/SysVinit Funtoo system with Container oriented use flags. Major differences about GCC, Python
Macaroni OS Phoenix # The Phoenix release is the first release created and the only release at the moment for the Desktop. The codename phoenix is related to the immortal bird associated with Greek mythology that cyclically regenerates or is otherwise born again. Associated with the sun, a phoenix obtains new life by rising from the ashes of its predecessor. This is the reason I choose this name: to describe a new beginning and to remember us that also when others try to stop a dream, with the commitment it\u0026rsquo;s possible reborn and goes ahead.
In phoenix it\u0026rsquo;s used the OpenRC as an init system, it\u0026rsquo;s based on Funtoo 1.4-prime and so:
* GCC 9.2.0 * Glibc 2.33 * Python 3.7 (2.7 is available but will be dropped in the near future) * LLVM 11 The desktop environments available in this release are:
Desktop Environment Version Status ISO Available Gnome 3.36 stable yes XFCE 4.16 stable yes Enlightenment 0.25.4 experimental no KDE 5.22 experimental no As the first release a lot of things could be improved but it\u0026rsquo;s also true that the Desktop is something complex that requires a lot of effort and computing. We will work to clean up things and speed up the building phase that now it\u0026rsquo;s very expensive, in particular for the build of the funtoo-base seed based on Gnome Funtoo stage3.
Macaroni OS Eagle # The Eagle release is born to be used in container, it\u0026rsquo;s based on Funtoo 1.4-prime with patches to integrate SystemD as an init system.
Without the need to support the Desktop, the release is been compiled with server-oriented and X-less use flags. This permits to have core packages fewer dependencies and more optimized for containers.
Like phoenix also eagle is based on Funtoo 1.4-prime and so:
* GCC 9.2.0 * Glibc 2.33 * Python 3.7 (2.7 is available but will be dropped in the near future) * LLVM 11 Macaroni OS Terragon # The Terragon release is born to be used in container and it\u0026rsquo;s based on Funtoo Next that is the more innovative release of Funtoo.
Like for eagle release the terragon release is been compiled with server-oriented and X-less use flags.
Based on Funtoo Next some core packages are:
* GCC 11.3.0 * Glibc 2.33 * Python 3.9 `})})()