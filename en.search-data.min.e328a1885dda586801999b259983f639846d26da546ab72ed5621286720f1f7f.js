'use strict';(function(){const b={};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/docs/getting-started/',title:"Getting Started",section:"Macaroni Linux OS",content:"Getting Started #  Prerequisites #  Macaroni OS Linux only supports AMD64 at the moment.\nGet Macaroni OS #  To begin playing with Macaroni you have a few options but before we get into the different possibilities, Here is some information about the available releases.\n   Release Description     Macaroni Funtoo The core release based on OpenRC/SysVinit Funtoo system.   Macaroni Funtoo Systemd A Funtoo SystemD release. The idea is to use it only for Server target and as experimental base rootfs where we will develop an alternative tool that will replace SystemD probably written in Golang but that will be compatible with part of SystemD files.    Respect the Gentoo/Funtoo world, Macaroni tries to reduce the complexity of the others PMS and it doesn\u0026rsquo;t manage the SLOTs or better the SLOT is added as postfix of the category. For example the package sys-devel/gcc:9.2.0 is mapped as sys-devel-9.2.0/gcc.\nUsing docker container #  $\u0026gt; docker run --rm -ti macaronios/funtoo-minimal 4e02286e61d3 / # luet repo update ‚†à Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.gz of 0.00 MB ( 0.00 MiB/s ) Downloaded repository.meta.yaml.tar.gz of 0.00 MB ( 0.00 MiB/s ) üè† Repository geaaru-repo-index revision: 1 - 2021-12-12 20:42:48 +0000 UTC ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 1 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.00 MB ( 0.00 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 5.57 MB ( 2.48 MiB/s ) üè† Repository macaroni-commons revision: 23 - 2022-01-11 16:08:20 +0000 UTC ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 23 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.53 MB ( 0.44 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 6.04 MB ( 6.78 MiB/s ) üè† Repository macaroni-funtoo revision: 77 - 2022-01-16 08:09:51 +0000 UTC ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 77 Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) Downloaded tree.tar.zst of 0.00 MB ( 0.01 MiB/s ) Downloaded repository.meta.yaml.tar.zst of 0.27 MB ( 0.67 MiB/s ) üè† Repository mottainai-stable revision: 1 - 2022-01-14 15:54:04 +0000 UTC ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 1 4e02286e61d3 / # luet search pci sys-apps/pciutils-3.6.2+3 x11-libs/libpciaccess-0.16+3 4e02286e61d3 / # luet i sys-apps/pciutils ... 4e02286e61d3 / # luet cleanup Cleaned: 5 packages. Using an LXD container #  The Funtoo \u0026amp; Macaroni teams supply their LXD images over a Simplestreams Server. To configure the LXD remote just run this command:\n$\u0026gt; lxc remote add macaroni https://images.macaroni.funtoo.org/lxd-images --protocol simplestreams --public and then check the available images:\n$\u0026gt; lxc image list macaroni: Download the Macaroni ISO #  Macaroni OS ISOs can be downloaded from Funtoo CDN.\nAll of the ISOs use Calamares as Installer.\nThe password of the macaroni user is macaroni.\nKnows Issues #  The current status of the Macaroni OS is related to its PMS that is under heavy development and it doesn\u0026rsquo;t yet support the requirements needed for a Desktop environment very well and is unstable.\nThe main issue is that the current upgrade process executes an uninstall of all packages to upgrade before beginning the installation of the new packages and without checking if there are changes. This may sometimes generate issues with X.\nSo, for the moment, we suggest that you upgrade a Desktop environment from terminal (just switch with CTRL+ALT+F1).\nIf used in a Container environment instead, that could be a valid and stable solution. In a container, the upgrade process is less important because, usually, the container is dropped and recreated from a new image. In this condition you could create a very optimized container thanks to the subsets feature available in the fork release of luet.\nMacaroni doesn\u0026rsquo;t use the Funtoo ebuild in the installation phase, this means that the post-install scripts must be managed from the luet finalizer. In particular, the whip tool has been created to help in this job, and the whip-catalog to store all the hooks to call. For any Desktop environment, the post-install hooks could be configured to run correctly in all packages.\nThe whip tool can be run and the catalog can be displayed with this command:\n$\u0026gt; whip list --table +-----------+---------------------+-----------------------------------------------------------------------+ | FILE | NAME | DESCRIPTION | +-----------+---------------------+-----------------------------------------------------------------------+ | gtk | mime_update_db | Update mime cache. | | gtk | gtk_update_icons | Update Gnome icons cache. | | gtk | glib_update_schemas | Update Glib Schemas. | | texlive | texlive_postinst | Setup texlive files. | | | | | | texlive | texlive_rebuild_fmt | Rebuild TeX formats. | | | | | | dbus | dbus_gen_machineid | Setup /etc/machine-id. | | eudev | eudev_setup | Validate Eudev setup. | | | | | | fonts | create_scale | Create fonts.scale file, used by the old server-side fonts subsystem. | | fonts | create_fonts_dir | Create fonts.dir file, used by the old server-side fonts subsystem. | | | | | | fonts | setup_all_fonts | Setup fonts. | | | | | | openrc | openrc_setup | Setup core OpenRC services. | | | | | | perl | postinst | Setup perl binaries links. | | | | | | polkit | polkit_setup | Setup env for polkitd. | | | | | | eclass_db | db_cleanup | Clean libdb* links and includes. | | | | | | eclass_db | db_fix_so | Fix links of /usr/include/db.h and .so | | | | | | elogind | elogind_setup | Check elogind setup. | | | | | | gdb | setup | Setup gdm files. | +-----------+---------------------+-----------------------------------------------------------------------+ A hook is callable with the hook subcommand:\n$\u0026gt; whip hook gtk.gtk_update_icons gtk.glib_update_schemas Upgrade #  Just:\n$\u0026gt; luet repo update $\u0026gt; luet upgrade luet follow the same Funtoo/Gentoo idea about the configuration files, in particolar, if the file to install is related to a proctect directory and the file is already present then luet creates the file _cfg0001_\u0026lt;file\u0026gt; that could be merged with the classic etc-update or other similar software.\nSearch Packages #  The current search engine uses regex to find the category/name string. The subcommand is callable with search or s.\n$\u0026gt; luet search lxd-compose app-emulation/lxd-compose-0.16.3 or as a table:\n$\u0026gt; luet s lxd-compose --table +---------------------------+---------+------------------+---------+ | PACKAGE | VERSION | REPOSITORY | LICENSE | +---------------------------+---------+------------------+---------+ | app-emulation/lxd-compose | 0.16.3 | mottainai-stable | GPL-3.0 | +---------------------------+---------+------------------+---------+ or as a JSON with metadata:\n$\u0026gt; luet s lxd-compose -o json | jq { \u0026#34;packages\u0026#34;: [ { \u0026#34;License\u0026#34;: \u0026#34;GPL-3.0\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;app-emulation\u0026#34;, \u0026#34;files\u0026#34;: [ \u0026#34;usr/bin/lxd-compose\u0026#34; ], \u0026#34;hidden\u0026#34;: false, \u0026#34;name\u0026#34;: \u0026#34;lxd-compose\u0026#34;, \u0026#34;repository\u0026#34;: \u0026#34;mottainai-stable\u0026#34;, \u0026#34;target\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;0.16.3\u0026#34; } ] } or search between installed packages:\n$\u0026gt; luet s lxd --installed Install a package #  The subcommand is callable with install or i.\n$\u0026gt; luet i app-emulation/lxd-compose Uninstall a package #  The subcommand is callable with uninstall or rm.\n$\u0026gt; luet rm app-emulation/lxd-compose Show files of a package #  $\u0026gt; luet q files app-emulation/lxd-compose usr/bin/lxd-compose or as JSON array:\n$\u0026gt; luet q files app-emulation/lxd-compose -o json [\u0026#34;usr/bin/lxd-compose\u0026#34;] or as YAML:\n$\u0026gt; luet q files app-emulation/lxd-compose -o yaml - usr/bin/lxd-compose "}),a.add({id:1,href:'/docs/',title:"Macaroni Linux OS",section:"Macaroni Linux OS",content:"Why Macaroni OS? #  Supply a binary distro that follow the Sabayon OS ideas and permit to convert the rootfs to a pure Funtoo rootfs in a fast way if it\u0026rsquo;s needed for specific customizations or to help the distro fix issues.\nYou know, the world is buggy, it\u0026rsquo;s better to have a way to check and resolve the problems fast.\nIn the middle of the story, Macaroni OS wants to be an optimized distro for LXD containers, docker and singularity.\nSo, in summary, these are the core targets of the Macaroni OS Linux:\nContainer Optimized Through the subsets feature of the Luet tool will make it easy to have a thin rootfs and customize the files installed from a package and run CD/CI tasks and/or pipeline fast.  Automation Share a way to build packages without a giant infrastructure but with the pros of CD/CI. Macaroni developer teams share how it\u0026rsquo;s possible to do this through lxd-compose or with a more scalable solution through Mottainai Server.  Revolution Hotspot To be a good start point for revolutions within the Linux OS space with the synergy of the Funtoo Team.   "})})()