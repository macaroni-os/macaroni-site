"use strict";(function(){const t={};t.doc={id:"id",field:["title","content"],store:["title","href","section"]};const e=FlexSearch.create("balance",t);window.bookSearchIndex=e,e.add({id:0,href:"/contact/",title:"Contacts",section:"Macaroni OS",content:`We would be happy to receive your feedback about the software available, what is missing, and your help in improving the distro.
Discord You can reach us in our Discord Server and we are also in the Funtoo Discord Server.
Issues Tracker Our issue tracker is over at our Github main repository.
If you find a bug or have some new feature request please open an issue here.
M.A.R.K. Issues Tracker The M.A.R.K. stack has his issue tracker.
If you find a bug or have some new feature request please open an issue here.
Support us with hardware Building packages requires resources and hardware. If you want to donate a node to attach to our Mottainai Cluster please contact me directly through our Discord Server.
`}),e.add({id:1,href:"/faq/",title:"Frequently Asked Questions",section:"Macaroni OS",content:`1. How update Macaroni Repositories URLs? In the last period due to the changes in the new domain and the stabilization of the Macaroni infra there are a lot of changes in the repository URLs. Working with donated resources and/or free resources has the consequence that changes could happen.
So, I will describe the better way to upgrade our repositories safely.
a) leave only the geaaru-repo-index repository enabled. This means to call luet repo disable for all others repositories
$# anise repo disable macaroni-commons mottainai-stable macaroni-funtoo $# anise repo list --enabled geaaru-repo-index Macaroni OS Repository Index Revision 4 - 2023-02-25 10:32:39 +0000 -00 Priority 1 - Type http b) At this point, it\u0026rsquo;s possible to update the repository and get the new urls:
$# anise repo update üè† Repository: geaaru-repo-index Revision: 4 - 2023-02-25 10:32:39 +0000 -00 $# anise upgrade The upgrade creates the files /etc/luet/repos.conf.d/._cfg_\u0026lt;repo\u0026gt;.yml that could be merged with the command etc-update (in the old system) or with the command macaronictl etc-update in more updated systems.
After the upgrade and the merge of the new configs the system is ready for the updates: anise repo update and anise upgrade.
It\u0026rsquo;s possible to check the repository urls with:
# anise repo list --urls --enabled geaaru-repo-index Geaaru Repository index Revision 4 - 2023-02-25 10:32:39 +0000 UTC Priority 1 - Type http Urls: * https://cdn.macaronios.org/mottainai/geaaru-repo-index macaroni-commons-dev Macaroni OS Commons Development Repository Revision 129 - 2023-03-03 22:16:31 +0000 UTC Priority 10 - Type http Urls: * https://dev.macaronios.org/macaroni-commons-dev/ macaroni-funtoo-systemd-dev Macaroni OS Eagle Develop Repository Revision 452 - 2023-02-26 11:14:32 +0000 UTC Priority 2 - Type http Urls: * https://images.macaronios.org/macaroni-funtoo-systemd-dev/ mottainai-dev Mottainai Development Repository Revision 72 - 2023-02-25 23:47:52 +0000 UTC Priority 10 - Type http Urls: * https://dev.macaronios.org/mottainai-dev/ mottainai-stable Mottainai official Repository Revision 72 - 2023-02-25 23:47:52 +0000 UTC Priority 30 - Type http Urls: * https://dl.macaronios.org/repos/mottainai/ * https://cdn2.macaronios.org/repos/mottainai/ * https://macaronios.mirror.garr.it/repos/mottainai/ 2. What to do after the upgrade of the anise binary? I leave this point in the FAQ because I began to rewrite the Macaroni PMS and until I will rewrite the luet-build binary the luet repo update command executes some post-fetch operations on the downloaded tree to speed up the research, and to have the files used by the new solver available in the luet version 0.33.0 and followed.
So, after the upgrade of luet there are two things that are better to do:
$# anise database reindex This will rebuild the Bolt Database indexes and
$# anise repo update --force that downloads and executes again the post-fetch hooks in the downloaded tree.
One of the errors reported by the users when is not executed a full fetch of the Macaroni repositories after the upgrade is this:
ü§î Computing upgrade, please hang tight... üí§ Error: Package net-libs-4/webkit not found on map 3. Why anise search doesn\u0026rsquo;t return packages? Excluding the search of the packages installed, I mean with the --installed option, the anise search command works only when the enabled repositories have been synced.
It\u0026rsquo;s just needed to download one time the repository tree and then all works fine.
$# anise repo update ... $# anise s macaronictl app-admin/macaronictl-0.6.2 app-admin/macaronictl-thin-0.6.2 # anise s portage-converter macaroni/anise-portage-converter-0.11.2 4. luet or anise? What is the difference? The tool anise is the Macaroni OS Package Manager that previously was called luet. We will definitively rename it when we have completed the refactor of anise-build tool.
`}),e.add({id:2,href:"/blog/phoenix-24.04/",title:"Releases 24.04 ready!",section:"Blog",content:`We are excited to announce the releases of Phoenix 24.04, Terragon 24.04 and Eagle 24.04! Thank you to all people help on this!
This release proves that we aren\u0026rsquo;t only a distribution that uses Funtoo but also tries to explore new areas for both the Funtoo Community and our users. We want to help the Opensource world to increase its popularity and its features or at least try. This is a hard mission, that requires time, but we believe in this and we will always combat this.
We have finally a macaronios.org email accounts that helps to validate our works in our projects.
Call to the Opensource World In the last period, a somber story has been shared: the xz backdoor. I think that this is one of the bad things that happened in the last period of the open-source world. I hope that this will not influence people\u0026rsquo;s choice of Linux, which in my opinion is one of the best systems. Instead, I hope that people continue to support, help, and improve the Opensource software in this difficult period where a lot of Opensource projects have changed their licenses.
We need to help Opensource because this is the means that we permit to have open tools and freedom. Not like in the proprietary software where other people choose what we can do with our computer.
A few months ago I found an interesting YouTube video done by an Italian Youtuber (aka morrolinux) with an interview with Lorenzo Faletra (aka palinuro) the Creator of Parrot OS (an alternative to Kali Linux). In this interview, palinuro shared that Opensource World had and has a decline not only for the software but for the use of the Computer as a terminal. Youngs and professionals are more oriented to an easy environment (easy only as an idea IMHO) that uses apps, Tablets, and mobiles. Products for education are only available for Tablets and not for PCs. I agree with them that this is terrible for the future and our children. We need Opensource to share a tool that could be used not only to give us the freedom to write our software but also that help us to understand how the computer works and what software is running when we use it. We need to help users to open their creativity. Not just accept that the market share said what is possible and we can\u0026rsquo;t change it.
Just to avoid repeating things already felt I conclude this little preface with two important points:
* We NEED support from young hackers and users to move ahead not only for Macaroni OS but for all Opensource OSs and Projects! Take a little slice of your time and help! * Opensource OSs Maintainers: we NEED to work together to resolve the gap between our OS and other proprietary OS in a way that normal users understand how much our system is more stable and efficient than the others and that this system could be used for daily work. Thanks to morrolinux and palinuro to sharing this video.
New Xorg and Xwayland servers With the help of the Funtoo Developers and Contributors, we are happy to share that we have upgraded Xorg and Xwayland to the latest version available. This is an important upgrade that improves the support of the multi-GPU\u0026rsquo;s system and it\u0026rsquo;s a big step for the future upgrade of the Gnome packages. A lot of distributions have begun to move their default Desktop with Wayland technology and we finally have a way to permit this integration also in Macaroni. At the moment, we don\u0026rsquo;t consider Wayland ready for Production for two important elements: the Pipewire integration is not yet ready (but just because we need to engineer the solution but we have already tested that it works); the NVIDIA support with the hardware tested it\u0026rsquo;s pretty terrible.
The new servers fix tons of CVEs and it\u0026rsquo;s an important upgrade for the security.
Working with Wayland integration I see how much it\u0026rsquo;s bad the integration of NVIDIA with multi-GPUs laptop and I began to write a tool that helps to control the GPU configuration, what drivers are available, and what kernel drivers are installed. The tool is gpu-configurator and it\u0026rsquo;s pretty young and incomplete but following what I did in the past in Sabayon about detecting the right NVIDIA driver or Nouveau to use, I\u0026rsquo;m trying to write something that could help normal users with the automatic configuration. Another important aspect, that requires a review of the existing ebuild from Funtoo that was born with a different target, is the possibility of installing at the same time different NVIDIA drivers version and give a way to shift between one version and another through gpu-configurator to help users on find the better setup. I saw how easy it is to have an unstable NVIDIA setup just by changing the kernel branch and/or NVIDIA driver version and to have a tool that helps easily the testing of the different versions it\u0026rsquo;s a good point.
The gpu-configurator helps on retrieve the existing EGL and Vulkan ICD files availables and disable NVIDIA GBM backend when it\u0026rsquo;s broken.
An example with the command to show system configuration:
$\u0026gt; gpu-configurator show Copyright (c) 2024 - Macaroni OS - gpu-configurator - 0.1.1 --------------------------------------------------------------------- Hostname:	nevyl GPUs:	2 - NVIDIA Corporation TU106M [GeForce RTX 2060 Mobile] [10de:1f15] kernel driver in use: nvidia - Advanced Micro Devices, Inc. [AMD/ATI] Picasso [1002:15d8] kernel driver in use: amdgpu EGL External Platforms Configs Directories: - /usr/share/egl/egl_external_platform.d * 15_nvidia_gbm.json Vulkan Layers Configs Directories: - /usr/share/vulkan/explicit_layer.d * VkLayer_khronos_validation.json - /usr/share/vulkan/implicit_layer.d * VkLayer_MESA_device_select.json * nvidia_layers.json Vulkan ICD Configs Directories: - /usr/share/vulkan/icd.d * broadcom_icd.x86_64.json * intel_icd.x86_64.json * nvidia_icd.json * radeon_icd.x86_64.json GBM Backend Librarires: - nvidia-drm_gbm.so (disabled) NVIDIA Drivers: Active version: 535.86.05 Available: - 535.86.05 (with kernel module) NVIDIA Kernel Modules Available: * 535.86.05 - 6.1.87-macaroni * 535.86.05 - 6.6.28-macaroni A more detailed description and guide will be available soon in our Documentation pages.
The previous notes about NVIDIA issues are not present in the Xorg server which remains for now the stable setup.
Waydroid on Macaroni Related to the initial speech about the need to help users find a safe and creative environment we have worked these months to integrate an interesting project like Waydroid with some patches. Waydroid uses LXC technology to run a container with a LineageOS Android system. Through this container, it is possible to run Android apps (for amd64 only atm) and supported Android Games like Desktop applications that became available to the users like all other installed applications. Waydroid uses Wayland technology that as described in the previous chapter is experimental but if the video cards are well-supported it\u0026rsquo;s very cool.
In addition, to have Waydroid work it\u0026rsquo;s needed the binder kernel driver that is been added by default in our kernels.
Considering that in Macaroni we have Gnome 3.36, Waydroid with some video cards suffers from the Mutter RGB color issue described in the upstream website. We will try to patch this in the next release.
To a complete list of the available features you could read the official documentation.
Flatpak integration The new release improve the integration between flatpak and the Desktop. The flatpak application could be managed by Gnome Software tool or in KDE from Discover.
Users with an already Macaroni installed system could be have these feature work correctly on enable by default the fuse driver kernel:
$\u0026gt; echo \u0026#34;fuse\u0026#34; \u0026gt; /etc/modules.load.d/fuse.conf $\u0026gt; anise i gnome-software $\u0026gt; whip h gtk.postinst Phoenix 24.04 supplies the last flatpak release 1.14.6 that fix CVE-2024-32462.
NVIDIA Open Kernel Drivers Considering that our work about stabilize the NVIDIA integration is yet in progress, we have to integrate the NVIDIA kernel opensource driver as experiment and study. The complete integration will be improved in the next releases.
With a speedy analysis, I saw that the NVIDIA Open Kernel Drivers don\u0026rsquo;t resolve the problems with Wayland.
To test the Open kernel driver you need to replace existing kernel driver with the following steps:
$\u0026gt; anise rm kernel-6.1/nvidia-kernel-modules $\u0026gt; anise i kernel-6.1/nvidia-kernel-open-modules $\u0026gt; # regenerate initrd images $\u0026gt; macaronictl kernel gi --all --set-links --purge --grub New ZEN Kernel available We have added the new linux-zen kernel to our tree.
Zen Kernel is a fork of Linux that applies out-of-tree features, early backports, and fixes, that impact desktop usage of Linux. More details are available on upstream FAQ.
The installation of this kernel could be done through macaronictl.
macaronictl v0.10.0 is out! The macaronictl is been updated to support the new ZEN Kernels. In particular, in our kernel packages, we have added the kernel.type labels to identify new kernel types. This label is used to manage correctly the zen kernels.
$\u0026gt; macaronictl kernel availables | KERNEL | KERNEL VERSION | PACKAGE VERSION | EOL | LTS | RELEASED | TYPE | |----------|----------------|-----------------|-----------|-------|------------|---------| | macaroni | 4.14.335 | 4.14.335 | Jan, 2024 | true | 2017-11-12 | vanilla | | macaroni | 5.10.215 | 5.10.215 | Dec, 2026 | true | 2020-12-13 | vanilla | | macaroni | 5.15.156 | 5.15.156 | Dec, 2026 | true | 2021-10-31 | vanilla | | macaroni | 5.4.274 | 5.4.274 | Dec, 2025 | true | 2019-11-24 | vanilla | | macaroni | 6.1.87 | 6.1.87 | Dec, 2026 | true | 2022-12-11 | vanilla | | macaroni | 6.6.28 | 6.6.28 | Dec, 2026 | true | 2023-10-30 | vanilla | | macaroni | 6.7.12 | 6.7.12 | N/A | false | 2024-01-07 | vanilla | | macaroni | 6.7.9-zen1 | 6.7.9+8 | N/A | false | 2024-01-07 | zen | | macaroni | 6.8.7 | 6.8.7 | N/A | false | 2024-03-10 | vanilla | | macaroni | 6.8.6-zen1 | 6.8.6 | N/A | false | 2024-03-10 | zen | anise-build refactor started! We are happy to share that finally the refactor of anise-build tool has started.
We begin to share new features incoming:
it reduces the number of Docker layers used between the pre-build and final Docker image
it uses the ENVS command using multiple environment variables in one single command. This reduces again the layers used.
it improves the integration with tar-formers library to speed up the export phase
it uses the new Helm render integration from lxd-compose project and helps diagnose with a preview of the rendered file.
We need to complete the solver integration for a first beta release but we think that for this summer the new tool will be ready for production. This means that the Macaroni ARM release will arrive soon.
A lot of new features will be added. Stay tuned!
Gnome Wayland ISO To helps the testing of Wayland integration we have create a new Gnome Wayland ISO that uses XWayland by default.
Phoenix 24.04 is out! In additional to the points described in the introduction, in evidence we have:
Open VM Tools 12.4.0
Brave 1.65.114
Firefox 125.0.3
Google Chrome 124.0.6367.60
Vivaldi 6.7.3329.9
Github Cli 2.48.0
Waydroid 1.4.2
Prometheus 2.51.2
Incus 6.0.0
LXD 5.20
Apache Server 2.4.59
KDE Apps 23.08.2
KDE Frameworks 5.111.0
ZFS 2.2.3
LxQt 1.4.0
Funtoo Metatools 1.3.6
Xorg Server 21.1.13
XWayland 23.2.6
OpenJDK 21.0.2
A lot of new packages are been added.
See the complete changelog of Phoenix 24.04 release.
The new ISOs will be available in the next weeks.
Eagle 24.04 is out! In evidence:
Apache Server 2.4.59 (with Security fix)
Incus 6.0.0
NodeJS 20.12.12 (it\u0026rsquo;s possible install Nodejs 14 with masking)
Rust 1.77.2
Prometheus 2.51.2
See the complete changelog of Eagle 24.04 release.
Terragon 24.04 is out! In evidence:
Apache Server 2.4.59 (with Security fix)
Incus 6.0.0
NodeJS 20.12.12
Rust 1.77.2
Prometheus 2.51.2
See the complete changelog of Terragon 24.04 release.
What next? Hereinafter, out hot points in our backlog:
Complete the first beta release of new anise-build tool to finally rename luet in anise
Starting setup of labs repository
Continue the improvement of our documentation
Integrate Pipewire with Wayland and/or alternative of Pulseaudio
Improve gpu-configurator tool support NVIDIA cards setup.
Add Debian and XanMod kernels.
We are waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:3,href:"/blog/phoenix-23.12.01/",title:"Phoenix 23.12.01, Eagle 23.12.01 and Terragon 23.12!",section:"Blog",content:`Happy new year to all Macaroni OS and Funtoo users!
We are happy to announce a new bugfix release for Phoenix and Eagle 23.12.01 based on the tree of 23.12 and the release Terragon 23.12:
We have autogen the Apache package, a fix that will be available for Funtoo users in harvester/24.01 soon. This permits an upgrade to version 2.4.58 with tons of security fixes. See later for the details.
Phoenix 23.12.01 supplies a new version of the Poppler package with a fix of the use flags used. Now the PDFs with JPEG or PNG are correctly visible.
The release v0.4.0 of the Incus project is now available in the tree of all our releases.
The kernel 6.6 is now available but without the NVIDIA driver for the moment caused by some issues with symbols exporting as described here.
The kernel 6.7 is now been added in the tree without extra kernel modules.
The release Phoenix 23.12.01 uses Macaroni Security 24.01 tag.
We have fixed an important issue in the wrapper script of Google Chrome, Brave that now permits opening the browser with the clicked link. This fix needs macaronictl v0.9.12.
Security With the upgrade of the Apache package these the CVE fixed in all releases:
CVE-2023-43622 CVE-2023-45802 CVE-2023-25690 CVE-2023-27522 CVE-2006-20001 CVE-2022-23943 CVE-2022-22721 CVE-2022-22720 CVE-2022-22719 CVE-2022-31813 CVE-2022-30556 CVE-2022-30522 CVE-2022-29404 CVE-2022-28615 CVE-2022-28614 CVE-2022-28330 CVE-2022-26377 CVE-2021-44224 CVE-2021-44790 CVE-2021-42013 CVE-2021-41524 CVE-2021-41773 Phoenix 23.12.01 is out! In additional to the points described in the introduction, in evidence we have:
Incus v0.4.0
Apache 2.4.58
Added package dev-vsc/hub 2.14.2 for CD/CI processes.
VSCode v1.85.1
VSCodium v1.85.1.23348
PyCharm Community v2023.3.2
Thunderbird v115.6.1
Discord v0.0.40
Github Cli v2.42.0
Google Chrome v120.0.6099.216
Vivaldi v6.5.3206.53
Criu 3.19
See the complete changelog of Phoenix 23.12.01 release and Security 24.01 release.
Eagle 23.12.01 is out! In additional to the points described in the introduction, in evidence we have:
Incus v0.4.0
Apache 2.4.58 with the fix of the logrotate file
Added Numpy v1.21.5
See the complete changelog of Eagle 23.12.01 release.
Terragon 23.12 is out! In additional to the points described in the introduction, in evidence we have:
Incus v0.4.0
Binutils v2.40
GCC 12.3.0 is now available as optional compiler but for now we maintain 11.3.0 as main system package.
LXD v5.20
MongoDB v4.4.27
Rust v1.74.1
Grafana v10.2.3
Apache v2.4.58
Vim v9.0.2184
Prometheus v2.48.1
Bind v9.18.21
Haproxy v2.6.16
Meson v1.3.0
Funtoo Metatools v1.3.5
Util Linux v2.93.3
Caddy v2.7.6
See the complete changelog of Terragon 23.12 release.
What next? Hereinafter, out hot points in our backlog:
The rewrite of the anise-build (luet-build) tool is in progress. We hope to have the new release in two or three months.
Continue the improvement of our documentation
We are waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:4,href:"/blog/phoenix-23.12/",title:"Phoenix 23.12 and Eagle 23.12!",section:"Blog",content:`Macaroni OS is about two years old and we want to thank all the people who helped to reach this result.
Thank you!
For this reason, without to have a complete build pipeline for a new version of the Phoenix release, we want to tag the release 23.12 of Macaroni Phoenix with anothers big steps:
This releaes contains the upgrade of ZFS to version 2.2.2 with important bugfix of the release 2.2. We suggest to upgrade to this release really soon. The details are in the official site with important fix for a data corruption bug.
We are happy to announce that after an intensive work, Macaroni supply a KDE based ISO! We consider this first integration experimental but there are a lot of applications of the KDE family and we love the KDE Connect tool that permits to integration remote control from mobile devices or The ISO by default uses a Wayland based integration related to a patched Xorg release with the same version available in Funtoo where the Xwayland binary was yet supplied by the same package. The new versions of the Xorg server supply two different tarballs for Xwayland and X11 and we hope to autogen all these stuff in 2024. Considering this, could be possible that could be better to use the X11 implementation if you have issues with your video card, but could be helpfull to receive feedback about how it works from users in our Bug tracker.
With the release of the new ZFS version and the new LXD version is now possible to create storage pool vdev where setup a specific filesytem, like XFS for a native integration for Docker over LXD/Incus. The new Topix node uses this solution to build packages!
This release contains the experimental package of the Incus containers manager at version 0.3, the fork project started from LXD. We hope to complete the autogen file of this package soon and to add the package in the Funtoo Community.
The package neofetch now contains the Macaroni OS patch with our logo, package that will be replaced by hyfetch in the near future. The original project (\`dylanaraps/neofetch) seems no longer maintained. See our PR for details.
So, before the news about our new releases, we wish to all Macaroni and Funtoo users an Happy New Year!
Phoenix 23.12 is out! In additional to the points described in the introduction, in evidence we have:
Open VM Tools 12.3.5
Krita 5.1.5
Brave 1.60.125
Firefox 120.0
Google Chrome 119.0.6045.199
Vivaldi 6.4.3160.47
Github Cli 2.39.2
Inkscape 1.3.2
Blender 4.0.1
i3 4.23
Funtoo Metatools 1.3.5
A lot of new packages are been added.
See the complete changelog of Phoenix 23.12 release.
The new ISOs will be available in the next weeks.
Macaroni Games 23.11 is out! We are happy to share that in the previous month we have tagged the first release of th Macaroni Games repository.
In evidence:
Scorched 3D 44
Wesnoth 1.16.10
Warzone 2100 3.2.3
We will work on integrate emulators in 2024.
See the complete changelog of Macaroni Games 23.11 release.
Hereinafter, the step to add this new repository:
$\u0026gt; anise install repository/macaroni-games $\u0026gt; anise repo update Eagle 23.12 is out! Finally, also the Eagle release is been moved to Funtoo Next, this includes all improved described in the previous blog about Phoenix 23.11 (GCC 11.3.0, Python 3.9, etc.) and a lot of Security fix.
We suggestion to move soon to the release 23.12.
See the complete changelog of Eagle 23.12 release.
Funtoo LXD/Incus images Many changes happen in the last period around the Linux Containers world.
In the middle of this, we fixed an issue in the last Funtoo Next tarball related to the DHCPCD tool that has been downgraded as visible in the Funtoo Bug tracker.
So, we think that the Funtoo Next images will be available again in 2024 on the Linux Containers Image server.
What next? Hereinafter, out hot points in our backlog:
Will be our first priority to complete the first rewrite of the anise-build (luet-build) tool and improve our building process to complete the rebranding of our Package Manager.
Starting setup of labs repository
Continue the improvement of our documentation
We are waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:5,href:"/blog/phoenix-23.11/",title:"New Phoenix 23.11 based on Funtoo Next!",section:"Blog",content:`We are happy to announce that after three intense months we have finally completed the migration of Macaroni Phoenix to a Funtoo Next based system.
This is a really good milestone for us because after two years we have been a big step ahead, before becoming an independent project, entering in the Docker Sponsored program, and now with the first big release upgrade. The world is buggy so we are sure that something will be also present in this first big step but we hope the community and the users will be happy about how things grow. We have a lot of things to do, so stay tuned!
At the moment, the Funtoo Community officially doesn\u0026rsquo;t support the upgrade of a Funtoo 1.4 filesystem to Funtoo Next and we are happy to have a way that permits, eventually with a more tested tuning and with feedback from users, to help Funtoo users in this. We think that is important to create synergy between the community groups because only together we can grow fast and strong. This is the reason we have worked a lot to have a first version of the anise-portage-converter tool that could be easily used to work with anise (the new name of the luet tool) and emerge.
So, to help Funtoo users to identify the differences between Funtoo and Macaroni we have added a new Funtoo Zone area in the documentation page that wants to help to see how the two worlds can work together.
So, trying to organize the tons of pieces of information we have to share we divide these by argument hereinafter.
Phoenix 23.11, the reborn! The Phoenix release is been our first release of Macaroni OS and only later with the Terragon and Eagle release we have found a better way to organize the build process to reduce the build time.
So, for this release, a lot is been done under the hood to reorganize the build pipeline to help integrate new software in the next releases. Just you can consider that the seed/funtoo-base of the 1.4-prime release was based on stage3-gnome with a lot of profiles enabled. This was expensive as time, it took about 16 hours to build that seed every time. Now we start from a Funtoo stage3 base that takes about 4 hours the build and all other packages are divided into different \u0026ldquo;races\u0026rdquo;. We tried to divide the races to divide the groups of packages and frameworks to build, for example, the Gtk stuff, qt stuff, xorg stuff, etc. This will permit to user to experiment on integrating new versions in a clearer way.
In this rework, we have rebuilt all packages and others will arrive in the next releases. At the moment, the new release contains about 2800 packages but we have decided to follow the kits paradigm for the games. We building the new macaroni-games repository that will supply the Games and the emulators instead of having them in the main repository.
Unluckily, when this big job started the GCC 12 was not available yet in Funtoo tree, for this reason, we have decided to stay with GCC 11 for now and because we have introduced a lot of experiments and patches that were too expensive to over buffer our time with a GCC upgrade in the middle. In particular, for what is possible we want to start a path where Macaroni OS is not only a user of Funtoo but it\u0026rsquo;s also a contributor.
To follow this idea, we are organizing these tasks:
We have created a new repository labs where begin to introduce new packages and new autogen that will be added in the Funtoo tree after a first validation. In particular, working with autogen Budgie Desktop packages we have found that these packages require Gnome 40 at least and we want, really, to try to help the Funtoo Community on move ahead with these kinds of stuff that are very very complex and we think that to have a parallel tree where working and break everything could be good before begin trying to open single PR with a big impact and not easy to test.
In this release, we have patched the vala.eclass to have all packages using Vala 0.54.1 and avoid to have multiple releases. This had a lot of impacts in the Gnome stuff and a lot of patches are been created. These types of changes are not so easy to send to the Funtoo Community without validating what happens in a big park of packages. For this reason, Shotwell and a few other Gnome packages aren\u0026rsquo;t yet been ported but will work on these soon.
We starting to integrate Wayland to Xorg to be available to Funtoo users we hope soon.
Part of all patches are available and/or will be organized to be easily integrated with Funtoo when ready. The list is available here.
Unluckily, we do have not sufficient space and budget to maintain a temporary macaroni-phoenix-legacy repository based on Funtoo 1.4 to help users in the migration. So, with this release, the old desktop release will no longer be supported but we describe the upgrade process clearly for the migration.
Thanks to the job done by the Funtoo Community and our work, between the the big changes of this new release we have:
* GCC 11.3.0 * Python 3.9 * Ruby 3.1.4 * Golang 1.21.3 * PHP 8.2 * LXD 5.18 * Docker 24.0.6 (thanks to @siris to autogen this package)! * Docker Compose 2.21.0 * Firefox 118.0.2: we have finally the compiled version with our branding * Google Chrome 118.0.5993.70 * Brave 1.59.117 * Vivaldi 6.2.3105.58 * Thunderbird 115.3.2 * MongoDB Compass 1.40.3 * Libreoffice 7.6.2.1 * Inkscape 1.3 See the complete changelog of Phoenix 23.11 release.
Know issues These the know issues after the upgrades that will be fixed in the next releases:
the new Inkscape release v1.3 has an annoying warning about using the sans-serif that seems related to the upstream issue #4651.
the games will be available only in the next weeks after that the first stable release of the macaroni-games repository will be available. So, the installed games (Wesnoth, Warhammer, etc.) could be broken after the upgrade.
The package ArangoDB needs maintenance as been reported in the Funtoo issue #FL-11506 and will be not available after the upgrade. We will take care of this soon.
New versions of the Package Manager In order to rename the our Package Manager luet in anise the new releases is installed with the link /usr/bin/anise to begin migration all tasks and pipeline with the new name.
In particular, are been released two versions:
v0.40-0-geaaru:
- the render engine using Helm framework is been totally rewritten and will be used soon to complete the refactor of the solver for the build phase of the \`luet-build\` tool - a new command \`luet-build tree render\` is been added in order to have a preview of the \`build.yaml\` file rendered. - a new environment variable \`ANISE_SUBSETS\` is automatically injected in the finalizer in order to customize commands based on the subsets enabled. v0.40-1-geaaru:
- contains a review of the Solver to support better the provides and the conflicts. macaronictl get power! After upgrading to Phoenix 23.11 we found an unexpected surprise: with the upgrade of the Chromium engine from version 116 to version 117 the browsers Google Chrome and Brave try to use by default the 3D acceleration and this breaks the startup in the installation with poor cards. I personally had a bad experience in my ASUS Trasform T300 with a poor Intel GPU after the upgrade and we want to avoid sharing this experience with other users.
For this reason, we have added a new customization that permits control of the startup flags of the browsers and by default, we disable 3D acceleration that seems the default behavior of the previous releases.
This is done by replacing the links under /usr/bin/ with a bash script that could be controlled by the macaronictl browser configure command.
We have planned to improve these command to have more control but for this tool permits to configure only Google Chrome (Stable, Unstable, Beta) and Brave. In particular, the finalizer of this package creates automatically the right setup that could be controller by the root users or specifically but every user
$\u0026gt; macaronictl browser available | PACKAGE | PACKAGE VERSION | SYSTEM OPTIONS | USER OPTIONS | ENGINE | BINARIES | |-----------------------------------|------------------|----------------|--------------|----------|---------------------------------| | www-client/brave-bin | v1.59.117+2 | true | false | chromium | /usr/bin/brave-bin | | www-client/firefox | v118.0.2 | false | false | N/A | N/A | | www-client/firefox-beta-bin | v119.0 | false | false | N/A | N/A | | www-client/firefox-bin | v118.0.2 | false | false | N/A | N/A | | www-client/google-chrome | v118.0.5993.70+2 | false | false | chromium | /usr/bin/google-chrome-stable | | www-client/google-chrome-beta | v119.0.6045.21+2 | false | false | chromium | /usr/bin/google-chrome-beta | | www-client/google-chrome-unstable | v120.0.6062.2+2 | false | false | chromium | /usr/bin/google-chrome-unstable | | www-client/opera | v99.0.4788.9+1 | false | false | N/A | N/A | | www-client/vivaldi | v6.2.3105.58 | false | false | N/A | N/A | | www-client/vivaldi-snapshot | v6.4.3152.3 | false | false | N/A | N/A | and customized with this command:
$ macaronictl browser configure --help Shows browsers available in configured repositories. # Generate the system yaml file with the default options from catalog. $\u0026gt; macaronictl browser conf www-client/brave-bin --system --defaults # Generate the user yaml file with the default options from catalog. $\u0026gt; macaronictl browser conf www-client/brave-bin --user --defaults # Generate the user yaml file without options for the selected package. $\u0026gt; macaronictl browser conf www-client/brave-bin --user --without-opts # Generate the user yaml file awithout options and the user include file # for the selected package. $\u0026gt; macaronictl browser conf www-client/brave-bin --user --without-opts --exec # Generate the binary script of the package and the system includes scripts. # Normally, this command is executed on package finalizer. $\u0026gt; macaronictl browser conf www-client/brave-bin --exec --system --defaults # Generate the user include and YAML files with the default options $\u0026gt; macaronictl browser conf www-client/brave-bin --exec --user --defaults # Remove the user include file. $\u0026gt; macaronictl browser conf www-client/brave-bin --purge --user # Remove the sytem include file and the binary of the package $\u0026gt; macaronictl browser conf www-client/brave-bin --purge --system # Update the user include file. Normally, used when the user YAML file # is been modified manually. $\u0026gt; macaronictl browser conf www-client/brave-bin --user --only-update-includes # Update the system include file. Normally, used when the user YAML file # is been modified manually. $\u0026gt; macaronictl browser conf www-client/brave-bin --system --only-update-includes NOTE: It works only if the repositories are synced. Usage: browser configure [pkg] [flags] Aliases: configure, conf, c Flags: --catalog-file string Specify the directory of the catalog file of all engines options. (default \u0026#34;/usr/share/macaroni/browsers/catalog\u0026#34;) --defaults Set catalog defaults options to specified package. --exec Update script of the binary. Need root permissions. -h, --help help for configure --home-dir string Override the directory of the user with engines options. (default \u0026#34;/home/geaaru/.local/share/macaroni/browsers\u0026#34;) --only-update-includes Update script includes file. --purge Remove system option from system. Need root permissions. --system Set bootstrap option on system. Need root permissions. --system-dir string Override the directory of the system configuration with engines options. (default \u0026#34;/etc/macaroni/browsers\u0026#34;) --user Set bootstrap option for user. --without-opts Disable all options to specified package. Global Flags: -c, --config string Macaronictl configuration file -d, --debug Enable debug output. In particular, it\u0026rsquo;s possible to restore the default behaviour without customization from the user with this command:
$ macaronictl browser configure www-client/brave-bin --user --without-opts Configuring browser start flags: Package: www-client/brave-bin User options: Generated engine file:	/home/geaaru/.local/share/macaroni/browsers/chromium.yml Generated include file:	/home/geaaru/.local/share/macaroni/browsers/chromium.brave-bin.inc All done. The file chromium.brave-bin.inc is included by the script under /usr/bin for the specified browser selected.
NOTE: To use the new command is needed add the desktop subset in order to install the browser catalog on upgrading macaronictl package.
Openshot is now integrated with Blender! Thanks to the upgrade of Python to version 3.9 is now possible to use the integration of the Openshot QT Video editor with Blender for animations!
In particular, the migration to Funtoo Next required the upgrade of his packages with the last release that will be added to Funtoo soon.
Considering that Macaroni OS uses the blender-bin package the users need some tricks to use the integration with Blender, these the steps that we report hereinafter:
$\u0026gt; mkdir $HOME/bin $\u0026gt; echo \u0026#34; export PATH=$PATH:$HOME/bin \u0026#34; \u0026gt;\u0026gt; $HOME/.bashrc $\u0026gt; cd $HOME/bin $\u0026gt; ln -s /opt/bin/blender-bin blender It\u0026rsquo;s possible that in the near future, we will move to the blender compiled release and these steps will no longer be needed.
Security updates The list of the major security fix:
CVE-2023-39232 - Go 1.21.3
CVE-2023-38545 - Curl
CVE-2023-4911 - Looney tunables - Local Privilege Escalation in glibc
CVE-2023-4863 - libwebp
CVE-2022-36019 - Docker
CVE-2022-39253 - Docker
CVE-2023-5217 - libvpx
CVE-2023-25809 - runc
CVE-2023-27561 - runc
Upgrade existing Macaroni OS filesytem to Phoenix 23.11 Before beginning the upgrade you need to be sure to have a backup of your data and sufficient space in the filesystem to download all packages installed because will be replaced and installed.
This upgrade is a dist-upgrade and it needs additional support.
Obviously, it\u0026rsquo;s also possible to just reinstall a fresh installation from the new ISO 23.11.
The whip hook will remove the packages:
sys-firmware/ed2k-ovmf: we will move to sys-firmware/ed2k-ovmf-bin package
net-misc/openntpd: No more available in our repository and with this conflict:
Error file conflict between \u0026#39;net-misc/openntpd-6.2+2\u0026#39; and \u0026#39;net-misc/ntp-4.2.8\u0026#39; ( file: etc/conf.d/ntpd ) sys-firmware/seabios: we will move to sys-firmware/seabios-bin package
**ATTENTION: In order to avoid errors on upgrade if the system to upgrade contains browsers you need to add the desktop subset before start the upgrade.
$\u0026gt; luet subsets enable desktop So, these the steps to follow on upgrade your Macaroni system based on Funtoo 1.4:
1. Get last release of anise (luet) Package Manager To do this you need disable all repositories exclude geaaru-repo-index and mottainai-stable:
$\u0026gt; luet repo disable macaroni-commons macaroni-phoenix macaroni-security Upgrade the repositories:
$\u0026gt; luet repo update Upgrade luet to last release:
$\u0026gt; luet upgrade -y 2. Enable repositories You can enable the previous disabled repositories (you can maintain disabled the repository macaroni-security because it doesn\u0026rsquo;t contain new packages for now):
$\u0026gt; anise repo enable macaroni-commons macaroni-phoenix and then update the local metadata:
$\u0026gt; anise repo update 3. Get the last version of the whip-catalog In order to start the upgrade process you need to have the last version of the macaroni/whip-catalog package:
$\u0026gt; anise rm macaroni/whip-catalog --nodeps $\u0026gt; anise i macaroni/whip-catalog 4. Start the upgrade You can start the upgrade and to use the environment variable SKIP_REINDEX=1 if the luet version is greather then v0.39.0 else it\u0026rsquo;s better to run this without the variable.
$\u0026gt; SKIP_REINDEX=1 whip h macaroni.upgrade2funtoo-next 5. Run macaronictl etc-update Due to big upgrades done will be a lot of files to check and merge eventually. This phase requires attention.
$\u0026gt; macaronictl etc-update NOTE: Normally, you need to avoid the override of the file /etc/default/grub. Check what are the differences and if it makes sense merge changes.
6. Run macaronictl env-update This command updates the /etc/profile.env and regenerates the file ld.so.cache like the Funtoo env-update command:
$\u0026gt; macaronictl env-update \u0026gt;\u0026gt;\u0026gt; Generating /etc/profile.env... \u0026gt;\u0026gt;\u0026gt; Generating /etc/ld.so.conf... \u0026gt;\u0026gt;\u0026gt; Regenerating /etc/ld.so.cache... 7. Verify the linking of the installed files It\u0026rsquo;s available a whip hook that permits to verify if there are libraries or binaries with links to no more available libraries.
It\u0026rsquo;s a good idea to run this command on every upgrade:
$\u0026gt; whip h linking.check Checking directory /usr/lib64... Checking directory /usr/lib... Checking directory /usr/bin... Checking directory /bin... Checking directory /usr/sbin... Checking directory /usr/libexec... [linking.check] Completed correctly. The directories checked by default are these:
/usr/lib64 /usr/lib /usr/bin /bin /usr/sbin /usr/libexec But could be changed overriding the environment variable DIRS:
$\u0026gt; DIRS=\u0026#34;/usr/lib64\u0026#34; whip h linking.check 12. Remove orphans packages (optional) When the upgrade is ended, it\u0026rsquo;s possible check what packages installed are no more available in the Macaroni repositories that could be removed through the anise query orphans command:
$\u0026gt; anise q orphans Between the orphans list will be present the old GCC 9.2.0 that could be removed:
$\u0026gt; anise rm sys-devel-9.2.0/gcc 13. Verify if the kernel is correctly installed If you have upgrade the system before get the last release of the package macaroni/whip-catalog could be possible that the system detection hasn\u0026rsquo;t correctly detect the system between Macaroni and Funtoo. If this is happens the packages:
virtual/base virtual/grub virtual/sh will not be present.
You can verify this with:
$\u0026gt; anise s --installed -p virtual/base -p virtual/grub -p virtual/sh --quiet virtual/sh virtual/base virtual/grub If the output is not this you need to reinstall them before generate initramfs:
$\u0026gt; anise i virtual/base virtual/grub virtual/sh It\u0026rsquo;s important to verify if the kernel is been correctly upgraded. To do this the first check is related to the content of the /boot directory that will be with at least on kernel:
$\u0026gt; ls /boot/ Initrd config-vanilla-x86_64-5.15.137-macaroni initramfs-vanilla-x86_64-5.15.137-macaroni lost+found System.map-vanilla-x86_64-5.15.137-macaroni config-vanilla-x86_64-6.1.60-macaroni initramfs-vanilla-x86_64-6.1.60-macaroni System.map-vanilla-x86_64-6.1.60-macaroni efi kernel-vanilla-x86_64-5.15.137-macaroni bzImage grub kernel-vanilla-x86_64-6.1.60-macaroni In the example, it\u0026rsquo;s available both kernel 6.1.60 and 5.15.137.
If the directory is without the kernel is better to reinstall it, by first trying this:
$\u0026gt; anise i kernel-6.1/macaroni-full kernel-6.1/macaroni-modules \\ kernel-6.1/nvidia-kernel-modules kernel-6.1/zfs-kmod If anise saids that all packages are installed trying with:
$\u0026gt; anise miner ri kernel-6.1/macaroni-full kernel-6.1/macaroni-modules \\ kernel-6.1/nvidia-kernel-modules kernel-6.1/zfs-kmod 14. Regenerate the kernel initrd image It\u0026rsquo;s important to run this command to build an initrd image updated and aligned to the merge configurations with macaronictl etc-update.
$\u0026gt; macaronictl kernel geninitrd --all --set-links --purge --grub NOTE: Before restart your system you need to be sure that the initramfs is been generated correctly.
Based on the installed kernel the output of the kernel geninitrd will be without warning or errors:
$\u0026gt; macaronictl kernel geninitrd --all --set-links --purge --grub Creating initrd image /boot/initramfs-vanilla-x86_64-5.15.137-macaroni...DONE Creating initrd image /boot/initramfs-vanilla-x86_64-6.1.60-macaroni...DONE No valid links found. I set links to kernel 6.1.60. Creating grub config file /boot/grub/grub.cfg... Generating grub configuration file ... Found linux image: /boot/kernel-vanilla-x86_64-6.1.60-macaroni Found initrd image: /boot/initramfs-vanilla-x86_64-6.1.60-macaroni fgrep: warning: fgrep is obsolescent; using /bin/grep -F Found linux image: /boot/kernel-vanilla-x86_64-5.15.137-macaroni Found initrd image: /boot/initramfs-vanilla-x86_64-5.15.137-macaroni fgrep: warning: fgrep is obsolescent; using /bin/grep -F Adding boot menu entry for UEFI Firmware Settings ... done 15. Reboot and starting to play with the new Macaroni Phoenix release The job is done!
$\u0026gt; reboot If you have the subsets devel and portage enable and you want to setup the new GCC it\u0026rsquo;s better to run:
$\u0026gt; gcc-config 1 16. Optional steps If you have Virtualbox installed could be a good idea to execute this command:
$\u0026gt; whip h vbox.vbox_setup not yet present in the finalize.
A new Partner join the project We are happy to share that the TOP-IX consortium donated a VM to the Macaroni OS Project and this is great news because will help on work parallel to compile the new packages from the different releases.
Really thanks for your support TOP-IX!
What next? Hereinafter, out hot points in our backlog:
After the rewrite of the render engine of the anise-build (luet-build) tool we want to continue the refactoring of the Macaroni build tool.
Complete the migration of the Macaroni Eagle release to Funtoo Next
Bump the first release of the macaroni-games repository
Starting setup of labs repository
Continue the improvement of our documentation
We are waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:6,href:"/blog/phoenix-23.08/",title:"New Macaroni-Security Repository is here!",section:"Blog",content:`Finally, it\u0026rsquo;s available the new macaroni-security repository!
Considering that the Funtoo release 1.4-prime is in EOL, we will use the macaroni-security repository to share security patches and updates of Browsers, Devs tools, and other packages meantime we rebooting Phoenix\u0026rsquo;s branch to Funtoo Next.
Due to this change, all users using Macaroni Phoenix MUST add the macaroni-security repository before executing any update.
$\u0026gt; luet repo update $\u0026gt; luet i repository/macaroni-security $\u0026gt; luet repo update $\u0026gt; luet upgrade The repository macaroni-security uses the new tree v2 which requires luet version 0.37.0 or greather.
This repository is also a good example for the users about how could create their repository starting from the Phoenix base layer and then using luet-build and luet-portage-converter to generate their packages.
Macaroni OS enter on Docker-Sponsored Open Source Program We are really happy to announce that we are entered into the annual Docker-Sponsored Open Source Program.
The macaronios docker user is now an organization.
We will complete the right setup in the next month.
Really, thanks to Docker Inc. for this opportunity.
Phoenix 23.08 is out! This release introduces updates about the available Browsers and a lot of new packages for the development incoming with the macaroni-security repository:
In particular, between the rest:
* Firefox 116.0.2 * Google Chrome 115.0.5790.110 * Brave 1.56.20 * Jenkins 2.410 * Vivaldi 6.1.3035.257 * Openssh v9.3p2 (CVE-2023-38408) * Thunderbird 115.1.0 * Github Cli 2.32.1 * MongoDB Compass 1.39.1 In addition, the new kernels are now available with the fix for CVE-2023-3269.
See the complete changelog of Phoenix Security 23.08 release and on Github.
The macaroni-phoenix repository will be freeze or with few updates until the migration from Funtoo 1.4-prime to Next.
Terragon 23.08 is out! A new release of the Funtoo Next release for Container is out.
The new release contains the migration to luet tree v2 that improve 3x the repository update time:
minion ~ $\u0026gt; time luet repo update --force macaroni-terragon üè† Repository: macaroni-terragon Revision: 208 - 2023-06-14 15:13:15 +0000 UTC real	0m18.193s user	0m4.807s sys	0m1.236s minion ~ $\u0026gt; time luet repo update --force macaroni-terragon-dev üè† Repository: macaroni-terragon-dev Revision: 228 - 2023-08-11 15:15:06 +0000 UTC real	0m6.312s user	0m0.477s sys	0m0.788s This release is a maintenance release that contains between the rest:
* Rust v1.71.0 * Grafana v10.0.3 * Nodejs v20.5.0 * Prometheus v2.46.0 * Openssh v9.3p2 (CVE-2023-38408) See the complete changelog of Terragon 23.08 release on Github.
What next? Hereinafter, out hot points in our backlog:
The refactor of luet-build go ahead and we will rename our PMS at the end of this refactor with the new name anise/anise-build.
Considering that the Funtoo release 1.4-prime will be in EOL for the end of the year we will move soon both Eagle and Phoenix release to the new tree. We will share for 3 or 4 months the repository macaroni-phoenix-legacy and macaroni-eagle-legacy to permit users using the 1.4-prime to manage a more quiet migration but without updates.
At the moment the luet-portage-converter doesn\u0026rsquo;t manage for the same package multiple versions. When the refactor of luet-build will be ended we will review this feature to support multiple version in the same repository (for example, having multiple release of Nodejs package).
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:7,href:"/blog/phoenix-23.06.01/",title:"New features incoming with 23.06 releases!",section:"Blog",content:`We have important news to share: the development of our PMS continues and finally, we have rewritten the method used to bump a new revision of the repository.
This enhancement integrates a new way to create the tree tarball used on repo update command. This new implementation breaks the existing implementation. For this reason, we will migrate to the new implementation in August or September. This will permit to users to upgrade to the minimal luet version requires: version 0.37.0.
The new implementation speed-up the command repo update that will not require anymore a post-processing elaboration to generate the split metadata. The consequence is that the repo update will consume a limited amount of memory and will be faster. This is a mandatory step to begin integration with the embedded world.
In addition, we have added another core feature for a PMS: it\u0026rsquo;s now possible to execute an upgrade that downgrades the packages with the version available. This will help users to switch between the testing and the stable repositories and to supply feedback if something is broken.
Just an example in the Terragon release:
$\u0026gt; luet --version luet version 0.38.0-geaaru-geff7f8a550ed32355a9725d878d43584688b5f55 2023-06-16 11:37:38 UTC - go1.20.3 $\u0026gt; luet repo list geaaru-repo-index Macaroni Repository index Revision 6 - 2023-04-11 12:36:24 +0000 UTC Priority 1 - Type http macaroni-commons Macaroni OS Commons Repository Revision 156 - 2023-06-08 05:58:34 +0000 UTC Priority 30 - Type http macaroni-terragon-dev Macaroni OS Terragon Dev Repository Revision 208 - 2023-06-14 15:13:15 +0000 UTC Priority 10 - Type http macaroni-terragon Macaroni OS Terragon Repository Revision 208 - 2023-06-14 15:13:15 +0000 UTC Priority 30 - Type http mottainai-stable Mottainai official Repository Revision 97 - 2023-06-17 06:03:04 +0000 UTC Priority 30 - Type http We add the mottainai-dev repository to upgrade luet to the last version:
$\u0026gt; luet i repository/mottainai-dev -y üöÄ Luet 0.38.0-geaaru-geff7f8a550ed32355a9725d878d43584688b5f55 2023-06-16 11:37:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 6 - 2023-04-11 12:36:24 +0000 UTC üè† Repository: macaroni-commons Revision: 156 - 2023-06-08 05:58:34 +0000 UTC üè† Repository: macaroni-terragon-dev Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: macaroni-terragon Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: mottainai-stable Revision: 97 - 2023-06-17 06:03:04 +0000 UTC üß† Solving install tree... üç¶ [ 1 of 1] [N] repository/mottainai-dev::geaaru-repo-index - 20230317 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 7 ¬µs). üöö Downloading 1 packages... üì¶ [ 1 of 1] repository/mottainai-dev::geaaru-repo-index - 20230317 # downloaded ‚úî üß† Sorting 1 packages operations... üçª Executing 1 packages operations... üç∞ [ 1 of 1] repository/mottainai-dev::geaaru-repo-index - 20230317 # installed ‚úî üéä All done. And now we upgrade to last version:
$\u0026gt; luet upgrade --sync-repos üöÄ Luet 0.38.0-geaaru-geff7f8a550ed32355a9725d878d43584688b5f55 2023-06-16 11:37:38 UTC - go1.20.3 ‚ÑπÔ∏è Repository: macaroni-terragon-dev is already up to date. ‚ÑπÔ∏è Repository: mottainai-dev is already up to date. ‚ÑπÔ∏è Repository: mottainai-stable is already up to date. ‚ÑπÔ∏è Repository: macaroni-commons is already up to date. ‚ÑπÔ∏è Repository: macaroni-terragon is already up to date. ‚ÑπÔ∏è Repository: geaaru-repo-index is already up to date. üè† Repository: geaaru-repo-index Revision: 6 - 2023-04-11 12:36:24 +0000 UTC üè† Repository: macaroni-commons Revision: 156 - 2023-06-08 05:58:34 +0000 UTC üè† Repository: macaroni-terragon-dev Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: macaroni-terragon Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: mottainai-dev Revision: 97 - 2023-06-18 05:27:14 +0000 UTC üè† Repository: mottainai-stable Revision: 97 - 2023-06-17 06:03:04 +0000 UTC ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üç¨ [ 1 of 1] [U] system/luet-geaaru-testing::mottainai-dev - 0.38.1 [0.38.0+3::mottainai-stable] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 100 ¬µs). Do you want to continue with this operation? [y/N]: y üöö Downloading 1 packages... üì¶ [ 1 of 1] system/luet-geaaru-testing::mottainai-dev - 0.38.1 # downloaded ‚úî üß† Sorting 2 packages operations... üçª Executing 2 packages operations... ‚ôªÔ∏è [ 1 of 2] system/luet-geaaru-testing::mottainai-stable - 0.38.0+3 # removed ‚úî üç∞ [ 2 of 2] system/luet-geaaru-testing::mottainai-dev - 0.38.1 # installed ‚úî Now, we can disable the mottainai-dev repository and downgrade to last available version.
$\u0026gt; luet repo disable mottainai-dev mottainai-dev disabled: ‚úîÔ∏è $\u0026gt; luet upgrade --deep -y üöÄ Luet 0.38.1-geaaru-g0ca7b38eeb891b6a681fbf458db339f145815e5a 2023-06-17 08:45:47 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 6 - 2023-04-11 12:36:24 +0000 UTC üè† Repository: macaroni-commons Revision: 156 - 2023-06-08 05:58:34 +0000 UTC üè† Repository: macaroni-terragon-dev Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: macaroni-terragon Revision: 208 - 2023-06-14 15:13:15 +0000 UTC üè† Repository: mottainai-stable Revision: 97 - 2023-06-17 06:03:04 +0000 UTC ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üç≠ [ 1 of 1] [u] system/luet-geaaru-testing::mottainai-stable - 0.38.0+3 [0.38.1::mottainai-dev] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 61 ¬µs). üöö Downloading 1 packages... üì¶ [ 1 of 1] system/luet-geaaru-testing::mottainai-stable - 0.38.0+3 # downloaded ‚úî üß† Sorting 2 packages operations... üçª Executing 2 packages operations... ‚ôªÔ∏è [ 1 of 2] system/luet-geaaru-testing::mottainai-dev - 0.38.1 # removed ‚úî üç∞ [ 2 of 2] system/luet-geaaru-testing::mottainai-stable - 0.38.0+3 # installed ‚úî Without the use of --deep option, the default logic is to maintain the last version installed.
Kernels upgrades improvement One of the things that was present on Sabayon was that on upgrading the kernel some files were left under the directory /lib/modules and the /boot directory.
The cleanup of the /boot/ directory is already done automatically from the macaronictl tool, but with this new release the kernels contain an uninstall finalize that tries to clean up yet the /lib/modules directory. This will work for the next upgrade but I will waiting for feedback if something goes wrong.
Phoenix 23.06 and 23.06.01 are out! Meantime, we preparing the migration from Funtoo release 1.4-prime to the next release, we have create two maintenance release to supply new packages and a better integration with HP and Brother Printers.
In particular, between the rest:
* LXD 5.14 * ZFS 2.1.12 * Gnome Maps is been fixed on both Funtoo and Macaroni * NTFSg3 package to support NTFS USB pendrive See the complete changelog of Phoenix 23.06 release and Phoenix 23.06.01 release on Github.
Terragon 23.06 is out! A new release of the Funtoo Next release for Container is out. This release is a maintenance release that contains between the rest:
* Rust v1.70.0 * Python v3.9.17 * Nodejs v20.3.0 * Git v2.41.0 * Haproxy v2.6.14 See the complete changelog of Terragon 23.06 release on Github.
What next? Hereinafter, out hot points in our backlog:
Go ahead with the rewrite of the luet build command and cleanup the old code. This will require at least three or four months (considering the summer stop period).
To complete the dismission of Python 2.7 on Eagle release. This job is now in progress.
Proceed with the improvement of the documentation.
To complete the setup of the macaroni-security repository that is in progress.
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:8,href:"/blog/phoenix-23.05/",title:"Macaroni OS Phoenix 23.05 is out!",section:"Blog",content:`We are happy to announce the new release Phoenix 23.05 that contains the first significant change needed to migrate the Phoenix tree from the Funtoo release 1.4-prime to the Next release, an activity that will be completed for the subsequent releases. In particular, with this release is dropped the support of Python 2.7 in EOL for a lot of months. The package dev-lang-2.7/python is yet available because a lot of Funtoo packages depend on it for compilation but it\u0026rsquo;s discouraged the use.
Finally, we have started the documentation that now describes step-by-step how to install Macaroni OS under a new system and choose if to use a fully encrypted filesystem (only the boot partition will be clear but with GRUB asking for a password) or with a specific partition encrypted, for example, the /home. See Documentation Page for the detail and the Story to know how Macaroni OS is born. It\u0026rsquo;s been described how to use subsets to customize the installation of the selected packages and primarily we have tried to describe the main functions needed for a user. We will integrate the build process used to create user repositories in the next months. Stay tuned!
To increase the creativity of our users I think that is important to permit them to choose between different Desktop Environments, this is the reason that we have added support to LXQT v1.3.0 and i3 v4.22 thanks to their availability on Funtoo tree. The LXQT and i3 DE will be available yet as ISOs ready for the installation.
The new ISOs will be available in two/three days, just the time for the sync to the GARR mirror and for the CDN propagation.
What\u0026rsquo;s new This new release has some interesting updates:
* LXD 5.12 * Libreoffice 7.5.2.2 * Firefox 112.0.2 * Brave 1.50.125 * Google Chrome 112.0.5615.165 * Grafana 9.5.1 and Prometheus 2.43.0 * Blender 3.5.1 * Inkscape 1.2.2 * Golang 1.20.3 * Virtualbox 7.0.8.156879 See the complete changelog on Github.
whip-catalog get power! To improve the system check the following new hooks are been reviewed and/or added:
linking.check: The hook is been reviewed to correctly validate the libraries and/or binaries using third-party libraries under /opt directory.
vbox.vbox_setup: After the upgrade of Virtualbox I saw in some installation wrong permissions after the upgrade. This hook now restore the right permission and suid.
$\u0026gt; whip h vbox.vbox_setup Ensure owner on vbox binary... Ensure execution bit on vbox binary... Ensure suid to vbox binary... [vbox.vbox_setup] Completed correctly. New repositories names To help users identify the repositories related to all available releases we have renamed our repositories as described here following the releases codename (phoenix, eagle, terragon).
Due to the logic implemented on luet about config protection after the luet upgrade is needed to remove manually the old repository files:
$\u0026gt; # as root $\u0026gt; /root # cd /etc/luet/repos.conf.d/ $\u0026gt; /etc/luet/repos.conf.d # rm macaroni-funtoo.yml $\u0026gt; /etc/luet/repos.conf.d # ls -l total 12 -rw-r--r-- 1 root root 307 Feb 20 09:12 macaroni-commons.yml -rw-r--r-- 1 root root 304 May 15 18:14 macaroni-phoenix.yml -rw-r--r-- 1 root root 280 Apr 6 21:04 mottainai-stable.yml After this operation could be better cleanup orphans tree from the system and resync the tree:
$\u0026gt; luet cleanup --purge-repos $\u0026gt; luet repo update New Docker/LXD images names Following the same reason used for the repositories also our Docker images will be renamed as described here and also the LXD images will be renamed in the next days.
What next? Hereinafter, our hot points for the next releases:
Working on monthly releases of Terragon and Eagle
Add documentation about Macaroni tools (whip, macaronictl, luet-portage-converter, etc.) and about Config Protect feature.
Waiting for two/three months for an update it\u0026rsquo;s not always a good idea. For example, Discord apps become unusable. To resolve this issue we want to create a macaroni-security repository where updates more frequently some packages: browsers, security patches, etc.
Working on rewrite of luet-build binary
Starts migration of Phoenix release to Funtoo Next branch.
Following the idea of the macaroni-security repository we are thinking of a macaroni-community repository where users could create their packages to share and also a macaroni-games where share packages of games and emulators.
In July, we will in holiday so, probably the next release of Phoenix will be available in August.
A PMS GUI incoming! I\u0026rsquo;m very happy that people begin to use Macaroni OS and I want to thank a special user Marcello Basso aka nomorelogic who developing a GUI for luet, available in our repository with the name pageant that is been written with Lazarus and Free Pascal and that could be used to search packages, show files owned by packages and soon with others good features.
The pageant is yet in high development phase and is available as version 0.0.4_alpha.
Hereinafter, the window where to see the detail of a package and his files.
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:9,href:"/blog/phoenix-23.03.02/",title:"Macaroni OS Phoenix 23.03.02 is out!",section:"Blog",content:`After receiving the first notifications we caught an issue in our last ISOs related to the split of the Grub package done to divide the grub-emu binary. It\u0026rsquo;s been removed for error the Grub\u0026rsquo;s patches related to ext4 1.47.0 and of Macaroni initramfs naming.
Without the patch the default installation fails on setup grub because it\u0026rsquo;s used ext4 and an unknown filesystem error is generated by grub.
The new ISOs will be available in two days.
Unlucky, to build the ISOs with the stable repositories at the moment we need to wait that the stable repositories to be synced to our CDN and main mirror.
We have planned to integrate the repetitors feature to luet that will permit to reduce the outgoing traffic when it\u0026rsquo;s used Macaroni for CD/CI and for us, to test stable repository before sync it to master.
All ISOs will be with ZRAM enabled by default.
Sorry for this issue.
Behind this fix, I fixed the URL reported in the Calamares installer that was yet with the old domain macaroni.funtoo.org.
See previous post for the details about changes.
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:10,href:"/blog/phoenix-23.03.01/",title:"Macaroni OS Phoenix 23.03.01 is out!",section:"Blog",content:`While we have worked on preparing the new ISOs for the release 23.03 we have figured out that was better to bump a new release with the changes of the Calamares plugin to migrate our ISOs to kernel 6.1. In particular, the ISOs for Desktops have now the kernel 6.1.18 with built-in integration with new Realtek wifi cards. Unluckily not yet the cards 8852b e 8852be that will be available on branch 6.2. We will try to support it on kernel 6.1 with an external driver in the next release.
The Server ISOs maintain the kernel 5.10 LTS.
This is the reason for this delay and this micro-release.
We share in addition, that testing the Firefox release 109.0.1 that is been released on release 23.01 has figured out that there are some issues with NVIDIA cards. The Firefox windows were stalled often and only disabling hardware acceleration fixed this issue. So, please, if users have some similar experience with release 111.0 open an issue.
The new Download page We are very happy to share finally the new Download page where retrieve the new ISOs is now available. Inside the Download page we have tried to use a labels view that we hope will help users to choose the right ISOs for their requirements. Any feedback about this will help, thanks.
macaronictl gets again power! After receive tons of requests about integrate a switch command to upgrade the kernel release, we are happy to share that the time is arrived\u0026hellip;
The macaronictl release 0.8.0 contains these new commands and improvements:
macaronictl kernel switch #\u0026gt; macaronictl k switch macaroni@6.1 Found kernel candidate kernel-6.1/macaroni-full-6.1.12... Modules extra to install: - kernel-6.1/lkrg-0.9.6 In summary this command search for all extra kernel modules installed in the system and it tries to install the selected kernel with all extra modules installed.
macaronictl kernel modules When the local repositories are synced this command permits to retrieve all extra kernel modules availables in all kernel branches:
$ macaronictl kernel modules | PACKAGE | PACKAGE VERSION | KERNEL BRANCH | KERNEL VERSION | REPOSITORY | |----------------------------------------|-----------------|---------------|----------------|-----------------| | kernel-5.10/lkrg | 0.9.6+1 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/nvidia-kernel-modules | 525.85.05+3 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/rtw89 | 0.20220824+15 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/virtualbox-guest-additions | 7.0.6.155176+3 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/virtualbox-modules | 7.0.6.155176+2 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/zfs-kmod | 2.1.9+2 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.15/nvidia-kernel-modules | 525.85.05+2 | 5.15 | 5.15.102 | macaroni-funtoo | | kernel-5.15/rtw89 | 0.20220824+11 | 5.15 | 5.15.102 | macaroni-funtoo | | kernel-5.15/virtualbox-modules | 7.0.6.155176+2 | 5.15 | 5.15.102 | macaroni-funtoo | | kernel-5.4/nvidia-kernel-modules | 525.85.05+2 | 5.4 | 5.4.236 | macaroni-funtoo | | kernel-5.4/rtw89 | 0.20220824+11 | 5.4 | 5.4.236 | macaroni-funtoo | | kernel-5.4/virtualbox-modules | 7.0.6.155176+2 | 5.4 | 5.4.236 | macaroni-funtoo | | kernel-5.4/zfs-kmod | 2.1.9+2 | 5.4 | 5.4.236 | macaroni-funtoo | | kernel-6.1/lkrg | 0.9.6+2 | 6.1 | 6.1.18 | macaroni-funtoo | | kernel-6.1/nvidia-kernel-modules | 525.85.05+2 | 6.1 | 6.1.18 | macaroni-funtoo | | kernel-6.1/virtualbox-guest-additions | 7.0.6.155176+2 | 6.1 | 6.1.18 | macaroni-funtoo | | kernel-6.1/virtualbox-modules | 7.0.6.155176+2 | 6.1 | 6.1.18 | macaroni-funtoo | | kernel-6.1/zfs-kmod | 2.1.9+2 | 6.1 | 6.1.18 | macaroni-funtoo | or for a specific kernel branch:
$ macaronictl kernel modules -b 5.10 | PACKAGE | PACKAGE VERSION | KERNEL BRANCH | KERNEL VERSION | REPOSITORY | |----------------------------------------|-----------------|---------------|----------------|-----------------| | kernel-5.10/lkrg | 0.9.6+1 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/nvidia-kernel-modules | 525.85.05+3 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/rtw89 | 0.20220824+15 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/virtualbox-guest-additions | 7.0.6.155176+3 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/virtualbox-modules | 7.0.6.155176+2 | 5.10 | 5.10.174 | macaroni-funtoo | | kernel-5.10/zfs-kmod | 2.1.9+2 | 5.10 | 5.10.174 | macaroni-funtoo | macaronictl kernel available Running this command with root privileged now permits us to see the installed kernel in bold.
Whip power! With little steps, we improve our knife swiss that is used to post-install hooks and for validation. In this release, we have added new important hooks to the whip catalog:
linking.check: This hook permit to validation of existing installation and search for libraries or binary with a broken link. So, if you find some issue with running this in a clean installation, please, open an issue.
For example, on Eagle release I found this issue that permits to be fixed very fast until the fix will be available on the repository:
$\u0026gt; whip h linking.check Checking directory /usr/lib64... Checking directory /usr/lib... Checking directory /usr/bin... /usr/bin/rsync Checking directory /bin... Checking directory /usr/sbin... Checking directory /usr/libexec... [linking.check] Completed correctly. The rsync binary seems broken:
$\u0026gt; ldd /usr/bin/rsync linux-vdso.so.1 (0x00007ffcb294f000) libacl.so.1 =\u0026gt; /lib64/libacl.so.1 (0x00007f9571d29000) libpopt.so.0 =\u0026gt; not found libcrypto.so.1.1 =\u0026gt; /usr/lib64/libcrypto.so.1.1 (0x00007f9571a00000) libc.so.6 =\u0026gt; /lib64/libc.so.6 (0x00007f9571846000) libz.so.1 =\u0026gt; /lib64/libz.so.1 (0x00007f9571d0f000) libdl.so.2 =\u0026gt; /lib64/libdl.so.2 (0x00007f9571d0a000) libpthread.so.0 =\u0026gt; /lib64/libpthread.so.0 (0x00007f9571ce9000) /lib64/ld-linux-x86-64.so.2 (0x00007f9571dd6000) and then it\u0026rsquo;s very easy find the missing RDEPEND that must be fixed in the Macaroni repository:
$\u0026gt; luet q belongs libpopt.so.0 dev-libs/popt-1.16 In this case the library popt is missing on runtime_deps and you need to install it directly:
$\u0026gt; luet i dev-libs/popt üöÄ Luet 0.35.1-geaaru-g2d63605bff9ddee0171f4769c4e956317b910b56 2023-03-17 03:07:06 UTC - go1.20.2 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons-testing Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-funtoo-systemd-dev Revision: 451 - 2023-02-13 09:25:49 +0000 UTC üè† Repository: mottainai-testing Revision: 80 - 2023-03-17 21:34:59 +0000 UTC üß† Solving install tree... üç¶ [ 1 of 1] [N] dev-libs/popt::macaroni-funtoo-systemd-dev - 1.16 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 285 ¬µs). Do you want to continue with this operation? [y/N]: y üöö Downloading 1 packages... üì¶ [ 1 of 1] dev-libs/popt::macaroni-funtoo-systemd-dev - 1.16 # downloaded ‚úî üß† Sorting 1 packages operations... üçª Executing 1 packages operations... üç∞ [ 1 of 1] dev-libs/popt::macaroni-funtoo-systemd-dev - 1.16 # installed ‚úî And then no more issues available:
$\u0026gt; whip h linking.check Checking directory /usr/lib64... Checking directory /usr/lib... Checking directory /usr/bin... Checking directory /bin... Checking directory /usr/sbin... Checking directory /usr/libexec... [linking.check] Completed correctly. postgresql.postgres_setup: this hook permit to setup Postgres SQL setup with the SLOT selected. It\u0026rsquo;s available on lxd-compose-galaxy a project that set up a standalone Postgresql server based on configuration variables that will be described very soon on the LXD Compose website.
The whip-catalog is a YAML files catalog with bash/sh commands. If you find something missing or you have some idea about new hooks, please open a PR.
What next? Well, few is changed after the release 23.03 so, the open points are the same but we will push forward with a major priority the documentation. I hope that we will cover a good documentation part for the next release. Stay tuned!
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:11,href:"/blog/phoenix-23.03/",title:"Macaroni OS Phoenix 23.03 is out!",section:"Blog",content:`Finally, after two months of hard work, the release Phoenix 23.03 is out and is the first Desktop release under the new macaronios.org domain.
In these two months, we had to follow infrastructure issues (broken hard disks) and create the new Macaroni network. This is one of the reasons we have skipped the release of February.
We want to thank again the GARR consortium that is now our primary mirror under our CDN and this will permit in the next weeks to expose again the ISOs download page and our LXD images.
This release doesn\u0026rsquo;t expose extraordinary packages or upgrades but is a big milestone for us because a lot of our work is under the hood and will be better understood by the users in the next months when another big target will be reached: the creation of the Macaroni documentation.
A big milestone The first major target reached is the first big rewrite of the Macaroni PMS tool luet that now:
has a new solver completely rewritten that now respects repositories priorities, it\u0026rsquo;s 100x fast and consumes few memory. The only limit at the moment is that until the luet-build binary will be rewritten the repository metadata will be yet with a big YAML file that must be exploded at least one time when is called the luet repo update command but this will be fixed in the near future. This is been an important result to begin ARM integration
the integration of the new solver has permitted the creation of the mask packages feature. It works in a similar way to Funtoo portage and will be described in detail in the Macaroni documentation in the near future. This is an important result because will permit to supply multiple versions of the same package and using the mask feature to hide a specific version to a target rootfs. You can think of a package like NVIDIA drivers where legacy cards need to have a specific version, or again if a user wants to create their packages and hide the Macaroni version, etc.
the provides support is been reviewed to permit a good means to manage correctly packages that are replaced. The correct way to use provide is to define a specific version in the provides and not a selector. For example:
provides: - category: cat name: foo version: 0.1.0 the install command now doesn\u0026rsquo;t try to upgrade automatically the system; it just tries to resolve the dependencies and the packages selected and install them. This will permit to install of specific packages also when there are upgrades available.
the luet now permits to select of packages only by name. I really love this feature, because permits the reduction of the text written and speeds up the installation and research. For example:
$\u0026gt; luet i app-emulation/lxd-compose becomes:
$\u0026gt; luet i lxd-compose luet repo list command has now a new look and option:
$\u0026gt; luet repo list --urls geaaru-repo-index Geaaru Repository index Revision 4 - 2023-02-25 10:32:39 +0000 UTC Priority 1 - Type http Urls: * https://raw.githubusercontent.com/geaaru/repo-index/gh-pages macaroni-commons-dev Macaroni OS Commons Development Repository Revision 131 - 2023-03-08 22:17:57 +0000 UTC Priority 10 - Type http Urls: * https://dev.macaronios.org/macaroni-commons-dev/ macaroni-commons-testing Macaroni OS Commons Testing Repository Priority 20 - Type http Urls: * https://dl.macaronios.org/repos/macaroni-commons-testing/ * https://cdn2.macaronios.org/repos/macaroni-commons-testing/ * https://macaronios.mirror.garr.it/repos/macaroni-commons-testing/ the original solvers are no more available and will be dropped from the code when also the luet-build binary will be rewritten.
The upgrades/installs output is now more clear with the cons that for now the download process is not parallel. This fixes the progress bar issues. We are working on following an output similar to portage that will be available in the next release 0.35.0.
We have begun to work on commands that permit configuring subsets but they are to be complete.
it\u0026rsquo;s now available a new command luet query orphans that permits retrieving all packages no more available in the enabled repository.
In general, now you can control with luet every action and package of your system. If there are issues in the new solver you aren\u0026rsquo;t blocked, you can manually fix issues with hidden (and for expert users) commands luet miner that will be described in the documentation.
This is what is been said from an user on testing the new luet binary:
Feels like you took a Ford Fiesta and turned it into a Ferrari
Really, thanks for this comment that will get me more power to go ahead.
A lot of new improvements and features are in our backlog.
An important thing that is not yet available is the possibility to downgrade the packages if I user wants to convert a rootfs updated with a testing repository to a stable repository. But is in our plan to add this feature soon.
ATTENTION: Due to all these changes, my suggestion is to upgrade this time the luet binary manually with a download from the site and the follow what is been described in the new FAQ section of the website.
$\u0026gt; sudo wget -O /usr/bin/luet https://github.com/geaaru/luet/releases/download/v0.34.2-geaaru/luet-v0.34.2-geaaru-Linux-x86_64 $\u0026gt; sudo chmod a+x /usr/bin/luet We will improve this operation in the near future.
macaronictl gets power! The luet rewritten is not the only new improvement, the management CLI of Macaroni OS, macaronictl gets more power:
macaronictl env-update is been completely written in Golang following the same Funtoo/Gentoo logic. This permits to have Macaroni OS systems to the need to install the sys-apps/portage package. This migration is not yet completely completed but will be so in the next release.
macaronictl tool has a new etc-update command written in Golang that uses the same /etc/etc-update.conf config and it implements a similar logic to the Portage etc-update command.
macaronictl tool has a new kernel availables command that permit to retrieve all kernel available from the enabled repositories and supply some metadata:
$\u0026gt; macaronictl kernel availables --lts | KERNEL | KERNEL VERSION | PACKAGE VERSION | EOL | LTS | RELEASED | TYPE | |----------|----------------|-----------------|-----------|------|------------|---------| | macaroni | 4.14.305 | 4.14.305 | Jan, 2024 | true | 2017-11-12 | vanilla | | macaroni | 5.10.168 | 5.10.168 | Dec, 2026 | true | 2020-12-13 | vanilla | | macaroni | 5.15.94 | 5.15.94 | Oct, 2026 | true | 2021-10-31 | vanilla | | macaroni | 5.4.231 | 5.4.231 | Dec, 2025 | true | 2019-11-24 | vanilla | | macaroni | 6.1.12 | 6.1.12 | Dec, 2026 | true | 2022-12-11 | vanilla | This will help with the feature that will be available in the next future to switch between kernels.
Funtoo integration (experimental) In the middle of all the new implementations we have released a new release of the luet-portage-converter tool that is used normally to generate automatically updates from our luet specs.
I hope that this will be a lovely experience for the Funtoo users.
I will leave users with a bit of suspense until I will write the documentation in the next weeks but the new luet-portage-converter sync command will permits:
convert a Funtoo system to a Macaroni OS and get updates from Macaroni or restore the broken system.
sync with the Macaroni PMS the packages installed with emerge to the luet database and/or sync packages previously installed with luet and then upgraded with emerge.
Obviously, to use these features is needed a Macaroni OS with subsets portage and devel enabled.
ATTENTION: This new command is pretty experimental and must be used carefour.
Domain migration again I\u0026rsquo;m sorry but after the integration of the Consortium GARR I reviewed the stable domains with a CDN chain. I added in the FAQ section of the website some tips about easily upgrading the repositories. I hope that things will be more stable now but using free services has some cons.
What\u0026rsquo;s new This new release has some interesting updates:
LXD 5.11 and LXC 5.0.2
Libreoffice 7.5.0.3
Firefox 1.109.0.1
Brave 1.48.158
Grafana 9.3.6 and Prometheus 2.42.0
Blender 3.4.1
ZFS 2.1.9
KDE Framework 5.85.5 and KDE Plasma 5.22.5
Openshot video editing tool updated to release 2.6.1
Cinelerra is been dropped. The website has tons of forks without a tag and it seems hard to maintain.
Grub 2.04 with patch related to the use of new e2fsprogs v.1.47.0. See debian issue.
Open VMtools 12.1.5
All kernels modules are been renamed following the naming convention: kernel-\u0026lt;kernel-branch\u0026gt; as category. This will help searching and macaronictl integration. Always related to the kernel, the string LTS is been removed from kernel packages. The LTS information is now available over the package annotations.
See the release page for the detail of all updates.
What next? Hereinafter, our hot points for the next releases:
Drop support to Python 2.7 from Phoenix and leave Python 3.7 only. We will upgrade to Python 3.9 later.
Continue to work begun on writing documentation and FAQ for users.
Begin the rewrite of luet-build binary and improve look\u0026amp;feel of the luet output.
Add the new ISOs webpage and prepare the release of the ISO 23.03. We need to wait for the sync of the GARR mirror and the propagation.
Add new features to luet-portage-converter to manage multiple versions of the same package.
Add new features to macaronictl tool
Add Macaroni OS LXD images to images.linuxcontainers.org.
We waiting for you We waiting for you in our Discord Server.
Thanks Many thanks to all Funtoo devs that are the sap of all this and to all people that helps us with testing and donations.
Support Us Any user that wants to support our work for Macaroni could do this through the Github Sponsor.
`}),e.add({id:12,href:"/blog/new-domain/",title:"macaronios.org is here!",section:"Blog",content:`After 1 year of incubation under the Funtoo Foundation, the Macaroni OS has now its domain macaronios.org and its infrastructure. Really, thanks to the Funtoo Foundation and Daniel Robbins for its support that helped to Macaroni OS to be here today.
From the infrastructure aspect nothing is changed, all compilation tasks are executed over MottainaiCI cluster but with less resource power for now.
We hope that the community will help us to maintain the infrastructure costs with donations over our Github Sponsor or with VMs donations for compilation.
New Github Organization With the review of the Macaroni OS domain, it\u0026rsquo;s been created a new and independent GitHub organization macaroni-os and migrated all Git repositories there.
Domain migration and users impacts The old domain *.macaroni.funtoo.org will expire soon, the existing users that are yet with the repository geaaru-repo-index configured with the Github URL will receive automatically the upgrade of the repository/* packages.
$# luet repo update ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 2 ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 117 ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 620 ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 55 $# luet upgrade ‚ÑπÔ∏è Repository: geaaru-repo-index Priority: 1 Type: http Revision: 2 ‚ÑπÔ∏è Repository: macaroni-commons Priority: 2 Type: http Revision: 117 ‚ÑπÔ∏è Repository: macaroni-funtoo Priority: 2 Type: http Revision: 620 ‚ÑπÔ∏è Repository: mottainai-stable Priority: 1 Type: http Revision: 55 ü§î Computing upgrade, please hang tight... üí§ üåè Using solver implementation solverv2 . üåé Completed compute upgrade analysis in 23323842 ¬µs. +-------------------------------------+-------------+-------------+-------------------+---------+ | PACKAGE | NEW VERSION | OLD VERSION | REPOSITORY | LICENSE | +-------------------------------------+-------------+-------------+-------------------+---------+ | repository/geaaru-repo-index | 20230118 | 20220819 | geaaru-repo-index | | | repository/macaroni-commons | 20230118 | 20211210 | geaaru-repo-index | | | repository/macaroni-funtoo | 20230118 | 20211210 | geaaru-repo-index | | | repository/mottainai-stable | 20230118 | 20220318 | geaaru-repo-index | | +-------------------------------------+-------------+-------------+-------------------+---------+ By going forward, you are also accepting the licenses of the packages that you are going to install in your system. Do you want to continue with this operation? [y/N]: Instead, the users with the new configuration could receive the new repositories address on change the content of the the /etc/luet/luet.yaml (if the geaaru-repo-index is configured inline and not through the repository config file or editing the file /etc/luet/repos.conf.d/geaaru-repo-index.yml with this content:
- name: \u0026#34;geaaru-repo-index\u0026#34; description: \u0026#34;Geaaru Repository index\u0026#34; type: \u0026#34;http\u0026#34; enable: true cached: true priority: 1 urls: - \u0026#34;https://cdn.macaronios.org/mottainai/geaaru-repo-index\u0026#34; - \u0026#34;https://raw.githubusercontent.com/geaaru/repo-index/gh-pages\u0026#34; After that to get the new updates just run:
$# macaronictl etc-update The map with the changes of the URL is available here.
What next? Hereinafter, our hot points for the near future:
We working to complete the review of the luet installer and his algorithms to reduce the memory usage, rewrite the solver and introduce the packages mask concept. This will permit us to begin on working a Macaroni release for ARM (Banana PI, Raspberry).
The terragon release will drop the support to Python 3.7 to leave active only Python 3.9.
Create a full and clear documentation of all Macaroni features.
When the first two points will be reached will start the integration of macaroni-ffs project related to the Funtoo FFS technology and permit users to have easy the toolchains for compilation
A lot of things are in our plan, stay tuned!
Additional thanks On setup of the new infrastructure, I want to thank the all people who helped me in setting up the Cloudflare services in about two days. Really, thanks.
`}),e.add({id:13,href:"/iso/",title:"Macaroni Download",section:"Macaroni OS",content:` ISO Following the idea to share the right ISO for the right user we want to supply some indications that help users on choosing the ISO for their needs.
We use these labels in the following ISOs description with these meanings:
Label Description newbie Ideal for new users and/or non-developers that don't need a compiler. student Ideal for students that are searching for school stuff. developer Ideal for developers that need a compiler and includes. tester Ideal for users that want to help Macaroni with testing. funtoo Ideal for Funtoo/Gentoo users want to have Portage metadata on Macaroni. services Ideal for System Engineers, Developers and users who want to use Macaroni to set up services. nerd-herd Not for weak of heart. Need good preparation in computer science or advanced experience. Inspired by the Chuck Series. Choose your ISO At the moment, all our ISOs are based on Phoenix release. If you want to install Macaroni OS on your computer and/or laptop you need to use the Release ISOs. The weekly ISOs are for testing.
All of the ISOs use Calamares as Installer.
The password of the macaroni user is macaroni.
Name Labels Description Macaroni Funtoo Phoenix Gnome newbie student A minimal Gnome Desktop ISO to install Macaroni Gnome with Calamares or to recovery an existing system. Macaroni Funtoo Phoenix Gnome Live newbie student Ready to use ISO with different tools for Office/School/Graphic that could be installed too. Macaroni Funtoo Phoenix Gnome Live Wayland newbie student tester Experimental ISO with different tools for Office/School/Graphic that could be installed too. GDM has Wayland support enabled by default and Waydroid ready to install the container in a specific partition. Macaroni Funtoo Phoenix XFCE newbie student An XFCE Desktop ISO to install Macaroni XFCE with Calamares. Ideal for XFCE fans and for old computers. Macaroni Funtoo Phoenix LXQt newbie student An LXQt Desktop ISO to install Macaroni LXQt DE with Calamares. Ideal for LXQt fans and for old computers. Macaroni Funtoo Phoenix KDE newbie student tester A KDE Desktop ISO to install Macaroni KDE DE with Calamares. KDE at the moment by default supplies experimental Wayland integration that could be unstable with some video cards. Just use X11 mode in this case. Macaroni Funtoo Phoenix i3 nerd-herd An i3 Desktop ISO to install Macaroni i3 DE with XFCE Terminal through the Calamares installer. Ideal for i3 fans and for old computers. Macaroni Funtoo Phoenix Gnome Devel funtoo developer student nerd-herd A minimal Gnome Desktop ISO where the subsets portage and devel are enabled. Macaroni Funtoo Phoenix KDE Devel tester funtoo developer student nerd-herd A KDE Desktop ISO to install Macaroni KDE DE with Calamares and with subsets portage and devel. KDE at the moment by default supplies experimental Wayland integration that could be unstable with some video cards. Just use X11 mode in this case. Macaroni Funtoo Phoenix XFCE Devel funtoo developer student nerd-herd An XFCE Desktop ISO to install Macaroni XFCE with Calamares where the subsets portage and devel are enabled. Ideal for XFCE fans and for old computers. Macaroni Funtoo Phoenix Gnome Testing Live tester Macaroni Gnome Live ISO with testing and/or develop repositories. Macaroni Funtoo Phoenix XFCE Testing Live tester Macaroni XFCE Live ISO with testing and/or develop repositories. Macaroni Funtoo Phoenix LXQt Testing tester Macaroni LXQt Desktop ISO with testing and/or develop repositories. Macaroni Funtoo Phoenix i3 Testing tester nerd-herd Macaroni i3 Desktop ISO with testing and/or develop repositories. Macaroni Funtoo Phoenix Server services Macaroni Server release with a minimal number of packages and with LXD. Normally used in server or VM. Macaroni Funtoo Phoenix Server Devel services funtoo developer nerd-herd Macaroni Server release with the subsets \`portage\` and \`devel\` enabled. Installing needed packages can be done with Portage. Our latest release is 24.08 and it uses kernel 5.10.223 for Server ISOs and 6.1.104 for the others.
`}),e.add({id:14,href:"/partners/cdn77/",title:"CDN 77",section:"Partners",content:`CDN77 is a Content Delivery Network that between the rest is specialized in: massive network scale, advanced video engineering.
The CDN77 supply our primaries repositories domains and help support M.A.R.K. stack development.
Thank you very much for your support.
`}),e.add({id:15,href:"/partners/topix/",title:"Consortium TOP-IX",section:"Partners",content:`The TOP-IX Consortium has been actively working on several fronts: managing the Internet Exchange infrastructure (the reason for its initial foundation in 2002); running the Development Program, we have been added to this program; the Streaming platform, which has been providing support for technological innovation projects since 2006; and the Streaming platform, which enabled the Consortium to act as the official provider of the Berlinale Film Festival since 2006.
The Consortium TOP-IX supplies a Development node that helps us with the building process of the Macaroni packages.
Thank you very much for your support.
`}),e.add({id:16,href:"/partners/docker/",title:"Docker Inc.",section:"Partners",content:`The Docker Inc. approved the Macaroni OS to the Docker-Sponsored Open Source program that permits to remove the rate-limit for all users pulling public images from our namespace.
The Macaroni OS Docker images are available on our macaronios organization.
Thank you very much for your support.
`}),e.add({id:17,href:"/partners/garr/",title:"Consortium GARR",section:"Partners",content:`GARR is the ultra-broadband network dedicated to the Italian research and education community. Its main objective is to provide high-performance connectivity and to develop innovative services for the daily activities of researchers, professors and students as well as for international collaboration.
GARR network is designed and managed by Consortium GARR, a non-profit association founded under the auspices of the Ministry of Education, University and Research. The members are¬†CNR,¬†ENEA,¬†INAF, INFN, INGV and¬†CRUI Foundation, representing all Italian universities.
The Consortium GARR supply our primary mirror at macaronios.mirror.garr.it.
Thank you very much for your support.
`}),e.add({id:18,href:"/docs/funtoo/",title:"Funtoo zone",section:"Macaroni OS",content:` Main differences between Funtoo and Macaroni OS # 1. Static UID/GID # The system UID (user ID) and GID (group ID) of the major services are statically allocated and managed through the entities tool and his catalog. This helps to have a more linear installation between systems and help on share network filesystems like NFS.
It is possible to see the list of the available uid/gid with the following commands:
$\u0026gt; # Show list of all groups availables in our catalog $\u0026gt; entities list groups --specs-dir /usr/share/macaroni/entities/ $\u0026gt; # Show list of all users available in our catalog $\u0026gt; entities list users --specs-dir /usr/share/macaroni/entities/ $\u0026gt; # Show list of all shadow available in our catalog $\u0026gt; entities list shadow --specs-dir /usr/share/macaroni/entities/ $\u0026gt; # Show list of all gshadow available in our catalog $\u0026gt; entities list gshadow --specs-dir /usr/share/macaroni/entities/ $\u0026gt; # Show list of all groups configured in the current rootfs $\u0026gt; entities list groups $\u0026gt; # Show list of all users configured in the current rootfs $\u0026gt; entities list users The entities tool is a replacement of the classic adduser, gpasswd, etc.
2. Use flags not aligned to Funtoo Profiles # Macaroni OS is a binaries-based distribution that wants to try to supply multiple DEs. To reach this target means that a lot of user flags must be enabled but without trying to inject unnecessary dependencies when possible. So, for this reason, the control of the use flags selected for every package is done by the anise-portage-converter tool that permits to override existing dependencies and/or elaborate dependencies based on the use flags defined in the anise-portage-converter specs. This permits great control of the compilation process but unfortunately, doesn\u0026rsquo;t permit it to maintain compatibility with the Funtoo profiles that are used to configure the use flags based on the needs of the users and their choice. This means that installing Macaroni\u0026rsquo;s packages and just using emerge could be not managed with a simple configuration of the Funtoo profiles and instead it\u0026rsquo;s highly probable that just trying to emerge the @world will ask for changes of the use flags used instead by Macaroni.
3. Split packages # So, in order to support multiple use cases but with fewer dependencies injected we have some packages that have been split without having a 1:1 map with an ebuild. For example, the pinentry package installs additional binary when gtk/gnome use flag is enabled with the pinetry-gnome binary or with the qt use flag the pinentry-qt, etc. Thanks to our build process it\u0026rsquo;s very easy to assign the specific file to a specific package, but this package will be without portage metadata and instead, the use flags of the main pinentry package will be minimal.
4. Packages from scratch # In addition, there are packages that are not related to a specific ebuild because the Macaroni build process permits building packages from scratch or through different Docker images as a base. These will be available in your system but not visible through the emerge tool, for example, the anise binary is compiled directly with Go without an ebuild.
5. Portage metadata optional # The installation of the Portage metadata and the include files are optional, they are installed only when the subsets devel and portage are enabled. This permits users without the need to compile software to reduce space used in their filesystem.
The Portage package database under the directory /var/db/pkg is then used by the anise-portage-converter tool to compare packages updates with emerge that will be added in the Macaroni database with the scm repository and will be part of the Macaroni upgrades if the installed version will be elder or will be the same version available in Macaroni repository. In particular, in order to automatically install missing runtime dependencies the anise tool creates a hash will the requires of the analyzed package and if this hash is different from the hash of the installed package will be queued for the upgrade with the asterisk in the version (for example, *1.1.1). It\u0026rsquo;s possible that the injected package added from anise-portage-converter will have different requires of the Macaroni original specs; this is the reason because will be replaced. This could be avoided by masking the package.
6. etc-update and env-update implementation # The Funtoo/Gentoo etc-update and env-update scripts are supplied by the sys-apps/portage package that requires Python to be installed with a lot of dependencies.
In order to reduce the installation of the packages for a Macaroni\u0026rsquo;s minimal image where Python is not something needed, for example considering CD/CI tasks, Macaroni implements the macaronictl etc-update that supplies an etc-update compliant command and as a replacer. It has a few differences that are more related to the interactive shell but for the rest, it\u0026rsquo;s pretty similar.
The same concept is applicable to the macaronictl env-update command that reimplements a Portage-compliant logic. The behavior is configurable, instead of updating every time the system and the (t)csh environment files, for these two the configuration is enabled respectively with the options --systemd and --csh.
7. Post-install/Post-remove commands # In the Funtoo/Gentoo world where every package is compiled the ebuild file contains the instructions about how to compile the package supply yet the steps for the post-installation and post-remove. Macaroni divides completely the build process from the runtime/install phase and as described in the previous chapters the Portage metadata could not be present, like the kits. In Macaroni, the post-install and post-remove operations are managed by the finalizer that could be added in the anise specs over the YAML file finalize.yaml of the package. Due to the complexity of this phase, and because sometimes could be helpful to re-run the post-install steps we have created the tool whip that collects the instructions about what runs as a specific hook. The hook is a scripted list of commands to run.
The same hooks are used as post-install/pre-install steps or just like ready-to-use commands for particular example described in the next chapters about upgrading Funtoo 1.4 to Funtoo Next/Macaroni.
At the moment, it\u0026rsquo;s possible that some hooks could be missing and please, you open a PR or an issue if you find something.
8. Macaroni solver logic # The Funtoo/Gentoo\u0026rsquo;s Portage solver always considers RDEPEND (runtime dependencies) as mandatory dependencies for the compilation of a package. We understand this choice, for example, this is needed for virtual package, the consequence is the ebuilds have some dependencies added as RDEPEND when could be more correct to have them as DEPEND for Macaroni. So, for these use cases, we override the dependencies through the anise-portage-converter specs.
Another big difference is that at the moment the anise solver doesn\u0026rsquo;t support the OR condition needed to supply alternative packages supply the same feature. This is been a design choice to try to maintain things more simple for the solver, a similar functionality could be handled by the provides and the mask feature. But it\u0026rsquo;s something that could be grown based on the use cases we need to support.
Third, the default behavior of the solver in the upgrading process is to select only packages with a greater version for speedup reasons. The downgrade is possible on adding --deep flag on upgrade command.
9. Kernel, initrd and extra modules # At the moment we writing this documentation the kernels available to the Macaroni OS are based on vanilla, compiled over the Macaroni Terragon Release system but without generating Portage metadata. In order to handle automatically the upgrade of the branch release selected we don\u0026rsquo;t follow the Funtoo way where the slot of the kernel is based on the full version of the kernel. We understand the choice of Funtoo where the user has sufficient skill to manage the compilation of the kernel and a more precise tune, but it\u0026rsquo;s a bit more complex for a binary distribution to manage the automatic upgrade. So, all kernels and modules use as a package category with the name kernel-\u0026lt;branch-version\u0026gt; and the new versions of the category will replace the previous. So, the package kernel-5.10/macaroni-full-5.10.198 will be upgraded by the package kernel-5.10/macaroni-full-5.10.199, etc.
In a similar way, the extra kernel modules will be managed with the same logic the category but with the version of the module used, for example, for ZFS, the package will be kernel-5.10/zfs-kmod-2.2.0 and for new kernel release we will bump a new build version of the same package, for example, kernel-5.10/zfs-kmod-2.2.0+1.
About initrd, at the moment we use a custom initrd based of Golang u-root for the Macaroni ISO, and instead it\u0026rsquo;s used Dracut for the generation of the initrd images in the installed rootfs (Desktop and Server).
Upgrade Funtoo 1.4 to Funtoo Next with Macaroni # Before beginning to describe how to upgrade a Funtoo 1.4 rootfs to a Funtoo Next rootfs I want to share that at the moment the Funtoo Community doesn\u0026rsquo;t support officially the upgrade of a Funtoo 1.4 environment to a Funtoo Next environment.
This means that this guide is not officially supported by Funtoo Community but it\u0026rsquo;s an experimental behavior about how Macaroni OS could be used to help Funtoo users in some particular operations.
Macaroni\u0026rsquo;s team does not suggest using this experimental process without specific tests and with a backup to recover the state of the previous system before the upgrade.
The second point to share before going ahead is that there are a few differences between Funtoo and Macaroni that will be available after this upgrade based on what is been described in the previous chapters. Any user who wants to add some more details about restoring a Funtoo complete state after this operation could add more information here by sending a PR.
Due the complexity of this workflow we have prepared a whip hook that could be used to speedup some upgrade process.
It\u0026rsquo;s also available in an asciinema stream that shows the steps to upgrade an LXD container with Funtoo 1.4 to a Macaroni Funtoo Next rootfs that we share hereinafter, too.
For this presentation we use an LXD container but the steps for a Desktop environment are pretty equal.
1. Create the LXD Funtoo 1.4 Container # The official images.linuxcontainers.org contains the Funtoo LXD images so we can launch the container with this command:
$\u0026gt; lxc launch -p default images:funtoo/1.4 test NOTE: Funtoo 1.4 is no longer available on Incus Simplestreams Server. You can consider images:funtoo/1.4 an alias that describe the image with Funtoo 1.4.
We consider that the default profiles is configured correctly with a valid storage pool and a network interface where is enabled DHCP.
2. Install Macaroni PMS binary # At the moment, the Macaroni PMS repository is luet but the installer creates already the symbolic link with the new name anise. The repository will be soon migrated with the new name.
$\u0026gt; curl https://raw.githubusercontent.com/geaaru/luet/geaaru/contrib/config/get_luet_root.sh | sh 3. Install Macaroni repositories # In order to start the upgrade we need to install the Macaroni repositories. In this example, we use the Phoenix release but could be used the Terragon release too.
$\u0026gt; anise i -y repository/macaroni-commons-testing repository/macaroni-phoenix-testing 4. Download the repositories metadata # Before to download the repositories data, we want to share how it\u0026rsquo;s possible to mask a package available from different packages and to configure the solver to get only the package the user wants. For example, the package jq is available inside the mottainai-stable repository without Portage metadata, but it\u0026rsquo;s also available as package app-admin/jq with the Portage metadata and based on Funtoo ebuild. In this case, to force the second it\u0026rsquo;s possible mask the other in this way:
$\u0026gt; mkdir /etc/luet/mask.d $\u0026gt; echo \u0026#34; enabled: true rules: - utils/jq::mottainai-stable \u0026#34; \u0026gt; /etc/luet/mask.d/00-mask.yml Another important thing to do before execute the upgrade is to enable the subsets devel and portage that are by default disabled.
$\u0026gt; anise subsets enable devel portage and finally to start the repo update:
$\u0026gt; anise repo update 5. Install anise-portage-converter tool # In order to upgrade the system we need to install the anise-portage-converter tool that will sync the list of the installed packages in the system of the Portage inside the anise database.
$\u0026gt; anise install -y anise-portage-converter app-misc/jq 6. Sync Portage to Anise database # $\u0026gt; anise-portage-converter sync eventually it\u0026rsquo;s possible to run the command with --dry-run to test the execution without update the anise database.
7. Install Macaroni tools # We need to install the whip tool and the other stuff used in the Macaroni finalizer.
$\u0026gt; anise i -y whip whip-catalog entities whip-profiles/macaroni macaronictl-thin entities macaroni/entities-catalog These packages could be removed at the end of the upgrade if you will use the rootfs only as Funtoo rootfs.
8. Start the upgrade # Finally, we can start the upgrade and use the environment variable SKIP_GRUB=1 to skip the generation of the macaroni initrd and/or Grub setup.
It\u0026rsquo;s also available the variable SKIP_CLEANUP to avoid the clean of the anise cache with all downloaded packages. If for example, you want to run the same workflow in another node and copy the packages manually.
$\u0026gt; SKIP_GRUB=1 whip h macaroni.upgrade2funtoo-next or for Desktop/Server filesystem:
$\u0026gt; whip h macaroni.upgrade2funtoo-next 9. Run macaronictl etc-update # In the same way, you run etc-update in Funtoo you can run macaronictl etc-update and check what files merge and/or drop. But it\u0026rsquo;s also true that if you have installed the sys-apps/portage package you can use also the etc-update from Portage. The both can work together.
At the moment, there are known issues in anise that could generate extra diff: anise doesn\u0026rsquo;t support a CONFIG_PROTECT_MASK similar option. So, if it\u0026rsquo;s been configured the directory /etc as a protected directory, every file will be protected also on removing a package. But what has not been managed automatically from anise could be overridden with macaronictl etc-update with the option -m|--mask-path that permits to define of one or more additional mask paths.
$\u0026gt; macaronictl etc-update --help handle configuration file updates and automatically merge the CONFIG_PROTECT_MASK files. $\u0026gt; macaronictl etc-update Usage: etc-update [flags] Aliases: etc-update, etc Flags: -h, --help help for etc-update -m, --mask-path stringArray Define one or more additional mask paths (CONFIG_PROTECT_MASK). -p, --path stringArray Scan one or more specific paths (CONFIG_PROTECT). --rootfs string Override the default path where run etc-update. (experimental) (default \u0026#34;/\u0026#34;) Global Flags: -c, --config string Macaronictl configuration file -d, --debug Enable debug output. So, running the command will be show an interactive shell to understand what files merge or drop:
$\u0026gt; macaronictl etc-update Scanning Configuration files... File ._cfg0001_sshd_config is an orphan. Removing it directly... File ._cfg0002_sshd_config is an orphan. Removing it directly... Automerging file /etc/ca-certificates.conf config protect masked. Automerging file /etc/os-release config protect masked. The following is the list of files which need updating, each configuration file is followed by a list of possible replacement files. [ 1] /etc/env.d/50baselayout [ 2] /etc/init.d/devfs [ 3] /etc/init.d/dhcpcd [ 4] /etc/init.d/s6-svscan [ 5] /etc/netif.d/dhclient [ 6] /etc/ego.conf [ 7] /etc/init.d/numlock [ 8] /etc/terminfo/s/screen [ 9] /etc/rc.conf [ 10] /etc/init.d/agetty [ 11] /etc/ssh/moduli [ 12] /etc/terminfo/s/screen-256color [ 13] /etc/dhcpcd.conf [ 14] /etc/init.d/cgroups [ 15] /etc/init.d/hwclock [ 16] /etc/init.d/localmount [ 17] /etc/init.d/modules [ 18] /etc/init.d/osclock [ 19] /etc/portage/savedconfig/sys-apps/busybox-1.36.0 [ 20] /etc/python-exec/python-exec.conf [ 21] /etc/init.d/bootmisc [ 22] /etc/terminfo/x/xterm-color [ 23] /etc/terminfo/s/screen.xterm-256color [ 24] /etc/issue [ 25] /etc/terminfo/x/xterm [ 26] /etc/terminfo/x/xterm-256color [ -1] to exit [ -3] to auto merge all files [ -7] to discard all updates Please select a file to edit by entering the corresponding number. (don\u0026#39;t use -3 or -7 if you\u0026#39;re ensure what to do): One of the differences between macaronictl etc-update and etc-update is that the file number is reset when a specific file is been managed, this permits to use of the number 1 always until the files are been all processed.
For example, the files under /etc/terminfo/ normally must be merged and will be soon managed as CONFIG_PROTECT_MASK when the feature will present in the anise software.
10. Run macaronictl env-update # This command updates the /etc/profile.env and regenerates the file ld.so.cache like the Funtoo env-update command:
$\u0026gt; macaronictl env-update \u0026gt;\u0026gt;\u0026gt; Generating /etc/profile.env... \u0026gt;\u0026gt;\u0026gt; Generating /etc/ld.so.conf... \u0026gt;\u0026gt;\u0026gt; Regenerating /etc/ld.so.cache... 11. Verify the linking of the installed files # It\u0026rsquo;s available a whip hook that permits to verify if there are libraries or binaries with links to no more available libraries.
It\u0026rsquo;s a good idea to run this command on every upgrade:
$\u0026gt; whip h linking.check Checking directory /usr/lib64... Checking directory /usr/lib... Checking directory /usr/bin... Checking directory /bin... Checking directory /usr/sbin... Checking directory /usr/libexec... [linking.check] Completed correctly. The directories checked by default are these:
/usr/lib64 /usr/lib /usr/bin /bin /usr/sbin /usr/libexec But could be changed overriding the environment variable DIRS:
$\u0026gt; DIRS=\u0026#34;/usr/lib64\u0026#34; whip h linking.check 12. Remove orphans packages # When the upgrade is ended, it\u0026rsquo;s possible check what packages installed are no more available in the Macaroni repositories that could be removed through the anise query orphans command:
# anise q orphans üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üß† Searching for orphans packages... dev-python/chardet-compat-4.0.0 dev-python/enum34-1.1.10 dev-python/setuptools_scm-compat-5.0.2 dev-python/cryptography-compat-3.3.2 dev-python/mwparserfromhell-compat-0.5.4 dev-python/setuptools-compat-44.1.1 dev-lang-2.7/python-2.7.18 sys-apps/opentmpfiles-0.3.1 sys-devel/binutils-config-5.4 dev-python/pyopenssl-compat-21.0.0 dev-python/zipp-compat-1.2.0 dev-python/requests-compat-2.27.1 dev-python/importlib_metadata-compat-2.1.1 dev-python/packaging-compat-20.9 sys-kernel-debian-sources-6.3.7_p1/debian-sources-6.3.7 dev-python/configparser-4.0.2 dev-python/pygments-compat-2.5.2 dev-python/wheel-compat-0.37.1 dev-lang-3.7/python-3.7.17 sys-devel-9.2.0/gcc-9.2.0 dev-python/idna-compat-2.9 The debian-sources package will be always see as orphans for the reasons described before. Any user could choice what packages remove or leave.
For the example we want to leave only packages available in Macaroni to the steps will be:
$\u0026gt; # Removing all python 2.7 packages... $\u0026gt; anise rm -y $(anise s compat --installed) üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üî™ [ 1 of 13] [D] dev-python/chardet-compat::scm - 4.0.0 üî™ [ 2 of 13] [D] dev-python/cryptography-compat::scm - 3.3.2 üî™ [ 3 of 13] [D] dev-python/idna-compat::scm - 2.9 üî™ [ 4 of 13] [D] dev-python/importlib_metadata-compat::scm - 2.1.1 üî™ [ 5 of 13] [D] dev-python/mwparserfromhell-compat::scm - 0.5.4 üî™ [ 6 of 13] [D] dev-python/packaging-compat::scm - 20.9 üî™ [ 7 of 13] [D] dev-python/pygments-compat::scm - 2.5.2 üî™ [ 8 of 13] [D] dev-python/pyopenssl-compat::scm - 21.0.0 üî™ [ 9 of 13] [D] dev-python/requests-compat::scm - 2.27.1 üî™ [ 10 of 13] [D] dev-python/setuptools-compat::scm - 44.1.1 üî™ [ 11 of 13] [D] dev-python/setuptools_scm-compat::scm - 5.0.2 üî™ [ 12 of 13] [D] dev-python/wheel-compat::scm - 0.37.1 üî™ [ 13 of 13] [D] dev-python/zipp-compat::scm - 1.2.0 ‚ôªÔ∏è [ 1 of 13] dev-python/chardet-compat::scm - 4.0.0 # uninstalled ‚úî ‚ôªÔ∏è [ 2 of 13] dev-python/cryptography-compat::scm - 3.3.2 # uninstalled ‚úî ‚ôªÔ∏è [ 3 of 13] dev-python/idna-compat::scm - 2.9 # uninstalled ‚úî ‚ôªÔ∏è [ 4 of 13] dev-python/importlib_metadata-compat::scm - 2.1.1 # uninstalled ‚úî ‚ôªÔ∏è [ 5 of 13] dev-python/mwparserfromhell-compat::scm - 0.5.4 # uninstalled ‚úî ‚ôªÔ∏è [ 6 of 13] dev-python/packaging-compat::scm - 20.9 # uninstalled ‚úî ‚ôªÔ∏è [ 7 of 13] dev-python/pygments-compat::scm - 2.5.2 # uninstalled ‚úî ‚ôªÔ∏è [ 8 of 13] dev-python/pyopenssl-compat::scm - 21.0.0 # uninstalled ‚úî ‚ôªÔ∏è [ 9 of 13] dev-python/requests-compat::scm - 2.27.1 # uninstalled ‚úî ‚ôªÔ∏è [ 10 of 13] dev-python/setuptools-compat::scm - 44.1.1 # uninstalled ‚úî ‚ôªÔ∏è [ 11 of 13] dev-python/setuptools_scm-compat::scm - 5.0.2 # uninstalled ‚úî ‚ôªÔ∏è [ 12 of 13] dev-python/wheel-compat::scm - 0.37.1 # uninstalled ‚úî ‚ôªÔ∏è [ 13 of 13] dev-python/zipp-compat::scm - 1.2.0 # uninstalled ‚úî and later removing the old GCC and Python versions, etc.:
$\u0026gt; anise rm -y dev-python/configparser dev-python/enum34 \\ sys-kernel-debian-sources-6.3.7_p1/debian-sources dev-lang-3.7/python \\ sys-devel-9.2.0/gcc dev-lang-2.7/python sys-devel/binutils-config 13. Reboot and starting to play with Funtoo üéä # The job is done! The container is been upgraded.
$\u0026gt; reboot and later begin with the Funtoo fun:
$\u0026gt; ego sync Integrate Funtoo Next rootfs with Macaroni # Hereinafter will be shared the steps needed to integrate Macaroni into an existing Funtoo Next filesystem and get the power from both worlds.
The Funtoo Community doesn\u0026rsquo;t support officially issues from filesystems that don\u0026rsquo;t follow the Wolf Pack Philosophy, so before opening issues about errors on emerging packages from Funtoo Kits you need to be sure that the issue is easily reproducible from the Funtoo Developers Team. Unlucky, due to the different processes of the Macaroni build tools and the dynamic build process managed by the anise-portage-converter tool isn\u0026rsquo;t so easy to follow a logic based on Funtoo profiles as described in the previous chapters.
Like described for the Funtoo 1.4 upgrade we use an LXD container to describe the steps to integrate Macaroni OS to a Funtoo Next filesytem.
1. Create the LXD Funtoo Next Container # The official images.linuxcontainers.org contains the Funtoo LXD images so we could launch the container with this command:
$\u0026gt; lxc launch -p default macaroni:funtoo/next-stage3 test $\u0026gt; # or using Incus $\u0026gt; incus launch -p default macaroni:funtoo/next-stage3 test We consider that the default profiles is configured correctly with a valid storage pool and a network interface where is enabled DHCP.
2. Install Macaroni PMS binary # At the moment, the Macaroni PMS repository is luet but the installer creates already the symbolic link with the new name anise. The repository will be soon migrated with the new name.
$\u0026gt; curl https://raw.githubusercontent.com/geaaru/luet/geaaru/contrib/config/get_luet_root.sh | sh 3. Install Macaroni repositories # In order to start the upgrade we need to install the Macaroni repositories. In this example, we use the Phoenix release but could be used the Terragon release too.
$\u0026gt; anise i -y repository/macaroni-commons-testing repository/macaroni-phoenix-testing 4. Download the repositories metadata # Before to download the repositories data, we want to share how it\u0026rsquo;s possible to mask a package available from different packages and to configure the solver to get only the package the user wants. For example, the package jq is available inside the mottainai-stable repository without Portage metadata, but it\u0026rsquo;s also available as package app-admin/jq with the Portage metadata and based on Funtoo ebuild. In this case, to force the second it\u0026rsquo;s possible mask the other in this way:
$\u0026gt; mkdir /etc/luet/mask.d $\u0026gt; echo \u0026#34; enabled: true rules: - utils/jq::mottainai-stable \u0026#34; \u0026gt; /etc/luet/mask.d/00-mask.yml Another important thing to do before execute the upgrade is to enable the subsets devel and portage that are by default disabled.
$\u0026gt; anise subsets enable devel portage and finally to start the repo update:
$\u0026gt; anise repo update 5. Install anise-portage-converter tool # In order to upgrade the system we need to install the anise-portage-converter tool that will sync the list of the installed packages in the system of the Portage inside the anise database.
$\u0026gt; anise install -y anise-portage-converter app-misc/jq 6. Sync Portage to Anise database # $\u0026gt; anise-portage-converter sync eventually it\u0026rsquo;s possible to run the command with --dry-run to test the execution without update the anise database.
7. Install Macaroni tools # We need to install the whip tool and the other stuff used in the Macaroni finalizer.
$\u0026gt; anise i -y whip whip-catalog entities whip-profiles/macaroni macaronictl-thin entities macaroni/entities-catalog These packages could be removed at the end of the upgrade if you will use the rootfs only as Funtoo rootfs.
8. Start the upgrade # Finally, we can start the upgrade and use the environment variable SKIP_GRUB=1 to skip the generation of the macaroni initrd and/or Grub setup.
It\u0026rsquo;s also available the variable SKIP_CLEANUP to avoid the clean of the anise cache with all downloaded packages. If for example, you want to run the same workflow in another node and copy the packages manually.
$\u0026gt; SKIP_GRUB=1 whip h macaroni.funtoo2macaroni or for Desktop/Server filesystem:
$\u0026gt; whip h macaroni.funtoo2macaroni 9. Run macaronictl etc-update # In the same way, you run etc-update in Funtoo you can run macaronictl etc-update and check what files merge and/or drop. But it\u0026rsquo;s also true that if you have installed the sys-apps/portage package you can use also the etc-update from Portage. The both can work together.
At the moment, there are known issues in anise that could generate extra diff: anise doesn\u0026rsquo;t support a CONFIG_PROTECT_MASK similar option. So, if it\u0026rsquo;s been configured the directory /etc as a protected directory, every file will be protected also on removing a package. But what has not been managed automatically from anise could be overridden with macaronictl etc-update with the option -m|--mask-path that permits to define of one or more additional mask paths.
$\u0026gt; macaronictl etc-update --help handle configuration file updates and automatically merge the CONFIG_PROTECT_MASK files. $\u0026gt; macaronictl etc-update Usage: etc-update [flags] Aliases: etc-update, etc Flags: -h, --help help for etc-update -m, --mask-path stringArray Define one or more additional mask paths (CONFIG_PROTECT_MASK). -p, --path stringArray Scan one or more specific paths (CONFIG_PROTECT). --rootfs string Override the default path where run etc-update. (experimental) (default \u0026#34;/\u0026#34;) Global Flags: -c, --config string Macaronictl configuration file -d, --debug Enable debug output. So, running the command will be show an interactive shell to understand what files merge or drop:
$\u0026gt; macaronictl etc-update Scanning Configuration files... Automerging file /etc/os-release config protect masked. Automerging file /etc/ca-certificates.conf config protect masked. The following is the list of files which need updating, each configuration file is followed by a list of possible replacement files. [ 1] /etc/env.d/50baselayout [ 2] /etc/netif.d/dhclient [ 3] /etc/portage/savedconfig/sys-apps/busybox-1.36.0 [ 4] /etc/issue [ -1] to exit [ -3] to auto merge all files [ -7] to discard all updates Please select a file to edit by entering the corresponding number. (don\u0026#39;t use -3 or -7 if you\u0026#39;re ensure what to do): -3 File /etc/env.d/50baselayout replaced by new file. File /etc/env.d/50baselayout replaced by new file. File /etc/netif.d/dhclient replaced by new file. File /etc/netif.d/dhclient replaced by new file. File /etc/portage/savedconfig/sys-apps/busybox-1.36.0 replaced by new file. File /etc/portage/savedconfig/sys-apps/busybox-1.36.0 replaced by new file. File /etc/issue replaced by new file. File /etc/issue replaced by new file. Nothing left to do; exiting. :) One of the differences between macaronictl etc-update and etc-update is that the file number is reset when a specific file is been managed, this permits to use of the number 1 always until the files are been all processed.
For example, the files under /etc/terminfo/ normally must be merged and will be soon managed as CONFIG_PROTECT_MASK when the feature will present in the anise software.
10. Run macaronictl env-update # This command updates the /etc/profile.env and regenerates the file ld.so.cache like the Funtoo env-update command:
$\u0026gt; macaronictl env-update \u0026gt;\u0026gt;\u0026gt; Generating /etc/profile.env... \u0026gt;\u0026gt;\u0026gt; Generating /etc/ld.so.conf... \u0026gt;\u0026gt;\u0026gt; Regenerating /etc/ld.so.cache... 11. Verify the linking of the installed files # It\u0026rsquo;s available a whip hook that permits to verify if there are libraries or binaries with links to no more available libraries.
It\u0026rsquo;s a good idea to run this command on every upgrade:
$\u0026gt; whip h linking.check Checking directory /usr/lib64... Checking directory /usr/lib... Checking directory /usr/bin... Checking directory /bin... Checking directory /usr/sbin... Checking directory /usr/libexec... [linking.check] Completed correctly. The directories checked by default are these:
/usr/lib64 /usr/lib /usr/bin /bin /usr/sbin /usr/libexec But could be changed overriding the environment variable DIRS:
$\u0026gt; DIRS=\u0026#34;/usr/lib64\u0026#34; whip h linking.check 12. Remove orphans packages # When the upgrade is ended, it\u0026rsquo;s possible check what packages installed are no more available in the Macaroni repositories that could be removed through the anise query orphans command:
$\u0026gt; anise q orphans üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:31:44 UTC - go1.20.3 üß† Searching for orphans packages... sys-devel-12.3.0/gcc-12.3.0 sys-kernel-debian-sources-6.4.13_p1-r1/debian-sources-6.4.13 dev-util/b2-4.10.1 In this moment, Macaroni OS uses GCC 11 but we will add GCC 12 on Terragon release in the near future.
The debian-sources package will be always see as orphans for the reasons described before. Any user could choice what packages remove or leave.
$\u0026gt; anise rm -y sys-devel-12.3.0/gcc sys-kernel-debian-sources-6.4.13_p1-r1/debian-sources üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:31:44 UTC - go1.20.3 üî™ [ 1 of 2] [D] sys-devel-12.3.0/gcc::scm - 12.3.0 üî™ [ 2 of 2] [D] sys-kernel-debian-sources-6.4.13_p1-r1/debian-sources::scm - 6.4.13 ‚ôªÔ∏è [ 1 of 2] sys-devel-12.3.0/gcc::scm - 12.3.0 # uninstalled ‚úî ‚ôªÔ∏è [ 2 of 2] sys-kernel-debian-sources-6.4.13_p1-r1/debian-sources::scm - 6.4.13 # uninstalled ‚úî 13. Reboot and starting to play with Funtoo üéä # The job is done! The container is been integrated with Macaroni PMS.
$\u0026gt; reboot You can install the Macaroni OS metadata with the specific version with:
$\u0026gt; anise i -y meta-repo or to use Funtoo way:
$\u0026gt; ego sync Note: after upgrade the system it\u0026rsquo;s better setup GCC with:
$\u0026gt; gcc-config 1 * Switching native-compiler to x86_64-pc-linux-gnu-11.3.0 ... [ ok ] Using Funtoo Kits in Macaroni # We want describe how it\u0026rsquo;s possible to use the Funtoo Portage and emerge in Macaroni and merge packages to anise database.
Inside the Macaroni repository we supply a freezed tree of all Funtoo kits that is been used to build the packages availables. If you want just add packages that at the moment aren\u0026rsquo;t present in the Macaroni tree could be a good idea using the same tree else you can follow the Funtoo pattern and to run ego sync.
1. Verify anise subsets configuration # Before starting on this it\u0026rsquo;s mandatory that your system is been installed with the devel and portage subsets.
This the command that permits to verify this condition:
$\u0026gt; anise subsets list üç® Subsets enabled: * portage Portage metadata and files. * devel Includes and devel files. Needed for compilation. * desktop If these subsets aren\u0026rsquo;t present means that you choice to install the release not devel. But this is not an issue you can change the subsets on the road and we have prepared a whip hook that helps on this.
So, to enable these subsets you need to execute this command:
$\u0026gt; ansie subsets enable devel portage Subsets devel portage enabled ‚úî . So, ONLY if the subsets wasn\u0026rsquo;t enabled you need to execute this command:
$\u0026gt; whip h macaroni.apply-subsets 2. Install the packages needed to use Portage and Funtoo stuff # It\u0026rsquo;s possible that some packages defined in this list will be already present if you have installed the devel ISOs but eventually, you will see the warning message that the package is already installed.
$\u0026gt; anise install elt-patches patch autoconf-archive gcc-config diffutils binutils \\ binutils-libs which make portage metatools ego üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET üöß warning sys-apps/diffutils already installed. üöß warning sys-devel-2.40/binutils already installed. üöß warning sys-libs/binutils-libs already installed. üöß warning sys-apps/which already installed. üöß warning sys-apps/portage already installed. üß† Solving install tree... üç¶ [ 1 of 42] [N] app-admin/ego::macaroni-phoenix-testing - 2.8.7+1 üç¶ [ 2 of 42] [N] app-arch/unzip::macaroni-phoenix-testing - 6.0+1 üç¶ [ 3 of 42] [N] app-portage/elt-patches::macaroni-phoenix-testing - 20170826.1+1 üç¶ [ 4 of 42] [N] dev-libs/libyaml::macaroni-phoenix-testing - 0.2.5 üç¶ [ 5 of 42] [N] dev-python/aiofiles::macaroni-phoenix-testing - 23.2.1 üç¶ [ 6 of 42] [N] dev-python/anyio::macaroni-phoenix-testing - 4.0.0 üç¶ [ 7 of 42] [N] dev-python/async-generator::macaroni-phoenix-testing - 1.10 üç¶ [ 8 of 42] [N] dev-python/beautifulsoup::macaroni-phoenix-testing - 4.12.2 üç¶ [ 9 of 42] [N] dev-python/certifi::macaroni-phoenix-testing - 10001 üç¶ [ 10 of 42] [N] dev-python/colorama::macaroni-phoenix-testing - 0.4.6 üç¶ [ 11 of 42] [N] dev-python/curio::macaroni-phoenix-testing - 1.6 üç¶ [ 12 of 42] [N] dev-python/cython::macaroni-phoenix-testing - 0.29.36 üç¶ [ 13 of 42] [N] dev-python/dict-toolbox::macaroni-phoenix-testing - 5.0.0 üç¶ [ 14 of 42] [N] dev-python/exceptiongroup::macaroni-phoenix-testing - 1.1.2 üç¶ [ 15 of 42] [N] dev-python/h11::macaroni-phoenix-testing - 0.14.0 üç¶ [ 16 of 42] [N] dev-python/h2::macaroni-phoenix-testing - 4.1.0 üç¶ [ 17 of 42] [N] dev-python/hpack::macaroni-phoenix-testing - 4.0.0 üç¶ [ 18 of 42] [N] dev-python/httpcore::macaroni-phoenix-testing - 1.0.0 üç¶ [ 19 of 42] [N] dev-python/httpx::macaroni-phoenix-testing - 0.25.0 üç¶ [ 20 of 42] [N] dev-python/hyperframe::macaroni-phoenix-testing - 6.0.1 üç¶ [ 21 of 42] [N] dev-python/idna::macaroni-phoenix-testing - 3.4 üç¶ [ 22 of 42] [N] dev-python/msgpack::macaroni-phoenix-testing - 1.0.7+1 üç¶ [ 23 of 42] [N] dev-python/outcome::macaroni-phoenix-testing - 1.2.0 üç¶ [ 24 of 42] [N] dev-python/psutil::macaroni-phoenix-testing - 5.9.6 üç¶ [ 25 of 42] [N] dev-python/py::macaroni-phoenix-testing - 1.11.0 üç¶ [ 26 of 42] [N] dev-python/pykerberos::macaroni-phoenix-testing - 1.2.1 üç¶ [ 27 of 42] [N] dev-python/pymongo::macaroni-phoenix-testing - 4.5.0 üç¶ [ 28 of 42] [N] dev-python/pyyaml::macaroni-phoenix-testing - 6.0.1 üç¶ [ 29 of 42] [N] dev-python/pyzmq::macaroni-phoenix-testing - 25.1.1 üç¶ [ 30 of 42] [N] dev-python/rich::macaroni-phoenix-testing - 13.6.0 üç¶ [ 31 of 42] [N] dev-python/sniffio::macaroni-phoenix-testing - 1.3.0 üç¶ [ 32 of 42] [N] dev-python/sortedcontainers::macaroni-phoenix-testing - 2.4.0 üç¶ [ 33 of 42] [N] dev-python/soupsieve::macaroni-phoenix-testing - 2.3.1 üç¶ [ 34 of 42] [N] dev-python/trio::macaroni-phoenix-testing - 0.22.2 üç¶ [ 35 of 42] [N] dev-python/xmltodict::macaroni-phoenix-testing - 0.13.0 üç¶ [ 36 of 42] [N] dev-util/meson::macaroni-phoenix-testing - 1.2.2 üç¶ [ 37 of 42] [N] net-libs/zeromq::macaroni-phoenix-testing - 4.3.5 üç¶ [ 38 of 42] [N] sys-apps/metatools::macaroni-phoenix-testing - 1.3.4 üç¶ [ 39 of 42] [N] sys-devel/autoconf-archive::macaroni-phoenix-testing - 2021.02.19 üç¶ [ 40 of 42] [N] sys-devel/gcc-config::macaroni-phoenix-testing - 2.4+1 üç¶ [ 41 of 42] [N] sys-devel/make::macaroni-phoenix-testing - 4.2.1+1 üç¶ [ 42 of 42] [N] sys-devel/patch::macaroni-phoenix-testing - 2.7.6+1 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 455608 ¬µs). Do you want to continue with this operation? [y/N]: # anise install elt-patches patch autoconf-archive gcc-config diffutils binutils \\ binutils-libs which make portage metatools ego üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET üöß warning sys-apps/diffutils already installed. üöß warning sys-devel-2.40/binutils already installed. üöß warning sys-libs/binutils-libs already installed. üöß warning sys-apps/which already installed. üöß warning sys-apps/portage already installed. üß† Solving install tree... üç¶ [ 1 of 42] [N] app-admin/ego::macaroni-phoenix-testing - 2.8.7+1 üç¶ [ 2 of 42] [N] app-arch/unzip::macaroni-phoenix-testing - 6.0+1 üç¶ [ 3 of 42] [N] app-portage/elt-patches::macaroni-phoenix-testing - 20170826.1+1 üç¶ [ 4 of 42] [N] dev-libs/libyaml::macaroni-phoenix-testing - 0.2.5 üç¶ [ 5 of 42] [N] dev-python/aiofiles::macaroni-phoenix-testing - 23.2.1 üç¶ [ 6 of 42] [N] dev-python/anyio::macaroni-phoenix-testing - 4.0.0 üç¶ [ 7 of 42] [N] dev-python/async-generator::macaroni-phoenix-testing - 1.10 üç¶ [ 8 of 42] [N] dev-python/beautifulsoup::macaroni-phoenix-testing - 4.12.2 üç¶ [ 9 of 42] [N] dev-python/certifi::macaroni-phoenix-testing - 10001 üç¶ [ 10 of 42] [N] dev-python/colorama::macaroni-phoenix-testing - 0.4.6 üç¶ [ 11 of 42] [N] dev-python/curio::macaroni-phoenix-testing - 1.6 üç¶ [ 12 of 42] [N] dev-python/cython::macaroni-phoenix-testing - 0.29.36 üç¶ [ 13 of 42] [N] dev-python/dict-toolbox::macaroni-phoenix-testing - 5.0.0 üç¶ [ 14 of 42] [N] dev-python/exceptiongroup::macaroni-phoenix-testing - 1.1.2 üç¶ [ 15 of 42] [N] dev-python/h11::macaroni-phoenix-testing - 0.14.0 üç¶ [ 16 of 42] [N] dev-python/h2::macaroni-phoenix-testing - 4.1.0 üç¶ [ 17 of 42] [N] dev-python/hpack::macaroni-phoenix-testing - 4.0.0 üç¶ [ 18 of 42] [N] dev-python/httpcore::macaroni-phoenix-testing - 1.0.0 üç¶ [ 19 of 42] [N] dev-python/httpx::macaroni-phoenix-testing - 0.25.0 üç¶ [ 20 of 42] [N] dev-python/hyperframe::macaroni-phoenix-testing - 6.0.1 üç¶ [ 21 of 42] [N] dev-python/idna::macaroni-phoenix-testing - 3.4 üç¶ [ 22 of 42] [N] dev-python/msgpack::macaroni-phoenix-testing - 1.0.7+1 üç¶ [ 23 of 42] [N] dev-python/outcome::macaroni-phoenix-testing - 1.2.0 üç¶ [ 24 of 42] [N] dev-python/psutil::macaroni-phoenix-testing - 5.9.6 üç¶ [ 25 of 42] [N] dev-python/py::macaroni-phoenix-testing - 1.11.0 üç¶ [ 26 of 42] [N] dev-python/pykerberos::macaroni-phoenix-testing - 1.2.1 üç¶ [ 27 of 42] [N] dev-python/pymongo::macaroni-phoenix-testing - 4.5.0 üç¶ [ 28 of 42] [N] dev-python/pyyaml::macaroni-phoenix-testing - 6.0.1 üç¶ [ 29 of 42] [N] dev-python/pyzmq::macaroni-phoenix-testing - 25.1.1 üç¶ [ 30 of 42] [N] dev-python/rich::macaroni-phoenix-testing - 13.6.0 üç¶ [ 31 of 42] [N] dev-python/sniffio::macaroni-phoenix-testing - 1.3.0 üç¶ [ 32 of 42] [N] dev-python/sortedcontainers::macaroni-phoenix-testing - 2.4.0 üç¶ [ 33 of 42] [N] dev-python/soupsieve::macaroni-phoenix-testing - 2.3.1 üç¶ [ 34 of 42] [N] dev-python/trio::macaroni-phoenix-testing - 0.22.2 üç¶ [ 35 of 42] [N] dev-python/xmltodict::macaroni-phoenix-testing - 0.13.0 üç¶ [ 36 of 42] [N] dev-util/meson::macaroni-phoenix-testing - 1.2.2 üç¶ [ 37 of 42] [N] net-libs/zeromq::macaroni-phoenix-testing - 4.3.5 üç¶ [ 38 of 42] [N] sys-apps/metatools::macaroni-phoenix-testing - 1.3.4 üç¶ [ 39 of 42] [N] sys-devel/autoconf-archive::macaroni-phoenix-testing - 2021.02.19 üç¶ [ 40 of 42] [N] sys-devel/gcc-config::macaroni-phoenix-testing - 2.4+1 üç¶ [ 41 of 42] [N] sys-devel/make::macaroni-phoenix-testing - 4.2.1+1 üç¶ [ 42 of 42] [N] sys-devel/patch::macaroni-phoenix-testing - 2.7.6+1 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 455608 ¬µs). Do you want to continue with this operation? [y/N]: y üöö Downloading 42 packages... üì¶ [ 1 of 42] dev-python/httpcore::macaroni-phoenix-testing - 1.0.0 # downloaded ‚úî üì¶ [ 2 of 42] dev-python/pykerberos::macaroni-phoenix-testing - 1.2.1 # downloaded ‚úî üì¶ [ 3 of 42] dev-python/rich::macaroni-phoenix-testing - 13.6.0 # downloaded ‚úî üì¶ [ 4 of 42] dev-python/xmltodict::macaroni-phoenix-testing - 0.13.0 # downloaded ‚úî üì¶ [ 5 of 42] dev-python/aiofiles::macaroni-phoenix-testing - 23.2.1 # downloaded ‚úî üì¶ [ 6 of 42] dev-python/cython::macaroni-phoenix-testing - 0.29.36 # downloaded ‚úî üì¶ [ 7 of 42] dev-python/pyyaml::macaroni-phoenix-testing - 6.0.1 # downloaded ‚úî üì¶ [ 8 of 42] dev-python/outcome::macaroni-phoenix-testing - 1.2.0 # downloaded ‚úî üì¶ [ 9 of 42] net-libs/zeromq::macaroni-phoenix-testing - 4.3.5 # downloaded ‚úî üì¶ [ 10 of 42] dev-python/pyzmq::macaroni-phoenix-testing - 25.1.1 # downloaded ‚úî üì¶ [ 11 of 42] sys-devel/make::macaroni-phoenix-testing - 4.2.1+1 # downloaded ‚úî üì¶ [ 12 of 42] dev-python/soupsieve::macaroni-phoenix-testing - 2.3.1 # downloaded ‚úî üì¶ [ 13 of 42] dev-python/colorama::macaroni-phoenix-testing - 0.4.6 # downloaded ‚úî üì¶ [ 14 of 42] dev-python/trio::macaroni-phoenix-testing - 0.22.2 # downloaded ‚úî üì¶ [ 15 of 42] dev-python/certifi::macaroni-phoenix-testing - 10001 # downloaded ‚úî üì¶ [ 16 of 42] app-admin/ego::macaroni-phoenix-testing - 2.8.7+1 # downloaded ‚úî üì¶ [ 17 of 42] dev-python/dict-toolbox::macaroni-phoenix-testing - 5.0.0 # downloaded ‚úî üì¶ [ 18 of 42] dev-python/hyperframe::macaroni-phoenix-testing - 6.0.1 # downloaded ‚úî üì¶ [ 19 of 42] sys-apps/metatools::macaroni-phoenix-testing - 1.3.4 # downloaded ‚úî üì¶ [ 20 of 42] dev-python/h11::macaroni-phoenix-testing - 0.14.0 # downloaded ‚úî üì¶ [ 21 of 42] dev-python/psutil::macaroni-phoenix-testing - 5.9.6 # downloaded ‚úî üì¶ [ 22 of 42] dev-python/pymongo::macaroni-phoenix-testing - 4.5.0 # downloaded ‚úî üì¶ [ 23 of 42] dev-util/meson::macaroni-phoenix-testing - 1.2.2 # downloaded ‚úî üì¶ [ 24 of 42] app-portage/elt-patches::macaroni-phoenix-testing - 20170826.1+1 # downloaded ‚úî üì¶ [ 25 of 42] app-arch/unzip::macaroni-phoenix-testing - 6.0+1 # downloaded ‚úî üì¶ [ 26 of 42] dev-python/idna::macaroni-phoenix-testing - 3.4 # downloaded ‚úî üì¶ [ 27 of 42] dev-python/sortedcontainers::macaroni-phoenix-testing - 2.4.0 # downloaded ‚úî üì¶ [ 28 of 42] dev-libs/libyaml::macaroni-phoenix-testing - 0.2.5 # downloaded ‚úî üì¶ [ 29 of 42] dev-python/msgpack::macaroni-phoenix-testing - 1.0.7+1 # downloaded ‚úî üì¶ [ 30 of 42] dev-python/h2::macaroni-phoenix-testing - 4.1.0 # downloaded ‚úî üì¶ [ 31 of 42] dev-python/py::macaroni-phoenix-testing - 1.11.0 # downloaded ‚úî üì¶ [ 32 of 42] sys-devel/patch::macaroni-phoenix-testing - 2.7.6+1 # downloaded ‚úî üì¶ [ 33 of 42] dev-python/curio::macaroni-phoenix-testing - 1.6 # downloaded ‚úî üì¶ [ 34 of 42] dev-python/async-generator::macaroni-phoenix-testing - 1.10 # downloaded ‚úî üì¶ [ 35 of 42] dev-python/anyio::macaroni-phoenix-testing - 4.0.0 # downloaded ‚úî üì¶ [ 36 of 42] dev-python/httpx::macaroni-phoenix-testing - 0.25.0 # downloaded ‚úî üì¶ [ 37 of 42] sys-devel/autoconf-archive::macaroni-phoenix-testing - 2021.02.19 # downloaded ‚úî üì¶ [ 38 of 42] sys-devel/gcc-config::macaroni-phoenix-testing - 2.4+1 # downloaded ‚úî üì¶ [ 39 of 42] dev-python/beautifulsoup::macaroni-phoenix-testing - 4.12.2 # downloaded ‚úî üì¶ [ 40 of 42] dev-python/exceptiongroup::macaroni-phoenix-testing - 1.1.2 # downloaded ‚úî üì¶ [ 41 of 42] dev-python/sniffio::macaroni-phoenix-testing - 1.3.0 # downloaded ‚úî üì¶ [ 42 of 42] dev-python/hpack::macaroni-phoenix-testing - 4.0.0 # downloaded ‚úî üß† Sorting 42 packages operations... üçª Executing 42 packages operations... üç∞ [ 1 of 42] app-admin/ego::macaroni-phoenix-testing - 2.8.7+1 # installed ‚úî üç∞ [ 2 of 42] app-arch/unzip::macaroni-phoenix-testing - 6.0+1 # installed ‚úî üç∞ [ 3 of 42] app-portage/elt-patches::macaroni-phoenix-testing - 20170826.1+1 # installed ‚úî üç∞ [ 4 of 42] dev-libs/libyaml::macaroni-phoenix-testing - 0.2.5 # installed ‚úî üç∞ [ 5 of 42] dev-python/aiofiles::macaroni-phoenix-testing - 23.2.1 # installed ‚úî üç∞ [ 6 of 42] dev-python/async-generator::macaroni-phoenix-testing - 1.10 # installed ‚úî üç∞ [ 7 of 42] dev-python/certifi::macaroni-phoenix-testing - 10001 # installed ‚úî üç∞ [ 8 of 42] dev-python/colorama::macaroni-phoenix-testing - 0.4.6 # installed ‚úî üç∞ [ 9 of 42] dev-python/curio::macaroni-phoenix-testing - 1.6 # installed ‚úî üç∞ [ 10 of 42] dev-python/cython::macaroni-phoenix-testing - 0.29.36 # installed ‚úî üç∞ [ 11 of 42] dev-python/exceptiongroup::macaroni-phoenix-testing - 1.1.2 # installed ‚úî üç∞ [ 12 of 42] dev-python/h11::macaroni-phoenix-testing - 0.14.0 # installed ‚úî üç∞ [ 13 of 42] dev-python/hpack::macaroni-phoenix-testing - 4.0.0 # installed ‚úî üç∞ [ 14 of 42] dev-python/hyperframe::macaroni-phoenix-testing - 6.0.1 # installed ‚úî üç∞ [ 15 of 42] dev-python/idna::macaroni-phoenix-testing - 3.4 # installed ‚úî üç∞ [ 16 of 42] dev-python/msgpack::macaroni-phoenix-testing - 1.0.7+1 # installed ‚úî üç∞ [ 17 of 42] dev-python/outcome::macaroni-phoenix-testing - 1.2.0 # installed ‚úî üç∞ [ 18 of 42] dev-python/psutil::macaroni-phoenix-testing - 5.9.6 # installed ‚úî üç∞ [ 19 of 42] dev-python/py::macaroni-phoenix-testing - 1.11.0 # installed ‚úî üç∞ [ 20 of 42] dev-python/pykerberos::macaroni-phoenix-testing - 1.2.1 # installed ‚úî üç∞ [ 21 of 42] dev-python/rich::macaroni-phoenix-testing - 13.6.0 # installed ‚úî üç∞ [ 22 of 42] dev-python/sniffio::macaroni-phoenix-testing - 1.3.0 # installed ‚úî üç∞ [ 23 of 42] dev-python/sortedcontainers::macaroni-phoenix-testing - 2.4.0 # installed ‚úî üç∞ [ 24 of 42] dev-python/soupsieve::macaroni-phoenix-testing - 2.3.1 # installed ‚úî üç∞ [ 25 of 42] dev-python/xmltodict::macaroni-phoenix-testing - 0.13.0 # installed ‚úî üç∞ [ 26 of 42] dev-util/meson::macaroni-phoenix-testing - 1.2.2 # installed ‚úî üç∞ [ 27 of 42] net-libs/zeromq::macaroni-phoenix-testing - 4.3.5 # installed ‚úî üç∞ [ 28 of 42] sys-devel/autoconf-archive::macaroni-phoenix-testing - 2021.02.19 # installed ‚úî üç∞ [ 29 of 42] sys-devel/gcc-config::macaroni-phoenix-testing - 2.4+1 # installed ‚úî üç∞ [ 30 of 42] sys-devel/make::macaroni-phoenix-testing - 4.2.1+1 # installed ‚úî üç∞ [ 31 of 42] sys-devel/patch::macaroni-phoenix-testing - 2.7.6+1 # installed ‚úî üç∞ [ 32 of 42] dev-python/beautifulsoup::macaroni-phoenix-testing - 4.12.2 # installed ‚úî üç∞ [ 33 of 42] dev-python/pymongo::macaroni-phoenix-testing - 4.5.0 # installed ‚úî üç∞ [ 34 of 42] dev-python/h2::macaroni-phoenix-testing - 4.1.0 # installed ‚úî üç∞ [ 35 of 42] dev-python/pyyaml::macaroni-phoenix-testing - 6.0.1 # installed ‚úî üç∞ [ 36 of 42] dev-python/pyzmq::macaroni-phoenix-testing - 25.1.1 # installed ‚úî üç∞ [ 37 of 42] dev-python/dict-toolbox::macaroni-phoenix-testing - 5.0.0 # installed ‚úî üç∞ [ 38 of 42] dev-python/trio::macaroni-phoenix-testing - 0.22.2 # installed ‚úî üç∞ [ 39 of 42] dev-python/anyio::macaroni-phoenix-testing - 4.0.0 # installed ‚úî üç∞ [ 40 of 42] dev-python/httpcore::macaroni-phoenix-testing - 1.0.0 # installed ‚úî üç∞ [ 41 of 42] dev-python/httpx::macaroni-phoenix-testing - 0.25.0 # installed ‚úî üç∞ [ 42 of 42] sys-apps/metatools::macaroni-phoenix-testing - 1.3.4 # installed ‚úî Executing finalizer for app-admin/ego-2.8.7+1 üêö Executing finalizer on / /bin/bash [-c entities merge --specs-dir /usr/share/macaroni/entities/ -e sync] Merged users sync. Merged shadow sync. All done. üéä All done. The package to install with the Funtoo kits used in the buiding process is this, and eventually you can install it inside the previous command:
$\u0026gt; anise i meta-repo meta-geaaru-kit üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET üß† Solving install tree... üç¶ [ 1 of 2] [N] toolchain/meta-geaaru-kit::macaroni-phoenix-testing - 0.20231025 üç¶ [ 2 of 2] [N] toolchain/meta-repo::macaroni-phoenix-testing - 0.20231017 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 282713 ¬µs). Do you want to continue with this operation? [y/N]: y üöö Downloading 2 packages... üì¶ [ 1 of 2] toolchain/meta-geaaru-kit::macaroni-phoenix-testing - 0.20231025 # downloaded ‚úî üì¶ [ 2 of 2] toolchain/meta-repo::macaroni-phoenix-testing - 0.20231017 # downloaded ‚úî üß† Sorting 2 packages operations... üçª Executing 2 packages operations... üç∞ [ 1 of 2] toolchain/meta-geaaru-kit::macaroni-phoenix-testing - 0.20231025 # installed ‚úî üç∞ [ 2 of 2] toolchain/meta-repo::macaroni-phoenix-testing - 0.20231017 # installed ‚úî üéä All done. We suggest installing the extra kit geaaru-kit because the same ebuilds with patches are released there before opening a PR to the Funtoo community or there are packages that follow a different release pipeline like LXD.
NOTE: The virtual/base package (already available) installs in the finalize the file /etc/portage/make.conf with the only variable CHOST because without it and without the setup of the profiles the emerge doesn\u0026rsquo;t work correctly.
$\u0026gt; cat /etc/portage/make.conf CHOST=\u0026#34;x86_64-pc-linux-gnu\u0026#34; You are free to modify it if you need.
3. Configure GCC # $\u0026gt; gcc-config 1 * Switching native-compiler to x86_64-pc-linux-gnu-11.3.0 ... \u0026gt;\u0026gt;\u0026gt; Regenerating /etc/ld.so.cache... [ ok ] * If you intend to use the gcc from the new profile in an already * running shell, please remember to do: * . /etc/profile $\u0026gt; source /etc/profile 4. Play with emerge # You can now play with emerge as you do in Funtoo.
Playing with emerge you could be in the case where the installation of a package require a lot of dependencies that are missing. In this case, you can just check with --pretend option what packages are candidates for installation and use anise to install them and just leave the package you need for the compilation, or just compile everything.
This a little tip to use emerge to get the list of the dependencies to install and through pkgs-checker and jq convert the gentoo package string and retrieve the package name. It\u0026rsquo;s just an example, we will have a finer integration with anise-portage-converter soon.
So, for example if we want to emerge the app-admin/cloud-init package and the --pretend output is this:
$\u0026gt; emerge cloud-init -pv --onlydeps These are the packages that would be merged, in order: Calculating dependencies... done! [ebuild N ] net-analyzer/macchanger-1.7.0-r1::net-kit 388 KiB [ebuild N ] dev-python/jsonpointer-2.4::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 10 KiB [ebuild N ] dev-python/chardet-5.2.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 2,022 KiB [ebuild N ] dev-python/urllib3-1.26.15-r2::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 295 KiB [ebuild N ] dev-python/charset_normalizer-3.3.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 102 KiB [ebuild N ] dev-python/pyopenssl-23.2.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 181 KiB [ebuild N ] dev-python/semantic_version-2.10.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 52 KiB [ebuild N ] dev-python/installer-0.5.1-r1::python-modules-kit USE=\u0026#34;-test\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python3_10 -python3_7 -python3_8\u0026#34; 900 KiB [ebuild N ] dev-python/pyjwt-2.8.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 77 KiB [ebuild N ] dev-python/blinker-1.6.3::python-modules-kit USE=\u0026#34;-doc -test\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 28 KiB [ebuild N ] virtual/python-enum34-2::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 0 KiB [ebuild N ] virtual/python-ipaddress-1.0-r1::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 0 KiB [ebuild N ] dev-python/pyserial-3.4::python-modules-kit USE=\u0026#34;-doc -examples\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 149 KiB [ebuild N ] dev-python/configobj-5.0.8::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 38 KiB [ebuild N ] sys-fs/growpart-0.0.30::core-kit 8 KiB [ebuild N ] dev-python/gpep517-15::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 20 KiB [ebuild N ] app-admin/metalog-20200113::core-kit USE=\u0026#34;unicode\u0026#34; 40 KiB [ebuild N ] dev-python/jsonpatch-1.23::python-modules-kit USE=\u0026#34;-test\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 18 KiB [ebuild N ] dev-python/flit_core-3.9.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 41 KiB [ebuild N ] virtual/logger-0-r1::core-kit 0 KiB [ebuild N ] dev-python/wheel-0.41.2::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 96 KiB [ebuild N ] dev-python/setuptools-rust-1.7.0::python-modules-kit PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 297 KiB [ebuild N ] dev-python/cryptography-41.0.4::python-modules-kit USE=\u0026#34;-debug -idna -libressl\u0026#34; CPU_FLAGS_X86=\u0026#34;sse2\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 10,196 KiB [ebuild N ] dev-python/oauthlib-3.0.1::python-modules-kit USE=\u0026#34;-test\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 146 KiB [ebuild N ] dev-python/requests-2.31.0::python-modules-kit USE=\u0026#34;ssl -socks5\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -pypy3 -python2_7 -python3_10 -python3_7 -python3_8\u0026#34; 109 KiB Total: 25 packages (25 new), Size of downloads: 15,200 KiB !!! The following installed packages are masked: - media-libs/fdk-aac-2.0.2::media-kit (masked by: FraunhoferFDK license(s)) A copy of the \u0026#39;FraunhoferFDK\u0026#39; license is located at \u0026#39;/var/git/meta-repo/kits/media-kit/licenses/FraunhoferFDK\u0026#39;. For more information, see the MASKED PACKAGES section in the emerge man page or refer to the Gentoo Handbook. And we can install dependencies from Macaroni repositories with this bashing:
$\u0026gt; anise i pkgs-checker-minimal ... $\u0026gt; anise i $(for i in $(emerge cloud-init -p --quiet --color n --onlydeps 2\u0026gt;/dev/null | grep \u0026#34;ebuild\u0026#34; | awk \u0026#39;{ print $4 }\u0026#39;); do pkgs-checker pkg info $i -j | jq \u0026#39;.name\u0026#39; -r ; done ) üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET üß† Solving install tree... üç¶ [ 1 of 25] [N] app-admin/metalog::macaroni-phoenix-testing - 20200113 üç¶ [ 2 of 25] [N] dev-python/blinker::macaroni-phoenix-testing - 1.6.3 üç¶ [ 3 of 25] [N] dev-python/chardet::macaroni-phoenix-testing - 5.2.0 üç¶ [ 4 of 25] [N] dev-python/charset_normalizer::macaroni-phoenix-testing - 3.3.0 üç¶ [ 5 of 25] [N] dev-python/configobj::macaroni-phoenix-testing - 5.0.8 üç¶ [ 6 of 25] [N] dev-python/cryptography::macaroni-phoenix-testing - 41.0.4 üç¶ [ 7 of 25] [N] dev-python/flit_core::macaroni-phoenix-testing - 3.9.0 üç¶ [ 8 of 25] [N] dev-python/gpep517::macaroni-phoenix-testing - 15 üç¶ [ 9 of 25] [N] dev-python/installer::macaroni-phoenix-testing - 0.5.1+1 üç¶ [ 10 of 25] [N] dev-python/jsonpatch::macaroni-phoenix-testing - 1.23 üç¶ [ 11 of 25] [N] dev-python/jsonpointer::macaroni-phoenix-testing - 2.4 üç¶ [ 12 of 25] [N] dev-python/oauthlib::macaroni-phoenix-testing - 3.0.1 üç¶ [ 13 of 25] [N] dev-python/pyjwt::macaroni-phoenix-testing - 2.8.0 üç¶ [ 14 of 25] [N] dev-python/pyopenssl::macaroni-phoenix-testing - 23.2.0 üç¶ [ 15 of 25] [N] dev-python/pyserial::macaroni-phoenix-testing - 3.4 üç¶ [ 16 of 25] [N] dev-python/requests::macaroni-phoenix-testing - 2.31.0 üç¶ [ 17 of 25] [N] dev-python/semantic_version::macaroni-phoenix-testing - 2.10.0 üç¶ [ 18 of 25] [N] dev-python/setuptools-rust::macaroni-phoenix-testing - 1.7.0+1 üç¶ [ 19 of 25] [N] dev-python/urllib3::macaroni-phoenix-testing - 1.26.15 üç¶ [ 20 of 25] [N] dev-python/wheel::macaroni-phoenix-testing - 0.41.2 üç¶ [ 21 of 25] [N] net-analyzer/macchanger::macaroni-phoenix-testing - 1.7.0 üç¶ [ 22 of 25] [N] sys-fs/growpart::macaroni-phoenix-testing - 0.0.30 üç¶ [ 23 of 25] [N] virtual/logger::macaroni-phoenix-testing - 0 üç¶ [ 24 of 25] [N] virtual/python-enum34::macaroni-phoenix-testing - 2 üç¶ [ 25 of 25] [N] virtual/python-ipaddress::macaroni-phoenix-testing - 1.0 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 69337 ¬µs). Do you want to continue with this operation? [y/N]: y ... ... And later:
$\u0026gt; emerge cloud-init -t These are the packages that would be merged, in order: Calculating dependencies... done! [ebuild N ] app-admin/cloud-init-23.3.2::core-server-kit USE=\u0026#34;-systemd -test\u0026#34; PYTHON_TARGETS=\u0026#34;python3_9 -python3_10 -python3_7 -python3_8\u0026#34; 5,605 KiB ... \u0026gt;\u0026gt;\u0026gt; Installing (1 of 1) app-admin/cloud-init-23.3.2::core-server-kit * cloud-init-local needs to be run in the boot runlevel because it * modifies services in the default runlevel. When a runlevel is started * it is cached, so modifications that happen to the current runlevel * while you are in it are not acted upon. \u0026gt;\u0026gt;\u0026gt; Recording app-admin/cloud-init in \u0026#34;world\u0026#34; favorites file... * Messages for package app-admin/cloud-init-23.3.2: * cloud-init-local needs to be run in the boot runlevel because it * modifies services in the default runlevel. When a runlevel is started * it is cached, so modifications that happen to the current runlevel * while you are in it are not acted upon. \u0026gt;\u0026gt;\u0026gt; Auto-cleaning packages... \u0026gt;\u0026gt;\u0026gt; No outdated packages were found on your system. NOTE: On using emerge it\u0026rsquo;s possible that you will catch some warning about the COUNTER available in the packages installed by anise, but this happens because the value is related to the build process and not to the installed order. Probably, in the near future could be a good idea to set the COUNTER to zero for all Macaroni packages.
5. Sync the packages installed with emerge to Macaroni database # To sync the package installed with emerge to anise database you need to have installed the anise-portage-converter package.
So, if it isn\u0026rsquo;t present just run this command:
$\u0026gt; anise i anise-portage-converter üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET üß† Solving install tree... üç¶ [ 1 of 1] [N] macaroni/anise-portage-converter::macaroni-commons-testing - 0.14.3 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 3034 ¬µs). Do you want to continue with this operation? [y/N]: y üöö Downloading 1 packages... üì¶ [ 1 of 1] macaroni/anise-portage-converter::macaroni-commons-testing - 0.14.3 # downloaded ‚úî üß† Sorting 1 packages operations... üçª Executing 1 packages operations... üç∞ [ 1 of 1] macaroni/anise-portage-converter::macaroni-commons-testing - 0.14.3 # installed ‚úî üéä All done. And later sync the package to the database, eventually running the same command with --dry-run to verify the behavior before propagate the change:
$\u0026gt; anise-portage-converter sync --dry-run [ 5/ 833] [app-admin/cloud-init] Package with version 23.3.2 not found on anise database. [ 5/ 833] [app-admin/cloud-init] 23.3.2 candidated for sync ‚úîÔ∏è In the output the number 5 means that the package is the fifth analyzed among a total of 883 packages present in the /var/db/pkg directory.
To complete the sync to the anise database:
$\u0026gt; anise-portage-converter sync [ 5/ 833] [app-admin/cloud-init] Package with version 23.3.2 not found on anise database. [ 5/ 833] [app-admin/cloud-init] 23.3.2 added ‚úîÔ∏è $\u0026gt; anise s --installed cloud-init app-admin/cloud-init-23.3.2 Normally, after that sync if the package is available with the same version the solver tries to replace it with the Macaroni repository because the package hash doesn\u0026rsquo;t match with the value calculated from the metadata of the Macaroni repository:
$\u0026gt; luet upgrade üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üç¨ [ 1 of 5] [U] app-admin/cloud-init::macaroni-phoenix-testing - *23.3.2 [23.3.2::scm] üßÅ [ 2 of 5] [U] macaroni/whip-catalog::macaroni-commons-testing - 0.20231107 [0.20231104+1] üßÅ [ 3 of 5] [U] sys-fs/fuse-exfat::macaroni-phoenix-testing - *1.3.0+1 [1.3.0+1] üßÅ [ 4 of 5] [U] sys-process/htop::macaroni-phoenix-testing - *3.2.2 [3.2.2] üßÅ [ 5 of 5] [U] system/luet-geaaru-testing::mottainai-testing - 0.40.1 [0.40.0] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 35608 ¬µs). Do you want to continue with this operation? [y/N]: N If the package installed with emerge (identified by the scm repository) has a version greather than the version available in the Macaroni repository the solver will skipp the replace if the --deep option is not used.
Instead, if you want to avoid upgrade of the package app-admin/cloud-init and to maintain the compiled version you can mask the package:
$\u0026gt; mkdir -p /etc/luet/mask.d || true $\u0026gt; echo \u0026#34; enabled: true rules: - app-admin/cloud-init \u0026#34; \u0026gt; /etc/luet/mask.d/00-mymask.yml And later the package will not be candidates for the upgrade:
$\u0026gt; luet upgrade üöÄ Luet 0.40.0-geaaru-geaef4995d713afd2937c67f255dff229e555eba8 2023-11-03 10:10:38 UTC - go1.20.3 üè† Repository: geaaru-repo-index Revision: 11 - 2023-10-22 21:25:30 +0200 CEST üè† Repository: macaroni-commons-testing Revision: 194 - 2023-11-07 23:12:45 +0100 CET üè† Repository: macaroni-phoenix-testing Revision: 1043 - 2023-11-10 15:20:40 +0100 CET üè† Repository: mottainai-testing Revision: 113 - 2023-11-06 19:36:11 +0100 CET ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üßÅ [ 1 of 4] [U] macaroni/whip-catalog::macaroni-commons-testing - 0.20231107 [0.20231104+1] üßÅ [ 2 of 4] [U] sys-fs/fuse-exfat::macaroni-phoenix-testing - *1.3.0+1 [1.3.0+1] üßÅ [ 3 of 4] [U] sys-process/htop::macaroni-phoenix-testing - *3.2.2 [3.2.2] üßÅ [ 4 of 4] [U] system/luet-geaaru-testing::mottainai-testing - 0.40.1 [0.40.0] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 779 ¬µs). Do you want to continue with this operation? [y/N]: The rules could be mapped to a specific repository too, for example, app-admin/cloud-init::macaroni-phoenix-testing, or for a specific version, for example =app-admin/cloud-init-23.3.2. With this last configuration could be good to keep the version with the patch and installed with emerge until a new version will be available from Macaroni.
Enjoy!
`}),e.add({id:19,href:"/docs/getting-started/",title:"Getting Started",section:"Macaroni OS",content:` Getting Started # Install Macaroni ISO # Choose the right ISO for your requirements from our Download page.
1.Validate downloaded ISO # After the you have downloaded the ISOs file, I suggest to verify the quality of the download with our SHA256 hash:
$ sha256sum Macaroni-Funtoo-Phoenix-Gnome-23.03.02.iso 8637d8c6ba72f8694aabd631f038473acaadd0fbb8fc9fa7cec7bb0d495f1f54 Macaroni-Funtoo-Phoenix-Gnome-23.03.02.iso $ cat Macaroni-Funtoo-Phoenix-Gnome-23.03.02.iso.sha256 8637d8c6ba72f8694aabd631f038473acaadd0fbb8fc9fa7cec7bb0d495f1f54 If the download is correct the hash will be the same.
2.Flash your USB drive # To write an ISO there are different tools and ways. My suggestion is to use the wonderful tool Balena Etcher that validates the written bytes before sharing the result.
NOTE: At the moment the ventoy USB Solution is not supported.
3.Check your BIOS # At the moment, the Macaroni ISOs don\u0026rsquo;t support an EFI-signed bootstrap. So, before bootstrapping your USB drive just check and disable EFI security check.
Hereinafter is an example of how to setup the right options:
Normally, based on device there are different ways to enter the BIOS or EUFI setup, with F10, Canc, F2. You need to check your device manual.
4.Boot the ISO # When the Menu is visible could be possible customize boot options with E keyboard button. After push to E keyboard button compares in the foot the default command line options where you can add every kernel options.
Disable Nouveau driver # By default we prefer using nouveau driver for the NVIDIA cards on bootstrap our live ISOs. But it\u0026rsquo;s possible that some new cards could be not yet supported.
To force the loading of the NVIDIA kernel module you can add this option:
modprobe.blacklist=nouveau Enter in the ISO bootstrap shell # If there are issues with bootstrap on the Macaroni ISOs you can enter in the initrd shell in order to recover informations about your system and help us to check what happens.
To enter in the shell before the probing of the ISO squashfs to debug the probing phase and the switch root command you need to add shell=1 as option.
ISOLinux bootstrap # At the moment the options described above are not available in the ISOLinux menu, visible hereinafter:
The ISOLinux menu normally is available for non-EFI systems.
5. Start Installer # All our ISOs are configured with Network Manager by default which is better integrated with the Calamares installer. You are free to disable and change it later when the system is installed.
The default user of Macaroni ISO is macaroni with password macaroni.
Server ISO # The Server ISO automatically starts an X server with Calamares without a Desktop Environment.
The X server available with the Server ISO is limited. If you don\u0026rsquo;t have a network with DHCP you can change the tty and using nmtui to setup Networking correctly.
XFCE ISO # To start the Macaroni Installer click on Install System from Applications ‚Üí System ‚Üí Install System.
Gnome ISO # To start the Macaroni installer you need to enter on Applications dashboard and search for install:
6. Follow Installer workflow # 6.1 Welcome: Select Language # In this page if the installer detects correctly at least one hard drive is present the first choice of the user: the select of the language.
At the moment the tested languages are English and Italianx but other languages are available. If you find some problem with the other languages open an issue.
6.2 Location: Select Region and Zone # The second page of the installer permits you to configure the Region and the timezone.
Choose the right value from the map and go ahead.
6.3 Keyboard: Select Keyboard Model and Language # The third page of the installer permits you to configure the Keyboard Model and the langauge.
6.4 Partitions: Select storage device and Partitions # In this page you need to select the storage device from the menu and choose how the installer will prepare the partitions.
If the selected disk is empty the installer will propose only two choices: Erase disk and Manual partitioning.
If you wish to reinstall Macaroni OS to an existing system and/or replace existing partitions you can select the option Replace a partition:
If you are a newbie, my suggestion is to use the self partitioning mode from the Macaroni Installer that automatically define three main parititions: efi boot (if you are in EFI env), Swap partition and a Root partition for all data.
Encrypt Full Disk # Macaroni supports Encryption of full system, the only partition left in clear-text is the EFI partition.
To enable the encryption you need to flag Encrypt system and write the passphrase as visible in the screenshot hereinafter:
With the option Encrypt System also the swap partition will be encrypted. The passphrase will be asked on GRUB before printing the Menu.
Manual Partitioning # An expert user could create their custom installation with different partitions, for example, to divide /var/ from /, etc.
Encrypt Home Partition Only # Personally, I think that could be a good compromise to have the rootfs without encryption, this makes things easier on restoring a broken system and only encrypt the home with user data.
This is possible from Manual Partioning on creating an encrypted partition.
To enable this it\u0026rsquo;s only needed after selecting the File System type (in the screenshot ext4), to set the Encrypt flag and set the passphrase.
NOTE: On setup, in a configuration with single partitions encrypted you need to do some manual operations when the installation is completed or at the first boot. Unfortunately, at the moment the configuration of a single encrypted partition is not handled correctly and automatically by the Calamares installer. So, these steps will be described later.
6.5 Users: Define User and Passwords # It\u0026rsquo;s now time to define the user of your system, write your name and the name of your computer and choose your password.
Normally, the defined user will be the admin user and the same password will be used for root. If you want a different password for root, you need to disable the flag related to the option: Use the same password for the administrator account.
6.6 Summary: Show configured options # At this point, you are near to starting the installation of your Macaroni OS system.
Just check the selected options before starting the installation.
If all is ok, go ahead with the Install button.
6.7 Install: The Installation is started # Finally, the Macaroni Installer begins to write your hard drive. The time needed depends on your hardware and the speed of the hard drive.
6.8 Finish: The Installation is completed # Wohoo! Your Macaroni system is ready!
Set the Restart now flag to reboot your computer and to start your Macaroni OS.
6.9 The First boot # Full Encrypted Disk # If you have chosen to encrypt the full disk on bootstrap then GRUB will ask for the passphrase inserted in installation phase before displaying the GRUB menu and going ahead with the bootstrap of your system.
Hereinafter, an example of what that could look like:
Complete the setup of Home\u0026rsquo;s encrypted partition # If you have encrypted only the home partition or any other partition with the workflow described before, you need to execute a few steps to have the installation working correctly .
a. Retrieve the LUKS filesystem Id
# cat /etc/fstab # /etc/fstab: static file system information. # # Use \u0026#39;blkid\u0026#39; to print the universally unique identifier for a device; this may # be used with UUID= as a more robust way to name devices that works even if # disks are added and removed. See fstab(5). # # \u0026lt;file system\u0026gt; \u0026lt;mount point\u0026gt; \u0026lt;type\u0026gt; \u0026lt;options\u0026gt; \u0026lt;dump\u0026gt; \u0026lt;pass\u0026gt; UUID=ABF5-91D0 /boot/efi vfat defaults,noatime 0 2 UUID=f202c1d1-b131-45f5-8973-8f82cb63d688 / ext4 defaults,noatime 0 1 /dev/mapper/luks-f1504aa0-2594-4221-b741-7ba315b47de0 /home ext4 defaults,noatime 0 2 In this case the needed value is f1504aa0-2594-4221-b741-7ba315b47de0.
b. Editing the GRUB configuration file /etc/default/grub and add this option:
GRUB_CMDLINE_LINUX=\u0026#34;rd.luks.uuid=f1504aa0-2594-4221-b741-7ba315b47de0\u0026#34; Where it\u0026rsquo;s used the LUKS filesystem ID with the option rd.luks.uuid that says to dracut to manage the prompt on Plymouth for uncrypt the home partition before starting X.
c. Rebuild the initramfs image with macaronictl
$\u0026gt; macaronictl kernel gi --all --grub Creating initrd image /boot/initramfs-vanilla-x86_64-6.1.18-macaroni...DONE Creating grub config file /boot/grub/grub.cfg... Generating grub configuration file ... Found linux image: /boot/kernel-vanilla-x86_64-6.1.18-macaroni Found initrd image: /boot/initramfs-vanilla-x86_64-6.1.18-macaroni fgrep: warning: fgrep is obsolescent; using /bin/grep -F WARNING: Failed to connect to lvmetad. Falling back to device scanning. done d. Check dmcrypt service
Ensure that the dmcrypt service is enabled on boot runlevel:
$\u0026gt; rc-update show NetworkManager | default avahi-daemon | default binfmt | boot bluetooth | default bootmisc | boot cgroups | sysinit dbus | boot devfs | sysinit device-mapper | sysinit dmcrypt | boot ... Enable it if it\u0026rsquo;s not already with:
$\u0026gt; rc-update add dmcrypt boot e. Reboot your system.
If all is been configured correctly on bootstrap you will see the Plymouth page with the prompt where you insert the passphrase to mount home partition:
NOTE: Installing Macaroni OS with Xorg on MacOS Sonoma 14.0 in a Virtual Machine with VMware Fusion 12.2.3 seems to have an issue with the mouse setup. The same issue is also present using VMware Workstation 16. The problem seems related to the vmmouse driver. Forcing using evdev driver fixes the problem. Hereinafter, is an example of a possible solution:
$\u0026gt; mkdir -p /etc/X11/xorg.conf.d/ $\u0026gt; echo \u0026#39; Section \u0026#34;InputClass\u0026#34; Identifier	\u0026#34;vmmouse\u0026#34; MatchIsPointer	\u0026#34;on\u0026#34; MatchTag	\u0026#34;vmmouse\u0026#34; Driver	\u0026#34;evdev\u0026#34; EndSection \u0026#39; \u0026gt; /etc/X11/xorg.conf.d/50-vmmouse.conf $\u0026gt; /etc/init.d/xdm restart Install Macaroni LXD/Incus Containers # Macaroni OS supplies LXD/Incus images over a Simplestreams Server with help of the simplestreams-builder tool.
To configure your LXD system to download Macaroni OS images you need to add the macaroni remote:
$\u0026gt; lxc remote add macaroni https://macaronios.mirror.garr.it/images/lxd-images --protocol simplestreams --public Our Simplestreams Server works correctly with both LXD and Incus, so you can add the remote with incus too:
$\u0026gt; incus remote add macaroni https://macaronios.mirror.garr.it/images/lxd-images --protocol simplestreams --public The images are visible with the command:
$\u0026gt; lxc image list macaroni: $\u0026gt; # or $\u0026gt; incus image list macaroni: Install Macaroni Docker Containers # The official Docker Hub user is macaronios.
To play with Macaroni just create your container:
$\u0026gt; docker run --rm -ti macaronios/terragon-minimal:latest-amd64 And then install your packages:
e9c4457e2ce7 / # luet repo update üè† Repository: mottainai-stable Revision: 85 - 2023-04-06 21:04:23 +0000 UTC üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-terragon Revision: 176 - 2023-04-01 08:45:41 +0000 UTC e9c4457e2ce7 / # luet i vim vim-core htop üöÄ Luet 0.34.2-geaaru-g39b17f43958ab2df8c20f19410df612640428708 2023-03-15 06:03:31 UTC - go1.20.1 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-terragon Revision: 176 - 2023-04-01 08:45:41 +0000 UTC üè† Repository: mottainai-stable Revision: 85 - 2023-04-06 21:04:23 +0000 UTC üß† Solving install tree... üç¶ [ 1 of 22] [N] app-admin/eselect::macaroni-terragon - 1.4.14+1 üç¶ [ 2 of 22] [N] app-arch/xz-utils::macaroni-terragon - 5.4.2 üç¶ [ 3 of 22] [N] app-editors/vim::macaroni-terragon - 9.0.1425 üç¶ [ 4 of 22] [N] app-editors/vim-core::macaroni-terragon - 9.0.1425 üç¶ [ 5 of 22] [N] app-eselect/eselect-vi::macaroni-terragon - 1.1.9 üç¶ [ 6 of 22] [N] app-misc/mime-types::macaroni-terragon - 9 üç¶ [ 7 of 22] [N] dev-db-3/sqlite::macaroni-terragon - 3.41.2 üç¶ [ 8 of 22] [N] dev-lang-2/python-exec::macaroni-terragon - 2.4.6 üç¶ [ 9 of 22] [N] dev-lang-3.9/python::macaroni-terragon - 3.9.16 üç¶ [ 10 of 22] [N] dev-libs-3/libnl::macaroni-terragon - 3.4.0 üç¶ [ 11 of 22] [N] dev-libs/libffi::macaroni-terragon - 3.3 üç¶ [ 12 of 22] [N] dev-libs/openssl::macaroni-terragon - 1.1.1q üç¶ [ 13 of 22] [N] dev-python/setuptools::macaroni-terragon - 67.6.1 üç¶ [ 14 of 22] [N] dev-util/cscope::macaroni-terragon - 15.9 üç¶ [ 15 of 22] [N] sys-apps/file::macaroni-terragon - 5.44+1 üç¶ [ 16 of 22] [N] sys-apps/util-linux::macaroni-terragon - 2.38.1+1 üç¶ [ 17 of 22] [N] sys-libs/gdbm::macaroni-terragon - 1.23 üç¶ [ 18 of 22] [N] sys-libs/gpm::macaroni-terragon - 1.20.7 üç¶ [ 19 of 22] [N] sys-libs/libcap-ng::macaroni-terragon - 0.7.9+2 üç¶ [ 20 of 22] [N] sys-libs/libunwind::macaroni-terragon - 1.6.2 üç¶ [ 21 of 22] [N] sys-process/htop::macaroni-terragon - 3.2.2 üç¶ [ 22 of 22] [N] virtual/libc::macaroni-terragon - 1 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 820170 ¬µs). Do you want to continue with this operation? [y/N]: Hereinafter, the list of the official Macaroni Docker images available:
Image Release Description macaronios/phoenix-minimal Phoenix The minimal image of the Phoenix release without subets. macaronios/phoenix-minimal-devel Phoenix The minimal image of the Phoenix release with portage and devel subsets. macaronios/phoenix-testing-minimal Phoenix The minimal image of the Phoenix release with testing repositories. macaronios/phoenix-dev-minimal Phoenix The minimal image of the Phoenix release with develop repositories. macaronios/eagle-minimal Eagle The minimal image of the Eagle release without subsets. macaronios/eagle-minimal-devel Eagle The minimal image of the Eagle release with portage and devel subsets. macaronios/eagle-testing-minimal Eagle The minimal image of the Eagle release with testing repositories. macaronios/eagle-dev-minimal Eagle The minimal image of the Eagle release with develop repositories. macaronios/eagle-dev-minimal-devel Eagle The minimal image of the Eagle release with develop repositories and with portage and devel subsets. macaronios/terragon-minimal Terragon The minimal image of the Terragon release without subsets. macaronios/terragon-minimal-devel Terragon The minimal image of the Terragon release with portage and devel subsets. macaronios/terragon-dev-minimal Terragon The minimal image of the Terragon release with develop repositories. `}),e.add({id:20,href:"/docs/",title:"Macaroni OS",section:"Macaroni OS",content:` Why Macaroni OS? # Supply a binary distro that follow the Sabayon OS ideas and permit to convert the rootfs to a pure Funtoo rootfs in a fast way if it\u0026rsquo;s needed for specific customizations or to help the distro fix issues.
You know, the world is buggy, it\u0026rsquo;s better to have a way to check and resolve the problems fast.
In the middle of the story, Macaroni OS wants to be an optimized distro for LXD containers, Docker and Singularity.
So, in summary, these are the core targets of the Macaroni OS Linux:
Container Optimized Through the subsets feature of the Luet tool will make it easy to have a thin rootfs and customize the files installed from a package and run CD/CI tasks and/or pipeline fast. Automation Share a way to build packages without a giant infrastructure but with the pros of CD/CI. Macaroni developer teams share how it\u0026rsquo;s possible to do this through lxd-compose or with a more scalable solution through Mottainai Server. Revolution Hotspot To be a good start point for revolutions within the Linux OS space with the synergy of the Funtoo Team. Macaroni Releases # Following the core targets just described in Macaroni there are different releases:
Release Codename Funtoo Release Description Phoenix Next The core release based on OpenRC/SysVinit for Server and Desktop Eagle Next + patches A Funtoo SystemD release. The idea is to use it only for Server target and as experimental base rootfs where we will develop an alternative tool that will replace SystemD probably written in Golang but that will be compatible with part of SystemD files. In this moment, this release has only Container based targets and Server services. Terragon Next The next release based on OpenRC/SysVinit Funtoo system with Container oriented use flags. Macaroni OS Phoenix # The Phoenix release is the first release created and the only release at the moment for the Desktop. The codename phoenix is related to the immortal bird associated with Greek mythology that cyclically regenerates or is otherwise born again. Associated with the sun, a phoenix obtains new life by rising from the ashes of its predecessor. This is the reason I choose this name: to describe a new beginning and to remember us that also when others try to stop a dream, with the commitment it\u0026rsquo;s possible reborn and goes ahead.
In phoenix it\u0026rsquo;s used the OpenRC as an init system, it\u0026rsquo;s based on Funtoo Next (previously was based on 1.4-prime) and so:
* GCC 11.3.0 * Glibc 2.33 * Python 3.9 * LLVM 13 The desktop environments available in this release are:
Desktop Environment Version Status ISO Available Gnome 3.36 stable yes XFCE 4.16 stable yes LXQt 1.4.0 stable yes Enlightenment 0.25.4 experimental no KDE Plasma 5.27.9 - KDE Apps 23.08.2 - KDE Framework 5.111.0 experimental yes i3 4.22 experimental yes Macaroni OS Eagle # The Eagle release is born to be used in container, it\u0026rsquo;s based on Funtoo 1.4-prime with patches to integrate SystemD as an init system.
Without the need to support the Desktop, the release is been compiled with server-oriented and X-less use flags. This permits to have core packages fewer dependencies and more optimized for containers.
Like phoenix also eagle is based on Funtoo 1.4-prime and so:
* GCC 11.2.0 * Glibc 2.33 * Python 3.9 * LLVM 13 Macaroni OS Terragon # The Terragon release is born to be used in container and it\u0026rsquo;s based on Funtoo Next that is the more innovative release of Funtoo.
Like for eagle release the terragon release is been compiled with server-oriented and X-less use flags.
Based on Funtoo Next some core packages are:
* GCC 11.3.0 * Glibc 2.33 * Python 3.9 Macaroni Repositories # We have three different repositories for any release: a stable repository, a testing repository and, a development repository.
Hereinafter, a summary of our repositories and the packages related.
Repository Stable Testing Development macaroni-commons repository/macaroni-commons repository/macaroni-commons-testing repository/macaroni-commons-dev mottainai repository/mottainai-stable repository/mottainai-testing repository/mottainai-dev macaroni-phoenix (ex macaroni-funtoo) repository/macaroni-phoenix repository/macaroni-phoenix-testing repository/macaroni-phoenix-dev macaroni-eagle (ex macaroni-funtoo-systemd) repository/macaroni-eagle repository/macaroni-eagle-testing repository/macaroni-eagle-dev macaroni-terragon repository/macaroni-terragon repository/macaroni-terragon-testing repository/macaroni-terragon-dev macaroni-security repository/macaroni-security repository/macaroni-security-testing repository/macaroni-security-dev macaroni-games repository/macaroni-games repository/macaroni-games-testing repository/macaroni-games-dev NOTE: The development repositories must be used only by the Staff and are attached to the Macaroni/Mottainai CD/CI flows. The origin server has limited bandwidth so please, use them only for emergencies and/or in collaboration with the Macaroni Team.
Macaroni Commons # The macaroni-commons repository contains the specs for building the Macaroni OS packages common to all releases and all packages compiled without Portage integration.
In particular, in this repository are maintained the Macaroni Kernels.
Normally, this repository is installed by default and present in all Macaroni releases.
Mottainai # The Macaroni Team supports the MottainaiCI organization and the mottainai-stable repository is used to supply the Mottainai tools and anice.
The anice PMS could be used inside other distributions and it makes sense to avoid having a macaroni-commons repository to install and upgrade it. This is the reason we have left our PMS in an independent repository.
Normally, this repository is installed by default.
Macaroni Phoenix # The macaroni-phoenix (previous macaroni-funtoo) repository is the repository of the Phoenix release.
Normally, this repository is installed by default in all Phoenix installation.
Macaroni Eagle # The macaroni-eagle (previous macaroni-funtoo-systemd) repository is the repository of the Eagle release.
Normally, this repository is installed by default in all Eagle installation.
Macaroni Terragon # The macaroni-terragon repository is the repository of the Terragon release.
Normally, this repository is installed by default in all Terragon installation.
Macaroni Security # The macaroni-security repository is the repository of the Pheonix release where we releases security updates and fast rollings packages (browsers, etc.).
It permits to release on stable branch new updates when the build cycle process of the macaroni-phoenix repository is yet in progress.
Normally, this repository is installed by default in all Phoenix installation.
Macaroni Games # The macaroni-games repository is the repository of the Pheonix release where we releases games (Scorched3D, Wesnoth, etc.).
Macaroni Tags # In Macaroni the tag means that a specific release is been promoted for the stable repository. Every stable repository contains only a tagged release. There are very few exceptions where I pushed packages in the stable repository that was not related to a tag, and this is been happen for emergency fixes that are been follow soon by a new minor tag.
So, we could consider Macaroni as a rolling release distribution with periodic tags and upgrades.
This choice has pros and cons:
A user that using stable release could easier integration their package based on known packages version and use the specific tree fetched by the tag of the macaroni-funtoo repository to build additional packages. Executing a backup of the Macaroni repository for a specific tag permits him to have a reproducible way to upgrade, install and build packages from a fixed point.
Having a static list of the package version for a specific tag helps IT Teams with the auditing of security issues to have uniform environments controllable.
Wait for a new tag for a security issue could be not an optimal condition, but from my experience, it\u0026rsquo;s often more the time to wait for a fix than the time to release a new tag. By the way, to fix this issue the idea could be to prepare a macaroni-security repository to use in these emergency cases without waiting for a new tag that could be require more time if a build cycle is in progress.
In the Production environment I think that it\u0026rsquo;s better to supply services over container LXD, Docker, or Singularity and thus ensure a more rapid fix of the security issues. In general, the releases Macaroni Terragon and Macaroni Eagle have a more fast build cycle and this permits us to push a more fast fix.
We want to try to follow these periodic tags on our Releases:
Release Rolling Tags Macaroni OS Phoenix every 3/4 months (when possible monthly with macaroni-security repository) Macaroni OS Terragon monthly Macaroni OS Eagle monthly It\u0026rsquo;s also possible that minor releases will be tagged in addition to the scheduled tags. The Phoenix for the Desktop requires a lot of effort and testing, this is the reason why the release will be less frequent. We\u0026rsquo;re working to reorganize the tree to speed up the build cycle but this is the job of the next months.
`}),e.add({id:21,href:"/docs/networking/",title:"Networking",section:"Macaroni OS",content:` Networking # Macaroni OS inherits all network configuration ways from Funtoo. In particular, every release could contain one or more ways and/or technologies.
Hereinafter, a table with the different technologies and the availability in the Macaroni releases.
Technology Release Phoenix Release Terragon Release Eagle Network Manager Yes Yes Yes Core Network Yes Yes No SystemD Networkd No No Yes In our ISOs, we use Network Manager that is which seems better integrated with Calamares Installer.
For Server ISO our suggestion is to disable Network Manager when the installation is done and to use the core network scripts.
1. Network Manager # NetworkManager is the standard Linux network configuration tool suite that in the years is been integrated over different desktop environments. It\u0026rsquo;s the default service used by Gnome and could be configured in the different way.
If the service is active, normally, the default configuration automatically uses DHCP protocol on the enabled network interfaces.
From terminal could be used the nmtui tool and nmcli to configure the network.
The package that supplies this service is net-misc/networkmanager and could be extended with extra plugins.
$\u0026gt; luet s networkmanager --table | PACKAGE | VERSION | REPOSITORY | |------------------------------------|------------------|-----------------| | kde-frameworks-5/networkmanager-qt | 5.85.0+2 | macaroni-funtoo | | net-misc/networkmanager | 1.26.0+3 | macaroni-funtoo | | net-vpn/networkmanager-openconnect | 1.2.6.20200831+2 | macaroni-funtoo | | net-vpn/networkmanager-vpnc | 1.2.6+3 | macaroni-funtoo | $\u0026gt; The Network Manager configurations are stored under the directory /etc/NetworkManager/ and could be a good idea to do a backup of this directory when there are a lot of profiles configured.
The Gnome and XFCE DE have their configuration interface that permits configuring the Network Manager service.
The upstream documentation is available over their site.
nmcli # The nmcli tool is parte of the network-manager package and could be used to check the status of the setup of the Network Manager from the terminal.
$\u0026gt; nmcli --help Usage: nmcli [OPTIONS] OBJECT { COMMAND | help } OPTIONS -a, --ask ask for missing parameters -c, --colors auto|yes|no whether to use colors in output -e, --escape yes|no escape columns separators in values -f, --fields \u0026lt;field,...\u0026gt;|all|common specify fields to output -g, --get-values \u0026lt;field,...\u0026gt;|all|common shortcut for -m tabular -t -f -h, --help print this help -m, --mode tabular|multiline output mode -o, --overview overview mode -p, --pretty pretty output -s, --show-secrets allow displaying passwords -t, --terse terse output -v, --version show program version -w, --wait \u0026lt;seconds\u0026gt; set timeout waiting for finishing operations OBJECT g[eneral] NetworkManager\u0026#39;s general status and operations n[etworking] overall networking control r[adio] NetworkManager radio switches c[onnection] NetworkManager\u0026#39;s connections d[evice] devices managed by NetworkManager a[gent] NetworkManager secret agent or polkit agent m[onitor] monitor NetworkManager changes To check the connectivity status:
$\u0026gt; nmcli g STATE CONNECTIVITY WIFI-HW WIFI WWAN-HW WWAN connected full enabled disabled enabled enabled List the connections configured on Network Manager:
$\u0026gt; nmcli c NAME UUID TYPE DEVICE VLAN 50 441acd87-ce63-4af5-bde7-7ce4aec765fd vlan vlan50 UP-Empty c3b0c6d6-5a62-3e4f-9ec8-44526a3f5aba ethernet eth0 Or retrieve the list of the network interfaces availables:
$\u0026gt; nmcli d DEVICE TYPE STATE CONNECTION vlan50 vlan connected VLAN 50 eth0 ethernet connected UP-Empty wlan0 wifi unavailable -- mottainai0 bridge unmanaged -- veth0e8d2a56 ethernet unmanaged -- veth0fda5989 ethernet unmanaged -- veth4d3fd438 ethernet unmanaged -- veth7df4c34c ethernet unmanaged -- vetha71fd414 ethernet unmanaged -- vethbb8d7925 ethernet unmanaged -- vethf25b2272 ethernet unmanaged -- vethfb55205d ethernet unmanaged -- lo loopback unmanaged -- Run man nmcli to a more complete description of all available commands.
nmtui # The nmtui tool is part of the network-manager package and supply a terminal interface based on ncurses library to configure the connections.
Network Manager and LXD # By default Network Manager automatically tries to configure and enable every new interface added to the system and this could be correct when LXD is used.
It\u0026rsquo;s possible to disable this behavior for specific interfaces with the creation of the the file /etc/NetworkManager/NetworkManager.conf or editing it if it\u0026rsquo;s already present and to add the keyfile plugin as reported hereinafter:
[main] plugins=keyfile #[logging] #domains=ALL:TRACE [keyfile] unmanaged-devices=interface-name:veth*,interface-name:mottainai0,interface-name:br-int0,interface-name:ovs* In the example, the interfaces starting with veth or ovs and the interfaces mottainai0 and br-int0 are ignored by NM.
2. Core Network # Inherit from Funtoo for the OpenRC systems, so for both Phoenix and Terragon releases the corenetwork package contains the Funtoo scripts to use for configure the network interfaces on boot.
The concept about the interfaces configuration is that for every interface it\u0026rsquo;s needed create under the directory /etc/init.d the link in the format netif.\u0026lt;iface-name\u0026gt; to the netif.templ file with and then to create the related file under the directory /etc/conf.d/ with the naming convention netif.\u0026lt;iface-name\u0026gt;.
The corenetwork package supplies different templates to use different technologies and/or for different targets. For example, the DHCP could be managed with the tool dhcpd or with dhclient. Every specific template as specific configuration options.
The supported templates are available under the directory /etc/netif.d and in this moment are these:
# luet q files corenetwork | grep netif.d etc/netif.d/bond etc/netif.d/bridge etc/netif.d/bridge-dhcpcd etc/netif.d/bridge-openvswitch etc/netif.d/dhclient etc/netif.d/dhcpcd etc/netif.d/hostapd etc/netif.d/interface etc/netif.d/interface-noip etc/netif.d/ipv6-tunnel etc/netif.d/macvlan etc/netif.d/macvtap etc/netif.d/pppd etc/netif.d/tap etc/netif.d/tunnel etc/netif.d/wireguard etc/netif.d/wpa_supplicant Setup a DHCP interface using the dhcpd template # These the steps to setup the interface eth0 with the DHCP.
root $\u0026gt; cd /etc/init.d root $\u0026gt; ln -s netif.tmpl netif.eth0 root $\u0026gt; rc-update add netif.eth0 default root $\u0026gt; echo template=dhcpcd \u0026gt; /etc/conf.d/netif.eth0 Setup an interface with a static IP # To configure an interface with a static IP it\u0026rsquo;s used the interface template that could be configured with this steps:
root $\u0026gt; cd /etc/init.d root $\u0026gt; ln -s netif.tmpl netif.eth0 root $\u0026gt; rc-update add netif.eth0 default and then editing the file /etc/conf.d/netif.eth0 with this content:
template=\u0026#34;interface\u0026#34; ipaddr=\u0026#34;10.0.1.200/24\u0026#34; gateway=\u0026#34;10.0.1.1\u0026#34; nameservers=\u0026#34;1.1.1.1 8.8.8.8\u0026#34; domain=\u0026#34;mottainai.local\u0026#34; A more completed documentation is available directly from the Funtoo wiki.
3. Systemd Networkd # In the only Eagle release where it\u0026rsquo;s used Systemd could be used the systemd-networkd service for the network configuration.
The configuration files are available under the directory /etc/systemd/network with the extension .network.
For example to configure DHCP on interface eth0 it\u0026rsquo;s possible to create the file /etc/systemd/network/default_dhcp.network with the following content:
[Network] DHCP=ipv4 [Match] Name=eth0 [DHCP] UseDomains=true After the editing and/or creation of the files under /etc/systemd/network to apply the configuration is needed following the commands:
$\u0026gt; systemctl daemon-reload $\u0026gt; systemctl restart systemd-networkd The complete description of all availables options is present on the Freedesktop Website.
`}),e.add({id:22,href:"/docs/pms/",title:"Package Manager System",section:"Macaroni OS",content:` Package Manager System # The Package Manager System of the Macaroni OS is luet. It\u0026rsquo;s written in Golang and it has zero dependencies and permits to prepare environments \u0026ldquo;from scratch\u0026rdquo;.
It was initially based on branch 0.16 of the Mocaccino OS\u0026rsquo;s PMS but later is totally rewritten.
It\u0026rsquo;s composed of two different binary: the luet binary is the PMS client used by users to install packages and the luet-build binary is used to build packages and bump a new repository revision.
It will be rebranding soon in anise.
Luet # 1. Repositories or Wagons # In computer science in general, the term repository describes the place where is available a list of packages.
I saw often in my life that mapping computer science\u0026rsquo;s terms with real entities helps users to create relationships in their minds. So, playing with the term, a synonym of repository is also coal/salt's mine or gold mine. Following this concept in Luet a repository is a wagon where the stones are the packages that a user could require that are got from the gold mine.
The wagon identity is the card that describes the specific wagon: the name, the revision id, the date when the wagon is been prepared, and the URLs are the mine tracks used to get the stones. In addition, for every wagon identity there are different wagon document that contains:
the metafile repository.meta.yaml.tar[.gz|.zstd]: this file is deprecated and will be removed soon. It contains metadata of all stones available in the wagon. Will be soon removed because having a big file with all metadata together consumes a lot of memory resources in the sync phase. It\u0026rsquo;s better to have a tarball with multiple files with the right directories tree. On luet v0.37.0 is been added the support to the tree v2 that doesn\u0026rsquo;t need anymore the repository.meta.yaml file. This file will be removed on September 2023 and will support only repositories with tree v2.
the tree tarball tree.tar[.gz|.zstd]: this file contains the packages specs (definition.yaml) of the packages present on the source repository when the repository is been bumped.
the compiler tree tarball compilertree.tar[.gz|.zstd]: this file contains the build specs (build.yaml) of the packages present of the source repository when the repository is been bumped.
The wagon documents are validated with a checksum through the first repository file repository.yaml that is been created with a limited number of pieces of information to speed up the checks of the updates.
Hereinafter, an example of the files downloaded in the repo sync phase:
$\u0026gt; luet repo update --debug mottainai-stable DEBUG (root.go:#51:github.com/geaaru/luet/cmd.LoadConfig) Using config file: /etc/luet/luet.yaml DEBUG (loader.go:#38:github.com/geaaru/luet/pkg/repository.LoadRepositories) Parsing Repository Directory /etc/luet/repos.conf.d ... DEBUG (wagon.go:#155:github.com/geaaru/luet/pkg/v2/repository.(*WagonRepository).Sync) Sync of the repository mottainai-stable in progress... DEBUG (http.go:#243:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloading https://dl.macaronios.org/repos/mottainai/repository.yaml DEBUG (http.go:#255:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloaded repository.yaml of 0.00 MB ( 0.00 MiB/s ) DEBUG (http.go:#243:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloading https://dl.macaronios.org/repos/mottainai/tree.tar.zst DEBUG (http.go:#255:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloaded tree.tar.zst of 0.00 MB ( 0.00 MiB/s ) DEBUG (wagon.go:#207:github.com/geaaru/luet/pkg/v2/repository.(*WagonRepository).Sync) Tree tarball for the repository mottainai-stable downloaded correctly. DEBUG (http.go:#243:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloading https://dl.macaronios.org/repos/mottainai/repository.meta.yaml.tar.zst DEBUG (http.go:#255:github.com/geaaru/luet/pkg/v2/repository/client.(*HttpClient).DownloadFile) Downloaded repository.meta.yaml.tar.zst of 0.30 MB ( 0.17 MiB/s ) DEBUG (wagon.go:#215:github.com/geaaru/luet/pkg/v2/repository.(*WagonRepository).Sync) Metadata tarball for the repository mottainai-stable downloaded correctly. DEBUG (wagon.go:#228:github.com/geaaru/luet/pkg/v2/repository.(*WagonRepository).Sync) Decompress tree of the repository mottainai-stable... üè† Repository: mottainai-stable Revision: 88 - 2023-04-21 16:15:48 +0000 UTC DEBUG (wagon.go:#289:github.com/geaaru/luet/pkg/v2/repository.(*WagonRepository).ExplodeMetadata) üè† Repository: mottainai-stable unpacking metadata. DEBUG (wagon_stones.go:#1100:github.com/geaaru/luet/pkg/v2/repository.(*WagonStones).LoadCatalog) [mottainai-stable] Found metafile /var/cache/luet/repos/mottainai-stable/metafs/repository.meta.yaml DEBUG (wagon_stones.go:#1122:github.com/geaaru/luet/pkg/v2/repository.(*WagonStones).LoadCatalog) [mottainai-stable] metadata loaded in 199480 ¬µs. In particolar, the sync process download first the repository.yaml file:
$\u0026gt; curl https://dl.macaronios.org/repos/mottainai/repository.yaml name: mottainai-stable description: MottainaiCI Official Repository urls: - http://localhost:8000 type: http enable: true revision: 88 last_update: \u0026#34;1682093748\u0026#34; index: [] repo_files: compilertree: filename: compilertree.tar.gz compressiontype: gzip checksums: sha256: 3e9827097fd8e046c0d74f44c25e8c474204e3bda2a7ca91f20c81965c2001bb meta: filename: repository.meta.yaml.tar.zst compressiontype: zstd checksums: sha256: c0305b0e757827f8538da003cbe6cf03d88fd8636313739892a2dc26cfaa46e3 tree: filename: tree.tar.zst compressiontype: zstd checksums: sha256: 1fe37e7bf858bd8dd3f9c3d1c968081218d6dee8a12c0e3c26cd2c9109159b8e and compare the revision and last_update fields to understand if it\u0026rsquo;s needed go ahead with the download of the wagon document\u0026rsquo;s files.
From September 2023, the repositories will be migrated to tree v2 that will drop the key meta and will replace the key tree with treev2.
The urls attribute of the repository.yaml is not used at the moment and it sets with value used locally. It possible that will be removed in the near future or used in validation phase.
The stones could be uncompressed, so shared as simple tar files, or compressed in different formats: gzip or zstd.
The wagons used are based on YAML files that are installed under the directory /etc/luet/repos.conf.d by default. Additional directories where read the repositories YAML files could be added through the luet.yaml configuration file. In particular, the directories are defined through the attribute repos_confdir:
# Define the list of directories where luet # try for files with .yml extension that define # luet repositories. repos_confdir: - /etc/luet/repos.conf.d - /my-repos/ The location where the repositories metadata are unpacked depends on the configuration parameter system.database_path that has the default value equal to /var/cache/luet.
In particular, under the directory /var/cache/luet is present the luet.db file that contains the local BoltDB database where are registered the installed packages, the files of the installed packages, and the finalize of the packages when present.
At the moment the only supported database is BoltDB, but will be added the support of new databases soon.
Under the directory /var/cache/luet there are two directories:
packages: under this directory have stored the tarballs downloaded before executing the installation.
repos: under this directory are created the directories for every repository synced locally.
So, for every repository under the local repository are unpacked the metadata tarballs, in particular:
metafs: under the directory metafs is present the file repository.meta.yaml that contains the metadata of all packages. This directory will be removed when all repositories will be moved to tree v2.
repository.yaml: the repository.yaml contains the local data with the wagon identity data.
treefs: under the directory treefs is unpacked the tree of the repository with the following pattern: \u0026lt;package-category\u0026gt;/\u0026lt;package-name\u0026gt;/\u0026lt;package-version\u0026gt;/. Under the package directory are present:
definition.yaml: the file from the repository sources with the main package metadata
metadata.yaml: this file is generated from client-side when a repository is synced. Will be generated by luet-build soon or just replaced only by the metadata.json file. No more available with the migration to tree v2.
metadata.json: this file is generated from the client-side when a repository is synced. Will be generated by luet-build with the migration to tree v2. It\u0026rsquo;s used the JSON file instead of YAML because to elaborate the JSON file is faster than YAML.
provides.yaml: to speed up the solver logic under the directory treefs is generated the file provides.yaml the contains a map of the packages with provides. Will be generated by luet-build with the migration to tree v2.
$\u0026gt; ls /var/cache/luet/repos/macaroni-eagle/treefs/ app-accessibility-2 dev-db dev-libs media-libs provides.yaml sys-libs-4.8 app-admin dev-db-10.5 dev-libs-1 media-libs-1.0 sci-libs sys-power app-arch dev-db-11 dev-libs-2 media-libs-2 seed sys-process app-crypt dev-db-13 dev-libs-3 net-analyzer sys-apps system app-crypt-1 dev-db-3 dev-lisp net-dialup sys-auth toolchain app-doc dev-db-8.0 dev-lisp-2 net-dns sys-block virtual app-editors dev-go dev-perl net-firewall sys-cluster virtual-1 app-emulation dev-java-11 dev-php net-ftp sys-devel virtual-11 app-eselect dev-java-17 dev-python net-libs sys-devel-1.16 virtual-17 app-metrics dev-java-18 dev-python-3 net-libs-1.1 sys-devel-11 virtual-18 app-misc dev-java-2 dev-scheme-12 net-mail sys-devel-2 virtual-entities app-portage dev-java-3.6 dev-tex net-misc sys-devel-2.36 www-apps app-shells dev-java-8 dev-texlive net-nds sys-devel-2.69 www-client app-text dev-lang dev-util net-p2p sys-devel-9.2.0 www-servers app-text-3.0 dev-lang-2 dev-util-3 net-print sys-fs www-servers-2 app-text-4.1.2 dev-lang-2.7 dev-vcs net-proxy sys-fs-3 x11-apps app-text-4.2 dev-lang-3.7 gnome-extra net-vpn sys-kernel x11-base app-text-4.3 dev-lang-7.4 mail-mta net-wireless sys-libs x11-libs app-text-4.5 dev-lang-8.1 media-fonts perl-core sys-libs-18.1 x11-misc dev-cpp dev-lang-stable media-gfx pkglist sys-libs-2.2 x11-proto Hereinafter, an example of a package directory:
$\u0026gt; ls /var/cache/luet/repos/macaroni-eagle/treefs/sys-devel-9.2.0/gcc/9.2.0+1/ definition.yaml metadata.json metadata.yaml 1.1 Show repositories # This command permits to see all installed repositories. In particular, the enabled repositories are colored on green and instead the disabled repositories are in red.
$\u0026gt; luet repo list --help List of the configured repositories. Usage: luet repo list [OPTIONS] [flags] Flags: --disabled Show only disabled repositories. --enabled Show only enabled repositories. -h, --help help for list -q, --quiet Show only name of the repositories. -t, --type string Filter repositories of a specific type -u, --urls Show URLs of the repository. (only in normal mode). The availables options are:
--urls: Show the repositories URLs
--enabled: Show only the enabled repositories
--disabled: Show only the disabled repositories
--type \u0026lt;type\u0026gt;: Filter for repositories of type specified. The types are: \u0026lsquo;http\u0026rsquo;, \u0026lsquo;docker\u0026rsquo;, \u0026lsquo;disk\u0026rsquo;.
--quiet: Show only name of the repositories.
1.2 Enable one or more repositories # This command permits to enable repositories.
$\u0026gt; luet repo enable --help Enable one or more repositories. Usage: luet repo enable \u0026lt;repo1\u0026gt; ... \u0026lt;repoN\u0026gt; [flags] Flags: -h, --help help for enable 1.3 Disable one or more repositories # This command permits to disable repositories.
$\u0026gt; luet repo disable --help Disable one or more repositories. Usage: luet repo disable \u0026lt;repo1\u0026gt; ... \u0026lt;repoN\u0026gt; [flags] Flags: -h, --help help for disable 1.4 Update / Sync one or more repositories # This command permits to sync repositories metadata locally. When the repository is not defined it tries to sync all enabled repositories.
# luet repo update --help Update a specific cached repository or all cached repositories. Usage: luet repo update [repo1] [repo2] [OPTIONS] [flags] Aliases: update, up Examples: # Update all cached repositories: $\u0026gt; luet repo update # Update only repo1 and repo2 $\u0026gt; luet repo update repo1 repo2 Flags: -f, --force Force resync. -h, --help help for update -i, --ignore-errors Ignore errors on sync repositories. --force|-f option permits to force updates of the local trees also when the revision is the same. This is needed for example when a new luet release introduces new local logics.
--ignore-errors|-i option permits to ignore errors on sync. In this case, luet exiting always with zero.
2. Subsets # The subsets is the feature available in luet that permits to filter the file to install from a binary. This permits to choice a runtime what files will be installed and what not.
The subsets\u0026rsquo;s rules could be defined with multple strings regexes.
The definition of the subsets could be defined directly on the package specs in the definition.yaml file or at runtime through subsets definition files.
The packages generate from Funtoo are with two subsets rules directly from the definition.yaml:
annotations: subsets: rules: devel: - ^/usr/include/ portage: - ^/var/db/pkg/ with the subsets devel and portage.
The default directory where to define subsets\u0026rsquo;s definitions is /etc/luet/subsets.def.d but could be modified by the luet configuration option subsets_defdir in the luet.yaml file:
subsets_defdir: - /etc/luet/subsets.def.d The definition of subsets under the /etc/luet/subsets.def.d doesn\u0026rsquo;t use the same format of the annotations. The key of the map describe the name of the subset that is also defined in the name attribute. The specified rules could be applied in this order:
rules defined inside the package definition
rules defined by a local definition for the category of the package. These rules can be used to override the package definition.
rules defined by a local definition for the package
NOTE: When is present a rule for the package the categories rules are ignored.
At the moment there isn\u0026rsquo;t a wildcard key to use for every package, so to define a specific rule for every package you need to define all the possible categories.
The logic applied from luet with the subsets rules works in reverse, when are defined the rules, these rules are configured, thanks to the tar-formers library as ignore rules when the subset mapped to the rules is not enabled.
To clarify the behavior I sharing an example. In Sabayon the gcc package was split into the sys-devel/base-gcc package and sys-deve/gcc to permit to have the core libraries linked to a lot of packages that are compiled with the GCC package without the need to have the compiler too.
Thanks to the subsets, instead of split the package a way to reach the same result is to define a subset definition like this:
$\u0026gt; echo \u0026#34; subsets_def: gcc-devel: description: \\\u0026#34;Split gcc compiler stuff\\\u0026#34; name: \\\u0026#34;gcc-devel\\\u0026#34; rules: - ^/usr/x86_64-pc-linux-gnu/gcc-bin/9.2.0/ - ^/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/plugin/include/ - ^/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/ - ^/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/finclude/omp* - ^/usr/share/gcc-data/x86_64-pc-linux-gnu/9.2.0/ - ^/usr/libexec/gcc/x86_64-pc-linux-gnu/9.2.0 - ^/usr/bin/ packages: - sys-devel-9.2.0/gcc \u0026#34; \u0026gt; /etc/luet/subsets.def.d/00-gcc.yaml With this definition, luet will install all files that don\u0026rsquo;t match with the rules defined when the subsets gcc-devel is not enabled. In the example, the definition is strictly mapped to the package sys-devel-9.2.0/gcc.
Normally, the gcc package is installed by default because it\u0026rsquo;s a require of a lot of packages. This means that if the definition is added later to be applied must reinstalled the package.
To do this job the better solution is to use the low-level command luet miner reinstall-package:
$\u0026gt; luet miner ri sys-devel-9.2.0/gcc The list of the subsets enabled could be configured in two ways. On configuring the list of the subsets in the configuration file luet.yaml:
subsets: enabled: - portage - devel subsets_confdir: - /etc/luet/subsets.conf.d or through specific files under the directories defined in the attribute subsets_confdir.
The files under the directory /etc/luet/subsets.conf.d are in the format:
enabled: - gcc-devel At the moment, luet doesn\u0026rsquo;t supply commands to iterate with subsets definition but new commands are in our backlog.
2.1. Subsets list # This command permits to show the list of subsets enabled.
$ luet subsets list --help List of subsets enabled. Usage: luet subsets list [OPTIONS] [flags] Flags: -h, --help help for list -q, --quiet Show only name of the repositories. In particular, the description of the subsets devel and portage are visible by default also if the definition is not present.
$\u0026gt; luet subsets list üç® Subsets enabled: * portage Portage metadata and files. * devel Includes and devel files. Needed for compilation. --quiet: show only the name of the subset enabled. 2.2. Enable one or more subsets # This command permits to enable one or more subsets.
$\u0026gt; luet subsets enable --help Enable one or more subsets as subsets config file. $\u0026gt; luet subsets enable devel portage mysubset $\u0026gt; luet subsets enable -f my devel portage mysubset The filename is used to write/update the file under the first directory defined on subsets_confdir option (for example /etc/luet/subsets.conf.d/my.yml else main.yml is used). Usage: luet subsets enable [OPTIONS] \u0026lt;subset1\u0026gt; ... \u0026lt;subsetN\u0026gt; [flags] Flags: -f, --file string Define the filename without extension where enable the subsets. -h, --help help for enable By default this command add the subsets to the main.yml or to the file defined by the -f option:
$\u0026gt; luet subsets enable gcc-devel Subsets gcc-devel enabled ‚úî . That generates this content:
$\u0026gt; cat /etc/luet/subsets.conf.d/main.yml enabled: - gcc-devel Instead to enable the gcc-devel subset under the gcc.yml file:
$\u0026gt; luet subsets enable -f gcc gcc-devel Subsets gcc-devel enabled ‚úî . With this output:
$\u0026gt; cat /etc/luet/subsets.conf.d/gcc.yml enabled: - gcc-devel 2.3. Disable one or more subsets # This command permits to disable one or more subsets.
$\u0026gt; luet subsets disable --help Disable one or more subsets as subsets config file. $\u0026gt; luet subsets disable devel portage mysubset $\u0026gt; luet subsets disable -f my devel portage mysubset The filename is used to write/update the file under the first directory defined on subsets_confdir option (for example /etc/luet/subsets.conf.d/my.yml else main.yml is used). Usage: luet subsets disable [OPTIONS] \u0026lt;subset1\u0026gt; ... \u0026lt;subsetN\u0026gt; [flags] Flags: -f, --file string Define the filename without extension where enable the subsets. -h, --help help for disable 3. Search packages # This command permits to search packages available in the configured repositories or between installed packages.
$ luet s --help Search for installed and available packages To search a package in the repositories: $ luet search \u0026lt;regex1\u0026gt; ... \u0026lt;regexN\u0026gt; To search a package and display results in a table (wide screens): $ luet search --table \u0026lt;regex\u0026gt; To look into the installed packages: $ luet search --installed \u0026lt;regex\u0026gt; Note: the regex argument is optional, if omitted implies \u0026#34;all\u0026#34; To search a package by label: $ luet search --label \u0026lt;label1\u0026gt;,\u0026lt;label2\u0026gt;...,\u0026lt;labelN\u0026gt; or by regex against the label: $ luet search --rlabel \u0026lt;regex-label1\u0026gt;,..,\u0026lt;regex-labelN\u0026gt; or by categories: $ luet search --category \u0026lt;cat1\u0026gt;,..,\u0026lt;catN\u0026gt; or by names: $ luet search --name|-n \u0026lt;name1\u0026gt;,..,\u0026lt;nameN\u0026gt; or by annotations: $ luet search --annotation \u0026lt;annotation1\u0026gt;,..,\u0026lt;annotationN\u0026gt; or by package (used only category and package name for name in the format cat/foo) $ luet search -p \u0026lt;cat/foo\u0026gt;,\u0026lt;cat/foo2\u0026gt; Search can also return results in the terminal in different ways: as terminal output, as json or as yaml. $ luet search -o json \u0026lt;regex\u0026gt; # JSON output $ luet search -o yaml \u0026lt;regex\u0026gt; # YAML output Usage: luet search \u0026lt;term\u0026gt; [flags] Aliases: search, s Flags: -a, --annotation strings Search packages through one or more annotations. --artifacts Show full artefact data. --category strings Search packages through one or more categories regex. --condition-or The searching options are managed in OR between the searching types. --files Show package files on YAML/JSON output. --full Show full informations. -h, --help help for search --hidden Include hidden packages --ignore-masks Ignore packages masked. --installed Search between system packages --label strings Search packages through one or more labels. -n, --name strings Search packages matching the package name string. -o, --output string Output format ( Defaults: terminal, available: json,yaml ) (default \u0026#34;terminal\u0026#34;) -p, --package strings Search packages matching the package string cat/name. --quiet show output as list without version --rlabel strings Search packages through one or more labels regex. --system-dbpath string System db path --system-engine string System DB engine --system-target string System rootpath --table show output in a table (wider screens) --with-rootfs-prefix Add prefix of the configured rootfs path. (default true) 4. Install packages # This command permits to install packages from the configured repositories.
$ luet i --help Installs one or more packages without asking questions: $ luet install -y utils/busybox utils/yq ... To install only deps of a package: $ luet install --onlydeps utils/busybox ... To not install deps of a package: $ luet install --nodeps utils/busybox ... To force install a package: $ luet install --force utils/busybox ... Usage: luet install \u0026lt;pkg1\u0026gt; \u0026lt;pkg2\u0026gt; ... [flags] Aliases: install, i Flags: --download-only Download only --finalizer-env stringArray Set finalizer environment in the format key=value. --force Skip errors and keep going (potentially harmful) -h, --help help for install --ignore-conflicts Don\u0026#39;t consider package conflicts (harmful!) --ignore-masks Ignore packages masked. --nodeps Don\u0026#39;t consider package dependencies (harmful!) --overwrite-existing-dir-perms Overwrite exiting directories permissions. --preserve-system-essentials Preserve system luet files (default true) -p, --pretend simply display what *would* have been installed if --pretend weren\u0026#39;t used --show-install-order In additional of the package to install, show the installation order and exit. --skip-check-system Skip conflicts check with existing rootfs. --skip-finalizers Skip the execution of the finalizers. --sync-repos Sync repositories before install. Note: If there are in memory repositories then the sync is done always. -y, --yes Don\u0026#39;t ask questions 4.1. Show packages candidates to install # This command permit to see what packages are candidates for the selected packages to install.
In particular, the option --pretend|-p shows the list of the packages selected from the solver to install in alphabetic order.
$\u0026gt; luet i xdg-utils --pretend üöÄ Luet 0.35.4-geaaru-g3fcfc36cea5636d539d55117b8befc07e0812083 2023-04-04 09:46:02 UTC - go1.20.2 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons-testing Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-eagle-dev Revision: 480 - 2023-04-13 01:14:59 +0000 UTC üè† Repository: mottainai-dev Revision: 88 - 2023-04-21 16:15:48 +0000 UTC üß† Solving install tree... üç¶ [ 1 of 36] [N] dev-libs-2/glib::macaroni-eagle-dev - 2.70.0 üç¶ [ 2 of 36] [N] dev-libs/libpthread-stubs::macaroni-eagle-dev - 0.4 üç¶ [ 3 of 36] [N] dev-perl/File-BaseDir::macaroni-eagle-dev - 0.70.0 üç¶ [ 4 of 36] [N] dev-perl/File-DesktopEntry::macaroni-eagle-dev - 0.220.0 üç¶ [ 5 of 36] [N] dev-perl/File-MimeInfo::macaroni-eagle-dev - 0.280.0 üç¶ [ 6 of 36] [N] dev-perl/IPC-System-Simple::macaroni-eagle-dev - 1.250.0 üç¶ [ 7 of 36] [N] dev-perl/URI::macaroni-eagle-dev - 1.730.0 üç¶ [ 8 of 36] [N] dev-util/desktop-file-utils::macaroni-eagle-dev - 0.23 üç¶ [ 9 of 36] [N] dev-util/gdbus-codegen::macaroni-eagle-dev - 2.70.0 üç¶ [ 10 of 36] [N] virtual/libelf::macaroni-eagle-dev - 3 üç¶ [ 11 of 36] [N] virtual/perl-Carp::macaroni-eagle-dev - 1.500.0 üç¶ [ 12 of 36] [N] virtual/perl-Data-Dumper::macaroni-eagle-dev - 2.174.0 üç¶ [ 13 of 36] [N] virtual/perl-Encode::macaroni-eagle-dev - 3.60.0 üç¶ [ 14 of 36] [N] virtual/perl-Exporter::macaroni-eagle-dev - 5.740.0 üç¶ [ 15 of 36] [N] virtual/perl-File-Path::macaroni-eagle-dev - 2.160.0 üç¶ [ 16 of 36] [N] virtual/perl-File-Spec::macaroni-eagle-dev - 3.780.0 üç¶ [ 17 of 36] [N] virtual/perl-MIME-Base64::macaroni-eagle-dev - 3.150.0 üç¶ [ 18 of 36] [N] virtual/perl-Scalar-List-Utils::macaroni-eagle-dev - 1.550.0 üç¶ [ 19 of 36] [N] virtual/perl-libnet::macaroni-eagle-dev - 3.110.0 üç¶ [ 20 of 36] [N] virtual/perl-parent::macaroni-eagle-dev - 0.238.0 üç¶ [ 21 of 36] [N] x11-apps/xprop::macaroni-eagle-dev - 1.2.4 üç¶ [ 22 of 36] [N] x11-apps/xset::macaroni-eagle-dev - 1.2.4 üç¶ [ 23 of 36] [N] x11-base/xorg-proto::macaroni-eagle-dev - 2019.2 üç¶ [ 24 of 36] [N] x11-libs/libICE::macaroni-eagle-dev - 1.0.10 üç¶ [ 25 of 36] [N] x11-libs/libSM::macaroni-eagle-dev - 1.2.3 üç¶ [ 26 of 36] [N] x11-libs/libX11::macaroni-eagle-dev - 1.8.2 üç¶ [ 27 of 36] [N] x11-libs/libXau::macaroni-eagle-dev - 1.0.9 üç¶ [ 28 of 36] [N] x11-libs/libXdmcp::macaroni-eagle-dev - 1.1.3 üç¶ [ 29 of 36] [N] x11-libs/libXext::macaroni-eagle-dev - 1.3.4 üç¶ [ 30 of 36] [N] x11-libs/libXmu::macaroni-eagle-dev - 1.1.3 üç¶ [ 31 of 36] [N] x11-libs/libXt::macaroni-eagle-dev - 1.2.0 üç¶ [ 32 of 36] [N] x11-libs/libxcb::macaroni-eagle-dev - 1.14+1 üç¶ [ 33 of 36] [N] x11-libs/xtrans::macaroni-eagle-dev - 1.4.0 üç¶ [ 34 of 36] [N] x11-misc/compose-tables::macaroni-eagle-dev - 1.8.1 üç¶ [ 35 of 36] [N] x11-misc/shared-mime-info::macaroni-eagle-dev - 1.10 üç¶ [ 36 of 36] [N] x11-misc/xdg-utils::macaroni-eagle-dev - 1.1.3 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 5966 ¬µs). üéä All done. Usually, it\u0026rsquo;s better to see the packages in alphabetic order, this help research and pre-install checks.
There are use cases, that could help to see what will be the install order, for example, to validate the solver. In this case, it\u0026rsquo;s possible to use the option --show-install-order that will share the order of the operations after the download of the packages.
# luet i xdg-utils --show-install-order üöÄ Luet 0.35.4-geaaru-g3fcfc36cea5636d539d55117b8befc07e0812083 2023-04-04 09:46:02 UTC - go1.20.2 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons-testing Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-eagle-dev Revision: 480 - 2023-04-13 01:14:59 +0000 UTC üè† Repository: mottainai-dev Revision: 88 - 2023-04-21 16:15:48 +0000 UTC üß† Solving install tree... üç¶ [ 1 of 36] [N] dev-libs-2/glib::macaroni-eagle-dev - 2.70.0 üç¶ [ 2 of 36] [N] dev-libs/libpthread-stubs::macaroni-eagle-dev - 0.4 üç¶ [ 3 of 36] [N] dev-perl/File-BaseDir::macaroni-eagle-dev - 0.70.0 üç¶ [ 4 of 36] [N] dev-perl/File-DesktopEntry::macaroni-eagle-dev - 0.220.0 üç¶ [ 5 of 36] [N] dev-perl/File-MimeInfo::macaroni-eagle-dev - 0.280.0 üç¶ [ 6 of 36] [N] dev-perl/IPC-System-Simple::macaroni-eagle-dev - 1.250.0 üç¶ [ 7 of 36] [N] dev-perl/URI::macaroni-eagle-dev - 1.730.0 üç¶ [ 8 of 36] [N] dev-util/desktop-file-utils::macaroni-eagle-dev - 0.23 üç¶ [ 9 of 36] [N] dev-util/gdbus-codegen::macaroni-eagle-dev - 2.70.0 üç¶ [ 10 of 36] [N] virtual/libelf::macaroni-eagle-dev - 3 üç¶ [ 11 of 36] [N] virtual/perl-Carp::macaroni-eagle-dev - 1.500.0 üç¶ [ 12 of 36] [N] virtual/perl-Data-Dumper::macaroni-eagle-dev - 2.174.0 üç¶ [ 13 of 36] [N] virtual/perl-Encode::macaroni-eagle-dev - 3.60.0 üç¶ [ 14 of 36] [N] virtual/perl-Exporter::macaroni-eagle-dev - 5.740.0 üç¶ [ 15 of 36] [N] virtual/perl-File-Path::macaroni-eagle-dev - 2.160.0 üç¶ [ 16 of 36] [N] virtual/perl-File-Spec::macaroni-eagle-dev - 3.780.0 üç¶ [ 17 of 36] [N] virtual/perl-MIME-Base64::macaroni-eagle-dev - 3.150.0 üç¶ [ 18 of 36] [N] virtual/perl-Scalar-List-Utils::macaroni-eagle-dev - 1.550.0 üç¶ [ 19 of 36] [N] virtual/perl-libnet::macaroni-eagle-dev - 3.110.0 üç¶ [ 20 of 36] [N] virtual/perl-parent::macaroni-eagle-dev - 0.238.0 üç¶ [ 21 of 36] [N] x11-apps/xprop::macaroni-eagle-dev - 1.2.4 üç¶ [ 22 of 36] [N] x11-apps/xset::macaroni-eagle-dev - 1.2.4 üç¶ [ 23 of 36] [N] x11-base/xorg-proto::macaroni-eagle-dev - 2019.2 üç¶ [ 24 of 36] [N] x11-libs/libICE::macaroni-eagle-dev - 1.0.10 üç¶ [ 25 of 36] [N] x11-libs/libSM::macaroni-eagle-dev - 1.2.3 üç¶ [ 26 of 36] [N] x11-libs/libX11::macaroni-eagle-dev - 1.8.2 üç¶ [ 27 of 36] [N] x11-libs/libXau::macaroni-eagle-dev - 1.0.9 üç¶ [ 28 of 36] [N] x11-libs/libXdmcp::macaroni-eagle-dev - 1.1.3 üç¶ [ 29 of 36] [N] x11-libs/libXext::macaroni-eagle-dev - 1.3.4 üç¶ [ 30 of 36] [N] x11-libs/libXmu::macaroni-eagle-dev - 1.1.3 üç¶ [ 31 of 36] [N] x11-libs/libXt::macaroni-eagle-dev - 1.2.0 üç¶ [ 32 of 36] [N] x11-libs/libxcb::macaroni-eagle-dev - 1.14+1 üç¶ [ 33 of 36] [N] x11-libs/xtrans::macaroni-eagle-dev - 1.4.0 üç¶ [ 34 of 36] [N] x11-misc/compose-tables::macaroni-eagle-dev - 1.8.1 üç¶ [ 35 of 36] [N] x11-misc/shared-mime-info::macaroni-eagle-dev - 1.10 üç¶ [ 36 of 36] [N] x11-misc/xdg-utils::macaroni-eagle-dev - 1.1.3 üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 6343 ¬µs). üöö Downloading 36 packages... üì¶ [ 1 of 36] x11-misc/xdg-utils::macaroni-eagle-dev - 1.1.3 # downloaded ‚úî üì¶ [ 2 of 36] x11-libs/libX11::macaroni-eagle-dev - 1.8.2 # downloaded ‚úî üì¶ [ 3 of 36] x11-libs/xtrans::macaroni-eagle-dev - 1.4.0 # downloaded ‚úî üì¶ [ 4 of 36] x11-libs/libSM::macaroni-eagle-dev - 1.2.3 # downloaded ‚úî üì¶ [ 5 of 36] x11-libs/libXt::macaroni-eagle-dev - 1.2.0 # downloaded ‚úî üì¶ [ 6 of 36] x11-base/xorg-proto::macaroni-eagle-dev - 2019.2 # downloaded ‚úî üì¶ [ 7 of 36] virtual/perl-Scalar-List-Utils::macaroni-eagle-dev - 1.550.0 # downloaded ‚úî üì¶ [ 8 of 36] virtual/perl-MIME-Base64::macaroni-eagle-dev - 3.150.0 # downloaded ‚úî üì¶ [ 9 of 36] x11-misc/shared-mime-info::macaroni-eagle-dev - 1.10 # downloaded ‚úî üì¶ [ 10 of 36] dev-util/desktop-file-utils::macaroni-eagle-dev - 0.23 # downloaded ‚úî üì¶ [ 11 of 36] virtual/perl-Carp::macaroni-eagle-dev - 1.500.0 # downloaded ‚úî üì¶ [ 12 of 36] dev-perl/File-BaseDir::macaroni-eagle-dev - 0.70.0 # downloaded ‚úî üì¶ [ 13 of 36] virtual/perl-Encode::macaroni-eagle-dev - 3.60.0 # downloaded ‚úî üì¶ [ 14 of 36] x11-libs/libXmu::macaroni-eagle-dev - 1.1.3 # downloaded ‚úî üì¶ [ 15 of 36] x11-apps/xset::macaroni-eagle-dev - 1.2.4 # downloaded ‚úî üì¶ [ 16 of 36] virtual/perl-Data-Dumper::macaroni-eagle-dev - 2.174.0 # downloaded ‚úî üì¶ [ 17 of 36] dev-perl/File-MimeInfo::macaroni-eagle-dev - 0.280.0 # downloaded ‚úî üì¶ [ 18 of 36] x11-libs/libXau::macaroni-eagle-dev - 1.0.9 # downloaded ‚úî üì¶ [ 19 of 36] x11-libs/libXext::macaroni-eagle-dev - 1.3.4 # downloaded ‚úî üì¶ [ 20 of 36] dev-util/gdbus-codegen::macaroni-eagle-dev - 2.70.0 # downloaded ‚úî üì¶ [ 21 of 36] dev-libs/libpthread-stubs::macaroni-eagle-dev - 0.4 # downloaded ‚úî üì¶ [ 22 of 36] x11-libs/libxcb::macaroni-eagle-dev - 1.14+1 # downloaded ‚úî üì¶ [ 23 of 36] virtual/perl-File-Spec::macaroni-eagle-dev - 3.780.0 # downloaded ‚úî üì¶ [ 24 of 36] dev-perl/URI::macaroni-eagle-dev - 1.730.0 # downloaded ‚úî üì¶ [ 25 of 36] virtual/perl-File-Path::macaroni-eagle-dev - 2.160.0 # downloaded ‚úî üì¶ [ 26 of 36] dev-perl/File-DesktopEntry::macaroni-eagle-dev - 0.220.0 # downloaded ‚úî üì¶ [ 27 of 36] dev-perl/IPC-System-Simple::macaroni-eagle-dev - 1.250.0 # downloaded ‚úî üì¶ [ 28 of 36] x11-libs/libXdmcp::macaroni-eagle-dev - 1.1.3 # downloaded ‚úî üì¶ [ 29 of 36] x11-libs/libICE::macaroni-eagle-dev - 1.0.10 # downloaded ‚úî üì¶ [ 30 of 36] x11-apps/xprop::macaroni-eagle-dev - 1.2.4 # downloaded ‚úî üì¶ [ 31 of 36] virtual/perl-libnet::macaroni-eagle-dev - 3.110.0 # downloaded ‚úî üì¶ [ 32 of 36] virtual/perl-parent::macaroni-eagle-dev - 0.238.0 # downloaded ‚úî üì¶ [ 33 of 36] virtual/libelf::macaroni-eagle-dev - 3 # downloaded ‚úî üì¶ [ 34 of 36] dev-libs-2/glib::macaroni-eagle-dev - 2.70.0 # downloaded ‚úî üì¶ [ 35 of 36] virtual/perl-Exporter::macaroni-eagle-dev - 5.740.0 # downloaded ‚úî üì¶ [ 36 of 36] x11-misc/compose-tables::macaroni-eagle-dev - 1.8.1 # downloaded ‚úî üß† Sorting 36 packages operations... üß† Install order: üç¶ [ 1 of 36] [N] dev-libs/libpthread-stubs::macaroni-eagle-dev - 0.4 üç¶ [ 2 of 36] [N] dev-util/gdbus-codegen::macaroni-eagle-dev - 2.70.0 üç¶ [ 3 of 36] [N] virtual/libelf::macaroni-eagle-dev - 3 üç¶ [ 4 of 36] [N] virtual/perl-Carp::macaroni-eagle-dev - 1.500.0 üç¶ [ 5 of 36] [N] virtual/perl-Data-Dumper::macaroni-eagle-dev - 2.174.0 üç¶ [ 6 of 36] [N] virtual/perl-Encode::macaroni-eagle-dev - 3.60.0 üç¶ [ 7 of 36] [N] virtual/perl-Exporter::macaroni-eagle-dev - 5.740.0 üç¶ [ 8 of 36] [N] virtual/perl-File-Path::macaroni-eagle-dev - 2.160.0 üç¶ [ 9 of 36] [N] virtual/perl-File-Spec::macaroni-eagle-dev - 3.780.0 üç¶ [ 10 of 36] [N] virtual/perl-MIME-Base64::macaroni-eagle-dev - 3.150.0 üç¶ [ 11 of 36] [N] virtual/perl-Scalar-List-Utils::macaroni-eagle-dev - 1.550.0 üç¶ [ 12 of 36] [N] virtual/perl-libnet::macaroni-eagle-dev - 3.110.0 üç¶ [ 13 of 36] [N] virtual/perl-parent::macaroni-eagle-dev - 0.238.0 üç¶ [ 14 of 36] [N] x11-base/xorg-proto::macaroni-eagle-dev - 2019.2 üç¶ [ 15 of 36] [N] x11-libs/xtrans::macaroni-eagle-dev - 1.4.0 üç¶ [ 16 of 36] [N] x11-misc/compose-tables::macaroni-eagle-dev - 1.8.1 üç¶ [ 17 of 36] [N] x11-libs/libXau::macaroni-eagle-dev - 1.0.9 üç¶ [ 18 of 36] [N] x11-libs/libXdmcp::macaroni-eagle-dev - 1.1.3 üç¶ [ 19 of 36] [N] dev-libs-2/glib::macaroni-eagle-dev - 2.70.0 üç¶ [ 20 of 36] [N] x11-misc/shared-mime-info::macaroni-eagle-dev - 1.10 üç¶ [ 21 of 36] [N] dev-util/desktop-file-utils::macaroni-eagle-dev - 0.23 üç¶ [ 22 of 36] [N] x11-libs/libICE::macaroni-eagle-dev - 1.0.10 üç¶ [ 23 of 36] [N] x11-libs/libSM::macaroni-eagle-dev - 1.2.3 üç¶ [ 24 of 36] [N] dev-perl/IPC-System-Simple::macaroni-eagle-dev - 1.250.0 üç¶ [ 25 of 36] [N] dev-perl/File-BaseDir::macaroni-eagle-dev - 0.70.0 üç¶ [ 26 of 36] [N] x11-libs/libxcb::macaroni-eagle-dev - 1.14+1 üç¶ [ 27 of 36] [N] x11-libs/libX11::macaroni-eagle-dev - 1.8.2 üç¶ [ 28 of 36] [N] dev-perl/URI::macaroni-eagle-dev - 1.730.0 üç¶ [ 29 of 36] [N] x11-libs/libXt::macaroni-eagle-dev - 1.2.0 üç¶ [ 30 of 36] [N] dev-perl/File-DesktopEntry::macaroni-eagle-dev - 0.220.0 üç¶ [ 31 of 36] [N] x11-apps/xprop::macaroni-eagle-dev - 1.2.4 üç¶ [ 32 of 36] [N] x11-libs/libXext::macaroni-eagle-dev - 1.3.4 üç¶ [ 33 of 36] [N] x11-libs/libXmu::macaroni-eagle-dev - 1.1.3 üç¶ [ 34 of 36] [N] x11-apps/xset::macaroni-eagle-dev - 1.2.4 üç¶ [ 35 of 36] [N] dev-perl/File-MimeInfo::macaroni-eagle-dev - 0.280.0 üç¶ [ 36 of 36] [N] x11-misc/xdg-utils::macaroni-eagle-dev - 1.1.3 üéä All done. 5. Cleanup local cache # The tree of the installed repositories installed under the directory /var/cache/luet/repos are not mandatory when the user had installed the packages.
Through the cleanup command it\u0026rsquo;s possible clean the cache of the downloaded files:
$\u0026gt; luet cleanup Cleaned: 36 packages. and to clean all the repositories under the directory /var/cache/luet/repos with:
$\u0026gt; luet cleanup --purge-repos Cleaned: 0 packages. Repos Cleaned: 17 6. Uninstall packages # The command uninstall or rm permits to uninstall installed packages.
$\u0026gt; luet uninstall --help Remove one or more package and his dependencies recursively $ luet uninstall cat/foo1 ... cat/foo2 Remove one or more packages without dependencies $ luet uninstall cat/foo1 ... --nodeps Remove one or more packages and skip errors $ luet uninstall cat/foo1 ... --force Remove one or more packages without ask confirm $ luet uninstall cat/foo1 ... --yes Remove one or more packages without ask confirm and skip execution of the finalizers. $ luet uninstall cat/foo1 ... --yes --skip-finalizers Usage: luet uninstall \u0026lt;pkg\u0026gt; \u0026lt;pkg2\u0026gt; ... [flags] Aliases: uninstall, rm, un Flags: --finalizer-env stringArray Set finalizer environment in the format key=value. --force Force uninstall -h, --help help for uninstall -k, --keep-protected-files Keep package protected files around --nodeps Don\u0026#39;t consider package dependencies (harmful! overrides checkconflicts and full!) --preserve-system-essentials Preserve system luet files (default true) --skip-finalizers Skip the execution of the finalizers. -y, --yes Don\u0026#39;t ask questions By default the selected packages are removed with all packages that depend on the candidates in reverse order. To avoid the dependencies could be used the --nodeps option.
--yes|-y: skip the confirm phase.
--force: ignore errors and for uninstall of the selected packages.
--keep-protected-files|-k: keep the protected files.
--nodeps: ignore dependencies on uninstall selected packages.
--finalizer-env \u0026lt;key=value\u0026gt;: define one or more environment variables to use on finalizer
7. Upgrade the system # The upgrade of the existing system is possible through the upgrade command.
$\u0026gt; luet upgrade üöÄ Luet 0.35.4-geaaru-g3fcfc36cea5636d539d55117b8befc07e0812083 2023-04-04 09:46:02 UTC - go1.20.2 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons-testing Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-eagle-dev Revision: 480 - 2023-04-13 01:14:59 +0000 UTC üè† Repository: mottainai-dev Revision: 88 - 2023-04-21 16:15:48 +0000 UTC ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üç¨ [ 1 of 1] [U] system/luet-geaaru-testing::mottainai-dev - 0.35.5 [0.35.4::mottainai-stable] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 40018 ¬µs). Do you want to continue with this operation? [y/N]: --show-upgrade-order: Show the order of the packages to upgrade
--sync-repos: On upgrade the system, sync the repository before execute the solver.
--yes|y: Skip the confirm question
--ignore-masks: Ignores the masks
--ignore-conflicts: Ignore the conflicts
--pretend: Show the candidates for the upgrade
--show-upgrade-order: Show the order of the packages to upgrade
--skip-finalizers: Skip finalizers
--force: Ignore errors and force installation of all candidates packages.
--download-only: Download only the packages candidates.
--deep: Available from luet \u0026gt;=v0.38.0. Permits to downgrade version of the installed packages when the version is no more available on enabled repositories.
$\u0026gt; luet upgrade --show-upgrade-order üöÄ Luet 0.35.4-geaaru-g3fcfc36cea5636d539d55117b8befc07e0812083 2023-04-04 09:46:02 UTC - go1.20.2 üè† Repository: geaaru-repo-index Revision: 5 - 2023-03-18 10:12:28 +0000 UTC üè† Repository: macaroni-commons-testing Revision: 137 - 2023-03-19 11:49:39 +0000 UTC üè† Repository: macaroni-eagle-dev Revision: 480 - 2023-04-13 01:14:59 +0000 UTC üè† Repository: mottainai-dev Revision: 88 - 2023-04-21 16:15:48 +0000 UTC ü§î Computing upgrade, please hang tight... üí§ üéâ Upgrades: üç¨ [ 1 of 1] [U] system/luet-geaaru-testing::mottainai-dev - 0.35.5 [0.35.4::mottainai-stable] üíÇ Checking for file conflicts... ‚úîÔ∏è No conflicts found (executed in 107 ¬µs). üöö Downloading 1 packages... üì¶ [ 1 of 1] system/luet-geaaru-testing::mottainai-dev - 0.35.5 # downloaded ‚úî üß† Sorting 2 packages operations... üß† Upgrade order: üç¨ [ 1 of 1] [U] system/luet-geaaru-testing::mottainai-dev - 0.35.5 [0.35.4::mottainai-stable] 7.1 Understanding upgrade codes # 7.1.2 New version on the same repository # When there is a new package from the same repository of the package installed the output show:
[U] system/luet-geaaru-testing::mottainai-dev - 0.38.1 [0.37.0+1] where U means updates and the number visible are without the repository.
7.1.3 Update of the package with the same version installed # The package installed with the same version contains some difference on definition.yaml, normally differences on requires. The PMS in this case reinstall the package and it executes finalize.
[U] dev-lang/lazarus::macaroni-phoenix-dev - *2.2.4 [2.2.4] In this case it\u0026rsquo;s visible with U char and with the * on the version.
7.1.4 New version from another repository # If there is a new version of the installed package but the repository isn\u0026rsquo;t the same of the installed version in the old version is visible the previous repository after the chars :::
[U] dev-libs/libfmt::macaroni-phoenix-dev - 10.0.0 [9.1.0::macaroni-funtoo-testing] Also in this case it\u0026rsquo;s used the char U to identify the update.
7.1.5 The installed package is replaced by a new package that provides it # In this case the installed package will be removed and the code visible will be D, instead the new installed package with be with the N char as operation code.
üî™ [ 1 of 2] [D] app-misc/jq - 1.6+3 üç¶ [ 2 of 2] [N] utils/jq::mottainai-stable - 1.6+2 7.1.6 Downgrade the package to previous version # Switching between the stable and testing/dev repository permits to test new version and downgrade to the previous version is something goes wrong.
[u] system/luet-geaaru-testing::mottainai-stable - 0.38.0+3 [0.38.1::mottainai-dev] In this case it\u0026rsquo;s used the lower case char u.
8. Show luet configuration # The command config permits to see the configuration parameters active in luet.
# luet config --help Show luet configuration Usage: luet config [flags] Aliases: config, c Flags: -h, --help help for config 9. Queries tools # luet supplies different commands to analyze the repositories and the installed packages.
# luet query --help Repository query tools. Usage: luet query [command] Aliases: query, q Available Commands: belongs Resolve what package a file belongs to. files Show files owned by a specific package. orphans Show orphans packages. Flags: -h, --help help for query 9.1. Show files owned by a specific package # This command permits to show the files owned by a specific package.
$\u0026gt; luet q files --help Show files owned by a specific package. Usage: luet query files \u0026lt;pkg1\u0026gt; ... \u0026lt;pkgN\u0026gt; [OPTIONS] [flags] Aliases: files, fi, f Flags: -h, --help help for files --installed Search between system packages -o, --output string Output format ( Defaults: terminal, available: json,yaml ) (default \u0026#34;terminal\u0026#34;) --with-rootfs-prefix Add prefix of the configured rootfs path. (default true) It\u0026rsquo;s possible to see the list of files in JSON or YAML format:
$\u0026gt; luet q files lxd-compose -o json [\u0026#34;/usr/bin/lxd-compose\u0026#34;] 9.2. Resolve what package a file belongs to # This command permits to search the packages that contains the file specified.
$\u0026gt; luet q belongs --help Resolve what package a file belongs to. Usage: luet query belongs \u0026lt;file1\u0026gt; ... \u0026lt;fileN\u0026gt; [OPTIONS] [flags] Aliases: belongs, be, b Flags: -h, --help help for belongs --installed Search between system packages -o, --output string Output format ( Defaults: terminal, available: json,yaml ) (default \u0026#34;terminal\u0026#34;) --quiet show output as list without version --table show output in a table (wider screens) --quiet: show the list of the packages without the version
--output|-o string: show the package list in JSON, or YAML format. Default as string.
--installed: search only between the installed packages. It uses the local database.
$\u0026gt; luet q belongs /usr/bin/lxd-compose app-emulation/lxd-compose-0.27.0 $\u0026gt; luet q belongs /usr/bin/lxd-compose --quiet app-emulation/lxd-compose $\u0026gt; luet q belongs /usr/bin/lxd-compose --installed app-emulation/lxd-compose-0.27.0 9.3. Show orphans packages # On upgrading a system or on remove a custom repository it\u0026rsquo;s possible that some packages will be no more available.
In this use case having a way to retrieve the list of orphan packages is helpful.
This operation could require a lot of time.
NOTE: It\u0026rsquo;s important executing this command when there aren\u0026rsquo;t packages to upgrade. So, after executing luet upgrade.
$\u0026gt; luet q orphans --help An orphan package is a package that is no more available in the configured and/or enabled repositories. This operation could require a bit of time. Usage: luet query orphans [OPTIONS] [flags] Aliases: orphans, o Flags: -h, --help help for orphans -o, --output string Output format ( Defaults: terminal, available: json,yaml ) (default \u0026#34;terminal\u0026#34;) --quiet show output as list without version --verbose Show messages. (default true) 10. Local Database Operations # There are different commands to operate on local database.
10.1. Reindex collections # On upgrade luet it\u0026rsquo;s possible that is needed to update the indexes of the local database.
$\u0026gt; luet database reindex 10.2. Get package data # Retrive metadata of a package installed in the YAML format.
$\u0026gt; luet database get app-emulation/lxd-compose --help Get a package in the system database in the YAML format: $ luet database get system/foo To return also files: $ luet database get --files system/foo Usage: luet database get \u0026lt;package\u0026gt; [flags] Flags: --files Show package files. -h, --help help for get --files: Show also the package files. An example:
$\u0026gt; luet database get app-emulation/lxd-compose --files category: app-emulation conflicts: [] description: Supply a way to deploy a complex environment to an LXD Cluster or LXD standalone installation id: 467 labels: github.owner: lxd-compose github.repo: MottainaiCI license: GPL-3.0 name: lxd-compose repository: mottainai-stable requires: [] uri: - https://github.com/MottainaiCI/lxd-compose version: 0.27.0 files: - usr/bin/lxd-compose 10.3. Remove an installed package from the database # This command is a low-level operation that normally must be not used.
$\u0026gt; luet database remove --help Removes a package in the system database without actually uninstalling it: $ luet database remove foo/bar This commands takes multiple packages as arguments and prunes their entries from the system database. Usage: luet database remove [package1] [package2] ... [flags] Flags: --force Force uninstall -h, --help help for remove 10.4. Insert a package in the system database # It\u0026rsquo;s a low-level command that permit to register a new package in the system database.
This command is used by the luet-portage-converter tool to sync the package installed with emerge to luet database.
luet database create --help Inserts a package in the system database: $ luet database create foo.yaml \u0026#34;luet database create\u0026#34; injects a package in the system database without actually installing it, use it with caution. This commands takes multiple yaml input file representing package artifacts, that are usually generated while building packages. The yaml must contain the package definition, and the file list at least. For reference, inspect a \u0026#34;metadata.yaml\u0026#34; file generated while running \u0026#34;luet build\u0026#34; Usage: luet database create \u0026lt;artifact_metadata1.yaml\u0026gt; \u0026lt;artifact_metadata1.yaml\u0026gt; [flags] Flags: -h, --help help for create 11. Masking Packages # Leaving users the possibility to create their packages it\u0026rsquo;s needed to have a way to mask packages from the main repositories or others repositories. The masking could be used to stop the upgrade of a package too.
At the moment, there isn\u0026rsquo;t a CLI command that permit to mask packages.
The mask operation must be done manually creating file under one of the directories defined in the configuration option packages_maskdir that has the default /etc/luet/mask.d directory.
In particular, the content of the files YAML used to add mask rules are in the format:
description: | Packages mask for XXX # Enable packages mask (true) or not (false) enabled: true # The rules are in the Gentoo/Funtoo format rules: # Hidden the package test/b with version \u0026gt;=1.0 - \u0026gt;=test/b-1.0 # Hidden the package test/c with version 2.0 - =test/c-2.0 # Hidden the package test/e with version \u0026lt;3.0 - \u0026lt;test/e-3.0 # Hidden the package test/g with version 2.0 from repos main - test/g-2.0::main A real example could be the masking of the package that supplies the binary macaronictl. The package macaroni/ctl is a provides that is supplied by both packages app-admin/macaronictl and app-admin/macaronictl-thin.
A way to define what package the solver will be selected is to mask the package to exclude.
description: Select macaronictl-thin. enabled: true rules: - app-admin/macaronictl `}),e.add({id:23,href:"/docs/story/",title:"The Story",section:"Macaroni OS",content:`I write this article because I think that it\u0026rsquo;s needed to understand the story to improve things and instead follow the original choices when they make sense.
The Origins # After a lot of years working with opensource packages, I can for sure to said that there are so many possibilities to configure our systems that it isn\u0026rsquo;t sufficient one life to test all combinations.
But the power to choose is one of the more powerful things that the open-source world gift and the same packages often are created with the possibility to compile and build them in different ways. Also, the compiler used to compile and build a package supplies a lot of options to compile, optimize and validate the code (for example using -O2 or -O3 options) and this introduces again others combinations.
On August 21, 1994, Jordan Hubbard committed his port make macros to the FreeBSD CVS repository, and the FreeBSD ports is born. The FreeBSD ports through Makefile, supplies a way to define how it\u0026rsquo;s possible to compile a package and what are the knobs (or options) available to customize the compilation. So, the FreeBSD ports defines a way to supply metadata with the rules for compiling packages and optionally customize the configure options.
Following the concept to optimize the packages of a system based on specific hardware optimization in December 1999, Daniel Robbins initially created Gentoo Linux (previously called Enoch Linux). Daniel Robbins and the other contributors experimented with a fork of GCC known as EGCS, developed by Cygnus Solutions. At this point, \u0026ldquo;Enoch\u0026rdquo; was renamed \u0026ldquo;Gentoo\u0026rdquo; Linux (the Gentoo species is the fastest-swimming penguin). The modifications to EGCS eventually became part of the official GCC (version 2.95), and other Linux distributions experienced similar speed increases. After problems with a bug on his own system, Robbins halted Gentoo development and switched to FreeBSD for several months, later saying, \u0026ldquo;I decided to add several FreeBSD features to make our autobuild system (now called Portage) a true next-generation ports system\u0026rdquo;.
Gentoo Linux 1.0 was released on March 31, 2002. In 2004, Robbins set up the non-profit Gentoo Foundation, transferred all copyrights and trademarks to it, and stepped down as chief architect of the project.
Gentoo is a source-based distribution with a repository describing how to build the packages, and adding instructions to build on different machine architectures. In particular, the rules about how build a package are defined inside Ebuild files and on Eclasses files which are both files using Bash language. The Portage written in Python is the Package Manager System that calculates dependencies and the order to build using the underlying rules read from the Ebuild and Eclass files.
What are called knobs on FreeBSD in Gentoo are called USE flags.
Inside an ebuild there are some important pieces of information in addition to the rules about how to compile a package, pieces of information defined inside Bash variables:
IUSE: The list of the USE flags that an user could select or not to configure the build process.
DEPEND, PDEPEND, and BDEPEND: these variables contain the list of the packages needed to compile the package
RDEPEND: contains the list of the packages needed at runtime to use the package.
These pieces of information with others are what is called the metadata of the package and for an installed package are visible under the directory /var/db/pkg.
In Macaroni, like in both binary anise-portage-converter (previously luet-portage-converter) and luet we use code available in the pkgs-checker tool that I written in Golang that between the rest, it has a way to retrieve package metadata and convert them to JSON:
$\u0026gt; sudo pkgs-checker portage metadata app-emulation/lxd -j | jq [ { \u0026#34;package\u0026#34;: { \u0026#34;name\u0026#34;: \u0026#34;lxd\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;app-emulation\u0026#34;, \u0026#34;version\u0026#34;: \u0026#34;5.12\u0026#34;, \u0026#34;slot\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;Condition\u0026#34;: 5, \u0026#34;repository\u0026#34;: \u0026#34;geaaru-kit\u0026#34;, \u0026#34;use_flags\u0026#34;: [ \u0026#34;-apparmor\u0026#34;, \u0026#34;ipv6\u0026#34;, \u0026#34;-nios2\u0026#34;, \u0026#34;nls\u0026#34;, \u0026#34;-sh\u0026#34; ], \u0026#34;license\u0026#34;: \u0026#34;Apache-2.0 BSD BSD-2 LGPL-3 MIT MPL-2.0\u0026#34; }, \u0026#34;iuse\u0026#34;: [ \u0026#34;apparmor\u0026#34;, \u0026#34;ipv6\u0026#34;, \u0026#34;nls\u0026#34;, \u0026#34;kernel_linux\u0026#34; ], \u0026#34;iuse_effective\u0026#34;: [ \u0026#34;alpha\u0026#34;, \u0026#34;amd64\u0026#34;, \u0026#34;amd64-fbsd\u0026#34;, \u0026#34;amd64-linux\u0026#34;, \u0026#34;apparmor\u0026#34;, \u0026#34;arm\u0026#34;, \u0026#34;arm-linux\u0026#34;, \u0026#34;arm64\u0026#34;, \u0026#34;elibc_AIX\u0026#34;, \u0026#34;elibc_Cygwin\u0026#34;, \u0026#34;elibc_Darwin\u0026#34;, \u0026#34;elibc_DragonFly\u0026#34;, \u0026#34;elibc_FreeBSD\u0026#34;, \u0026#34;elibc_HPUX\u0026#34;, \u0026#34;elibc_Interix\u0026#34;, \u0026#34;elibc_NetBSD\u0026#34;, \u0026#34;elibc_OpenBSD\u0026#34;, \u0026#34;elibc_SunOS\u0026#34;, \u0026#34;elibc_Winnt\u0026#34;, \u0026#34;elibc_bionic\u0026#34;, \u0026#34;elibc_glibc\u0026#34;, \u0026#34;elibc_mingw\u0026#34;, \u0026#34;elibc_mintlib\u0026#34;, \u0026#34;elibc_musl\u0026#34;, \u0026#34;elibc_uclibc\u0026#34;, \u0026#34;hppa\u0026#34;, \u0026#34;ia64\u0026#34;, \u0026#34;ipv6\u0026#34;, \u0026#34;kernel_AIX\u0026#34;, \u0026#34;kernel_Darwin\u0026#34;, \u0026#34;kernel_FreeBSD\u0026#34;, \u0026#34;kernel_HPUX\u0026#34;, \u0026#34;kernel_NetBSD\u0026#34;, \u0026#34;kernel_OpenBSD\u0026#34;, \u0026#34;kernel_SunOS\u0026#34;, \u0026#34;kernel_Winnt\u0026#34;, \u0026#34;kernel_freemint\u0026#34;, \u0026#34;kernel_linux\u0026#34;, \u0026#34;m68k\u0026#34;, \u0026#34;m68k-mint\u0026#34;, \u0026#34;mips\u0026#34;, \u0026#34;nios2\u0026#34;, \u0026#34;nls\u0026#34;, \u0026#34;ppc\u0026#34;, \u0026#34;ppc-aix\u0026#34;, \u0026#34;ppc-macos\u0026#34;, \u0026#34;ppc64\u0026#34;, \u0026#34;ppc64-linux\u0026#34;, \u0026#34;prefix\u0026#34;, \u0026#34;prefix-chain\u0026#34;, \u0026#34;prefix-guest\u0026#34;, \u0026#34;riscv\u0026#34;, \u0026#34;riscv32\u0026#34;, \u0026#34;riscv64\u0026#34;, \u0026#34;s390\u0026#34;, \u0026#34;sh\u0026#34;, \u0026#34;sparc\u0026#34;, \u0026#34;sparc-fbsd\u0026#34;, \u0026#34;sparc-solaris\u0026#34;, \u0026#34;sparc64-solaris\u0026#34;, \u0026#34;userland_BSD\u0026#34;, \u0026#34;userland_GNU\u0026#34;, \u0026#34;x64-cygwin\u0026#34;, \u0026#34;x64-macos\u0026#34;, \u0026#34;x64-solaris\u0026#34;, \u0026#34;x86\u0026#34;, \u0026#34;x86-cygwin\u0026#34;, \u0026#34;x86-fbsd\u0026#34;, \u0026#34;x86-linux\u0026#34;, \u0026#34;x86-macos\u0026#34;, \u0026#34;x86-solaris\u0026#34;, \u0026#34;x86-winnt\u0026#34; ], \u0026#34;use\u0026#34;: [ \u0026#34;amd64\u0026#34;, \u0026#34;elibc_glibc\u0026#34;, \u0026#34;ipv6\u0026#34;, \u0026#34;kernel_linux\u0026#34;, \u0026#34;nls\u0026#34;, \u0026#34;userland_GNU\u0026#34; ], \u0026#34;eapi\u0026#34;: \u0026#34;7\u0026#34;, \u0026#34;cxxflags\u0026#34;: \u0026#34;-mtune=generic -O2 -pipe\u0026#34;, \u0026#34;cflags\u0026#34;: \u0026#34;-mtune=generic -O2 -pipe\u0026#34;, \u0026#34;ldflags\u0026#34;: \u0026#34;-Wl,-O1 -Wl,--sort-common -Wl,--as-needed\u0026#34;, \u0026#34;chost\u0026#34;: \u0026#34;x86_64-pc-linux-gnu\u0026#34;, \u0026#34;bdepend\u0026#34;: \u0026#34;\u0026gt;=dev-lang/go-1.18 \u0026gt;=sys-kernel/linux-headers-4.15 sys-devel/gettext \u0026gt;=app-portage/elt-patches-20170815 !\u0026lt;sys-devel/gettext-0.18.1.1-r3 || ( \u0026gt;=sys-devel/automake-1.16.1:1.16 \u0026gt;=sys-devel/automake-1.15.1:1.15 ) \u0026gt;=sys-devel/autoconf-2.69 \u0026gt;=sys-devel/libtool-2.4 \u0026gt;=dev-lang/go-1.10\u0026#34;, \u0026#34;rdepend\u0026#34;: \u0026#34;app-arch/xz-utils app-arch/lz4 \u0026gt;=app-emulation/lxc-4.0.6 dev-lang/tcl dev-libs/libuv dev-libs/lzo \u0026gt;=dev-util/xdelta-3.0 net-dns/dnsmasq[dhcp,ipv6] net-firewall/ebtables net-firewall/iptables[ipv6] sys-apps/iproute2[ipv6] sys-fs/fuse:* sys-fs/lxcfs sys-fs/squashfs-tools[lzma] virtual/acl\u0026#34;, \u0026#34;depend\u0026#34;: \u0026#34;app-arch/xz-utils app-arch/lz4 \u0026gt;=app-emulation/lxc-4.0.6 dev-lang/tcl dev-libs/libuv dev-libs/lzo \u0026gt;=dev-util/xdelta-3.0 net-dns/dnsmasq[dhcp,ipv6] sys-apps/shadow\u0026#34;, \u0026#34;requires\u0026#34;: \u0026#34;x86_64: libacl.so.1 libc.so.6 libcap.so.2 libdl.so.2 libgcc_s.so.1 liblxc.so.1 liblz4.so.1 libpthread.so.0 libsqlite3.so.0 libudev.so.1 libutil.so.1 libuv.so.1\u0026#34;, \u0026#34;keywords\u0026#34;: \u0026#34;*\u0026#34;, \u0026#34;provides\u0026#34;: \u0026#34;x86_64: libdqlite.so.0 libraft.so.3\u0026#34;, \u0026#34;size\u0026#34;: \u0026#34;232869057\u0026#34;, \u0026#34;build_time\u0026#34;: \u0026#34;1679645369\u0026#34;, \u0026#34;cbuild\u0026#34;: \u0026#34;x86_64-pc-linux-gnu\u0026#34;, ... The Portage together with the Ebuild is a very powerful tool to compile and customize packages and the OS.
I began to play with Gentoo around the year 2003 when I was a student at the Computer Science University and in one of my first job. Yet, I remember now how much time was needed to compile the kernel in a Pentium 233Mhz (if I remember correctly the model) and how much time I used to improve the old systems and yet, how much time to download tarball with a 56Kbit Analogic Line. Gentoo helped a lot with this.
Compile everything and every time could be more expensive as time and costs, it\u0026rsquo;s so in 2005 is created Sabayon Linux or Sabayon (formerly RR4 Linux and RR64 Linux), an Italian Gentoo-based Linux distribution created by Fabio Erculiani. Sabayon followed the \u0026ldquo;out of the box\u0026rdquo; philosophy, aiming to give the user a wide number of applications ready to use and a self-configured operating system.
The Sabayon\u0026rsquo;s Package Management System called Entropy, developed by Fabio Erculiani and others extends the Gentoo Portage. The Portage downloads source-code and compiles it specifically for the target system, Entropy manages binary files from servers; the binary tarball packages are precompiled using the Gentoo Linux tree using emerge (the Portage tool).
On the other side of the world, at the beginning of 2008, is created the Funtoo Linux Linux distribution based on Gentoo Linux. It was created by Daniel Robbins after that the Gentoo Foundation doesn\u0026rsquo;t want to follow the ideas proposed by Robbins.
Thanks to the high quality of the solution and the easy customization in 2009 Google chose to create the Chrome OS (or Chromium OS) based on Gentoo (previously based on Ubuntu).
Between battles with Solaris servers and Debian\u0026rsquo;s VMs on beginning working on supplying ready-to-use binary packages for my Clients, my colleague, and friend Walter Curtetti (aka kurtz81) shared with me a new Distribution that is based on Gentoo: Sabayon. So, in 2010, I started my interest on follow the Sabayon Team before as a Contributor and then as Developer in 2018.
In my years in Sabayon, I saw different things happen and I learn what are the areas that could be improved in a distribution and/or critical:
The Sabayon\u0026rsquo;s Packages Manager is written in Python and every time a new release of Python (for example from 3.6 to 3.7) was upgraded it was needed to support both releases for a bit of time and then to drop the previous to do an upgrade safe.
The big change in converting the /lib from a link to a directory it\u0026rsquo;s been a disaster, but it\u0026rsquo;s funny now to see the new SystemD release now prefers the old way with /lib and /usr/lib as links.
The pros to having Entropy as an extension of the Portage are fewer of the cons when Gentoo had to begin to do changes to the Portage that was not so easy to integrate with a code old to rewrite.
Supply a way for users to build additional packages through the SARK engine was really difficult because the Portage tree changes so fastly that was injected often dependencies that were for the sabayon core repository. We have tried with a Portage tree fixed to a specific Git Hash but also in this case sometimes wasn\u0026rsquo;t sufficient.
Entropy doesn\u0026rsquo;t handle correctly a reboot of a repository or only with forcing the sync of the repository.
With these words I don\u0026rsquo;t want to say that Entropy was bad, instead, it\u0026rsquo;s been a good product but without good maintenance of the code, it becomes slowly obsolete and too hard to fix.
After years, what is been an important element for the change is been following a path where the PMS was statically linked, without dependencies to other elements of the system that could be a problem in the upgrade phase. And so, in 2019/2020, this idea became real through a tool written in Golang: and it that born the luet project. With the release of the first versions, we have decided to a rebranding with the name Mocaccino OS.
The luet project was born to be a tool that is no more strictly connected to a specific compilation engine, thanks to the experience had with Entropy, but also free to use existing compilation systems without losing the prons. To reach this target it uses primarily Docker containers and this ensures reproducibility and isolation. Thanks to this independence, luet can be used to supply generic binary from every distributions.
The second big problem to resolve is been to have a more managed environment where builds and upgrades packages at the same time in a way independent but more controlled. It\u0026rsquo;s here that I began to work with integration between Mocaccino and Funtoo because it seems to me a better solution than Gentoo for our targets. I really appreciate the separation done by Funtoo in Kits and the use of branches to separate the big changes and personally, I think that these are been a very good choice by Daniel Robbins.
This integration starts my collaboration with Daniel Robbins and the announcement of the joining between Sabayon and Funtoo to work together.
Thanks to the support of Daniel Robbins, the reposcan tool was borns inside the metatools project to help in this integration. The reposcan tool generates the JSON files with the Portage metadata of every kit, these files are then used by the luet-portage-converter tool to generate the luet specs used for build packages.
The luet-portage-converter tool uses the reposcan files to calculate the build dependencies like the runtime dependencies based on the USE flags defined in its specs and then executes simplification stages to reduce the dependencies complexity. For example, if dependency A is an RDEPEND of the package B and C and package C has also a dependency to B, then we could avoid adding A as a dependency of C because is already injected by B.
Macaroni OS Era begins # In the middle of all this, at some point, my ideas about proceeding and changing luet, to continue the Funtoo integration, and with the Mocaccino Desktop release begins to be considered wrong and not accepted. In December 2021, I left the Sabayon/Mocaccino Team and create the Macaroni OS Project with the precious support of Daniel Robbins that help me bootstrap the domain macaroni.funtoo.org under the Funtoo umbrella.
In January 2023, I buy the domain macaronios.org and create the Github project macaroni-os so that the Macaroni OS became an independent project always strictly related to the Funtoo Community.
I want to thank every people that this long story is been part of it, in the bad and in the good, without you all of this will not be present. Good luck and good life to all of you.
And so, this is the begin\u0026hellip;
`})})()