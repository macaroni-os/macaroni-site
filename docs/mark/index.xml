<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MARK Stack on Macaroni OS</title>
    <link>https://www.macaronios.org/docs/mark/</link>
    <description>Recent content in MARK Stack on Macaroni OS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://www.macaronios.org/docs/mark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Became a Contributor</title>
      <link>https://www.macaronios.org/docs/mark/contributors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.macaronios.org/docs/mark/contributors/</guid>
      <description>üèÑ Became a Contributor # Macaroni OS is here thanks to the hard work done in the free time from all Macaroni team, time that is limited and without the support of contributors through PR will be hard keep the OS updated and improve.
Any help is welcome, so, if you want support us also just testing the tree will be helpful. Instead, if you want to help the development and the evolution of Macaroni you can start with contribute to our kit-fixups repository where are present the specs of our autogen for mark-devkit tool.</description>
    </item>
    
    <item>
      <title>Differences between MARK and Sambuca</title>
      <link>https://www.macaronios.org/docs/mark/sambuca-diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.macaronios.org/docs/mark/sambuca-diff/</guid>
      <description>Main differences between MARK and Sambuca # 1. Static UID/GID # The system UID (user ID) and GID (group ID) of the major services are statically allocated and managed through the entities tool and his catalog. This helps to have a more linear installation between systems and help on share network filesystems like NFS.
It is possible to see the list of the available uid/gid with the following commands:</description>
    </item>
    
    <item>
      <title>From Phoenix to MARK</title>
      <link>https://www.macaronios.org/docs/mark/phoenix2mark/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.macaronios.org/docs/mark/phoenix2mark/</guid>
      <description>From Phoenix to MARK and return # The first thing to check before working with MARK from a Phoenix or Terragon rootfs is the subsets configured on anise:
$&amp;gt; anise subsets list üç® Subsets enabled: * portage Portage metadata and files. * devel Includes and devel files. Needed for compilation. * desktop Excluding the desktop subset that is present only on Phoenix release, the mandatory subsets are portage and devel.</description>
    </item>
    
    <item>
      <title>MARK Devkit</title>
      <link>https://www.macaronios.org/docs/mark/markdevkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.macaronios.org/docs/mark/markdevkit/</guid>
      <description>üöÄ MARK Development Kit # The mark-devkit tool is one of the core module in the MARK OS.
Autogen # The autogen command is used by M.A.R.K. workflow to autogen new ebuilds in a similar way at metatools before but with a better integration for our CD/CI chain and for a CDN / Object Store integration.
These the major differences:
it doesn&amp;rsquo;t follow a monolitic process on autogen ebuilds. It permits defined different YAML files with a specific target Kit.</description>
    </item>
    
  </channel>
</rss>
